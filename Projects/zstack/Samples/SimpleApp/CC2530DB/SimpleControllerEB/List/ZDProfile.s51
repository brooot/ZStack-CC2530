///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V10.30.1.6000 for 8051              30/Aug/2019  09:36:14
// Copyright 2004-2018 IAR Systems AB.
// PC-locked license - IAR Embedded Workbench for 8051
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        D:\ZStack-CC2530-2.5.1a\Components\stack\zdo\ZDProfile.c
//    Command line       =  
//        -f C:\Users\Ð¡»ðÁú\AppData\Local\Temp\EW3306.tmp
//        (D:\ZStack-CC2530-2.5.1a\Components\stack\zdo\ZDProfile.c -D
//        HOLD_AUTO_START -D BUILD_ALL_DEVICES -D REFLECTOR -D NV_INIT -D
//        xNV_RESTORE -D xZTOOL_P1 -D xMT_TASK -D xMT_SYS_FUNC -D xMT_SAPI_FUNC
//        -D xMT_SAPI_CB_FUNC -lC
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\SimpleControllerEB\List
//        -lA
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\SimpleControllerEB\List
//        --diag_suppress Pe001,Pa010 -o
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\SimpleControllerEB\Obj
//        -e --debug --core=plain --dptr=16,1 --data_model=large
//        --code_model=banked --calling_convention=xdata_reentrant
//        --place_constants=data_rom --nr_virtual_regs 16 -f
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
//        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
//        -DZDO_COORDINATOR -DRTR_NWK) -f
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg
//        (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x02000000 -DZDAPP_CONFIG_PAN_ID=0xFFF0
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
//        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
//        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
//        -DREJOIN_POLL_RATE=440) -I
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\
//        -I
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\..\Source\
//        -I
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\..\..\..\ZMain\TI2530DB\
//        -I
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\..\..\..\..\..\Components\hal\include\
//        -I
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\
//        -I
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\..\..\..\..\..\Components\mac\include\
//        -I
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\..\..\..\..\..\Components\mac\high_level\
//        -I
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\
//        -I
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\
//        -I
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\..\..\..\..\..\Components\mt\
//        -I
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\..\..\..\..\..\Components\osal\include\
//        -I
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\..\..\..\..\..\Components\services\saddr\
//        -I
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\..\..\..\..\..\Components\services\sdata\
//        -I
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\..\..\..\..\..\Components\stack\af\
//        -I
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\..\..\..\..\..\Components\stack\nwk\
//        -I
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\..\..\..\..\..\Components\stack\sapi\
//        -I
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\..\..\..\..\..\Components\stack\sec\
//        -I
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\..\..\..\..\..\Components\stack\sys\
//        -I
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\..\..\..\..\..\Components\stack\zdo\
//        -I
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\..\..\..\..\..\Components\zmac\
//        -I
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\..\..\..\..\..\Components\zmac\f8w\
//        -Ohz --require_prototypes --no_code_motion)
//    Locale             =  Chinese (Simplified)_CHN.936
//    List file          =  
//        D:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SimpleApp\CC2530DB\SimpleControllerEB\List\ZDProfile.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME ZDProfile

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__register_banks", "*"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?V0
        EXTERN ?V1
        EXTERN ?V2
        EXTERN ?V3
        EXTERN ?V4
        EXTERN ?V5
        EXTERN ?V6
        EXTERN ?V7
        EXTERN ?V8
        EXTERN ?V9
        EXTERN ?V10
        EXTERN ?V11
        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?PUSH_XSTACK8_X_FOUR
        EXTERN ?PUSH_XSTACK8_X_TWO
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?S_SHL
        EXTERN ?US_SHR
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTACK_DISP101_8
        EXTERN ?XSTACK_DISP102_8
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC `??ZDO_RegisterForZDOMsg::?relay`
        FUNCTION `??ZDO_RegisterForZDOMsg::?relay`,0203H
        PUBLIC `??ZDO_RemoveRegisteredCB::?relay`
        FUNCTION `??ZDO_RemoveRegisteredCB::?relay`,0203H
        PUBLIC `??ZDO_SendMsgCBs::?relay`
        FUNCTION `??ZDO_SendMsgCBs::?relay`,0203H
        PUBLIC `??ZDP_BindUnbindReq::?relay`
        FUNCTION `??ZDP_BindUnbindReq::?relay`,0203H
        PUBLIC `??ZDP_DeviceAnnce::?relay`
        FUNCTION `??ZDP_DeviceAnnce::?relay`,0203H
        PUBLIC `??ZDP_EPRsp::?relay`
        FUNCTION `??ZDP_EPRsp::?relay`,0203H
        PUBLIC `??ZDP_EndDeviceBindReq::?relay`
        FUNCTION `??ZDP_EndDeviceBindReq::?relay`,0203H
        PUBLIC `??ZDP_GenericRsp::?relay`
        FUNCTION `??ZDP_GenericRsp::?relay`,0203H
        PUBLIC `??ZDP_IEEEAddrReq::?relay`
        FUNCTION `??ZDP_IEEEAddrReq::?relay`,0203H
        PUBLIC `??ZDP_IncomingData::?relay`
        FUNCTION `??ZDP_IncomingData::?relay`,0203H
        PUBLIC `??ZDP_MatchDescReq::?relay`
        FUNCTION `??ZDP_MatchDescReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtBindRsp::?relay`
        FUNCTION `??ZDP_MgmtBindRsp::?relay`,0203H
        PUBLIC `??ZDP_MgmtDirectJoinReq::?relay`
        FUNCTION `??ZDP_MgmtDirectJoinReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtLeaveReq::?relay`
        FUNCTION `??ZDP_MgmtLeaveReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtLqiRsp::?relay`
        FUNCTION `??ZDP_MgmtLqiRsp::?relay`,0203H
        PUBLIC `??ZDP_MgmtNwkDiscReq::?relay`
        FUNCTION `??ZDP_MgmtNwkDiscReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtNwkDiscRsp::?relay`
        FUNCTION `??ZDP_MgmtNwkDiscRsp::?relay`,0203H
        PUBLIC `??ZDP_MgmtNwkUpdateNotify::?relay`
        FUNCTION `??ZDP_MgmtNwkUpdateNotify::?relay`,0203H
        PUBLIC `??ZDP_MgmtNwkUpdateReq::?relay`
        FUNCTION `??ZDP_MgmtNwkUpdateReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtPermitJoinReq::?relay`
        FUNCTION `??ZDP_MgmtPermitJoinReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtRtgRsp::?relay`
        FUNCTION `??ZDP_MgmtRtgRsp::?relay`,0203H
        PUBLIC `??ZDP_NWKAddrOfInterestReq::?relay`
        FUNCTION `??ZDP_NWKAddrOfInterestReq::?relay`,0203H
        PUBLIC `??ZDP_NodeDescMsg::?relay`
        FUNCTION `??ZDP_NodeDescMsg::?relay`,0203H
        PUBLIC `??ZDP_NwkAddrReq::?relay`
        FUNCTION `??ZDP_NwkAddrReq::?relay`,0203H
        PUBLIC `??ZDP_PowerDescMsg::?relay`
        FUNCTION `??ZDP_PowerDescMsg::?relay`,0203H
        PUBLIC `??ZDP_SendData::?relay`
        FUNCTION `??ZDP_SendData::?relay`,0203H
        PUBLIC `??ZDP_ServerDiscReq::?relay`
        FUNCTION `??ZDP_ServerDiscReq::?relay`,0203H
        PUBLIC `??ZDP_ServerDiscRsp::?relay`
        FUNCTION `??ZDP_ServerDiscRsp::?relay`,0203H
        PUBLIC `??ZDP_SimpleDescMsg::?relay`
        FUNCTION `??ZDP_SimpleDescMsg::?relay`,0203H
        PUBLIC `??ZDP_SimpleDescReq::?relay`
        FUNCTION `??ZDP_SimpleDescReq::?relay`,0203H
        PUBLIC `??ZDP_UserDescRsp::?relay`
        FUNCTION `??ZDP_UserDescRsp::?relay`,0203H
        PUBLIC `??ZDP_UserDescSet::?relay`
        FUNCTION `??ZDP_UserDescSet::?relay`,0203H
        FUNCTION `??fillAndSend::?relay`,0203H
        PUBLIC `??zdpProcessAddrReq::?relay`
        FUNCTION `??zdpProcessAddrReq::?relay`,0203H
        PUBLIC ZDO_RegisterForZDOMsg
        FUNCTION ZDO_RegisterForZDOMsg,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_RemoveRegisteredCB
        FUNCTION ZDO_RemoveRegisteredCB,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ZDO_SendMsgCBs
        FUNCTION ZDO_SendMsgCBs,0a1203H
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 19, STACK
        PUBLIC ZDP_AF_ENDPOINT
        PUBLIC ZDP_BindUnbindReq
        FUNCTION ZDP_BindUnbindReq,0a1203H
        ARGFRAME XSTACK, 8, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDP_DeviceAnnce
        FUNCTION ZDP_DeviceAnnce,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDP_EPRsp
        FUNCTION ZDP_EPRsp,0a1203H
        ARGFRAME XSTACK, 7, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 19, STACK
        PUBLIC ZDP_EndDeviceBindReq
        FUNCTION ZDP_EndDeviceBindReq,0a1203H
        ARGFRAME XSTACK, 9, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC ZDP_GenericRsp
        FUNCTION ZDP_GenericRsp,021203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_IEEEAddrReq
        FUNCTION ZDP_IEEEAddrReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDP_IncomingData
        FUNCTION ZDP_IncomingData,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 31, STACK
        PUBLIC ZDP_MatchDescReq
        FUNCTION ZDP_MatchDescReq,0a1203H
        ARGFRAME XSTACK, 8, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDP_MgmtBindRsp
        FUNCTION ZDP_MgmtBindRsp,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDP_MgmtDirectJoinReq
        FUNCTION ZDP_MgmtDirectJoinReq,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDP_MgmtLeaveReq
        FUNCTION ZDP_MgmtLeaveReq,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDP_MgmtLqiRsp
        FUNCTION ZDP_MgmtLqiRsp,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC ZDP_MgmtNwkDiscReq
        FUNCTION ZDP_MgmtNwkDiscReq,0a1203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDP_MgmtNwkDiscRsp
        FUNCTION ZDP_MgmtNwkDiscRsp,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDP_MgmtNwkUpdateNotify
        FUNCTION ZDP_MgmtNwkUpdateNotify,0a1203H
        ARGFRAME XSTACK, 12, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDP_MgmtNwkUpdateReq
        FUNCTION ZDP_MgmtNwkUpdateReq,0a1203H
        ARGFRAME XSTACK, 6, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDP_MgmtPermitJoinReq
        FUNCTION ZDP_MgmtPermitJoinReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_MgmtRtgRsp
        FUNCTION ZDP_MgmtRtgRsp,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDP_NWKAddrOfInterestReq
        FUNCTION ZDP_NWKAddrOfInterestReq,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_NodeDescMsg
        FUNCTION ZDP_NodeDescMsg,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_NwkAddrReq
        FUNCTION ZDP_NwkAddrReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDP_PowerDescMsg
        FUNCTION ZDP_PowerDescMsg,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_SendData
        FUNCTION ZDP_SendData,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDP_ServerDiscReq
        FUNCTION ZDP_ServerDiscReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDP_ServerDiscRsp
        FUNCTION ZDP_ServerDiscRsp,0a1203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 13, STACK
        PUBLIC ZDP_SimpleDescMsg
        FUNCTION ZDP_SimpleDescMsg,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDP_SimpleDescReq
        FUNCTION ZDP_SimpleDescReq,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_TransID
        PUBLIC ZDP_TxOptions
        PUBLIC ZDP_UserDescRsp
        FUNCTION ZDP_UserDescRsp,0a1203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC ZDP_UserDescSet
        FUNCTION ZDP_UserDescSet,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        FUNCTION fillAndSend,0a1203H
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 35, STACK
        PUBLIC zdoMsgCBs
        PUBLIC zdpMsgProcs
        PUBLIC zdpProcessAddrReq
        FUNCTION zdpProcessAddrReq,0a1603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 34, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
AF_DataRequest      SYMBOL "AF_DataRequest"
`??AF_DataRequest::?relay` SYMBOL "?relay", AF_DataRequest
AddrMgrEntryGet     SYMBOL "AddrMgrEntryGet"
`??AddrMgrEntryGet::?relay` SYMBOL "?relay", AddrMgrEntryGet
AssocGetWithExt     SYMBOL "AssocGetWithExt"
`??AssocGetWithExt::?relay` SYMBOL "?relay", AssocGetWithExt
AssocGetWithShort   SYMBOL "AssocGetWithShort"
`??AssocGetWithShort::?relay` SYMBOL "?relay", AssocGetWithShort
AssocMakeList       SYMBOL "AssocMakeList"
`??AssocMakeList::?relay` SYMBOL "?relay", AssocMakeList
NLME_GetExtAddr     SYMBOL "NLME_GetExtAddr"
`??NLME_GetExtAddr::?relay` SYMBOL "?relay", NLME_GetExtAddr
NLME_GetShortAddr   SYMBOL "NLME_GetShortAddr"
`??NLME_GetShortAddr::?relay` SYMBOL "?relay", NLME_GetShortAddr
ZDApp_InMsgCB       SYMBOL "ZDApp_InMsgCB"
`??ZDApp_InMsgCB::?relay` SYMBOL "?relay", ZDApp_InMsgCB
`?<Name ZDO_ProcessActiveEPR 16>` SYMBOL "ZDO_ProcessActiveEPReq"
`??ZDO_ProcessActiveEPReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessActiveEPR 16>`
`?<Name ZDO_ProcessDeviceAnn 18>` SYMBOL "ZDO_ProcessDeviceAnnce"
`??ZDO_ProcessDeviceAnnce::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessDeviceAnn 18>`
`?<Name ZDO_ProcessMatchDesc 20>` SYMBOL "ZDO_ProcessMatchDescReq"
`??ZDO_ProcessMatchDescReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessMatchDesc 20>`
`?<Name ZDO_ProcessNodeDescR 22>` SYMBOL "ZDO_ProcessNodeDescReq"
`??ZDO_ProcessNodeDescReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessNodeDescR 22>`
`?<Name ZDO_ProcessPowerDesc 24>` SYMBOL "ZDO_ProcessPowerDescReq"
`??ZDO_ProcessPowerDescReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessPowerDesc 24>`
`?<Name ZDO_ProcessSimpleDes 26>` SYMBOL "ZDO_ProcessSimpleDescReq"
`??ZDO_ProcessSimpleDescReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessSimpleDes 26>`
osal_buffer_uint32  SYMBOL "osal_buffer_uint32"
`??osal_buffer_uint32::?relay` SYMBOL "?relay", osal_buffer_uint32
osal_mem_alloc      SYMBOL "osal_mem_alloc"
`??osal_mem_alloc::?relay` SYMBOL "?relay", osal_mem_alloc
osal_mem_free       SYMBOL "osal_mem_free"
`??osal_mem_free::?relay` SYMBOL "?relay", osal_mem_free
osal_memcpy         SYMBOL "osal_memcpy"
`??osal_memcpy::?relay` SYMBOL "?relay", osal_memcpy
osal_memset         SYMBOL "osal_memset"
`??osal_memset::?relay` SYMBOL "?relay", osal_memset
osal_msg_allocate   SYMBOL "osal_msg_allocate"
`??osal_msg_allocate::?relay` SYMBOL "?relay", osal_msg_allocate
osal_msg_send       SYMBOL "osal_msg_send"
`??osal_msg_send::?relay` SYMBOL "?relay", osal_msg_send
sAddrExtCmp         SYMBOL "sAddrExtCmp"
`??sAddrExtCmp::?relay` SYMBOL "?relay", sAddrExtCmp
sAddrExtCpy         SYMBOL "sAddrExtCpy"
`??sAddrExtCpy::?relay` SYMBOL "?relay", sAddrExtCpy
ZDO_RegisterForZDOMsg SYMBOL "ZDO_RegisterForZDOMsg"
`??ZDO_RegisterForZDOMsg::?relay` SYMBOL "?relay", ZDO_RegisterForZDOMsg
ZDO_RemoveRegisteredCB SYMBOL "ZDO_RemoveRegisteredCB"
`??ZDO_RemoveRegisteredCB::?relay` SYMBOL "?relay", ZDO_RemoveRegisteredCB
ZDO_SendMsgCBs      SYMBOL "ZDO_SendMsgCBs"
`??ZDO_SendMsgCBs::?relay` SYMBOL "?relay", ZDO_SendMsgCBs
ZDP_BindUnbindReq   SYMBOL "ZDP_BindUnbindReq"
`??ZDP_BindUnbindReq::?relay` SYMBOL "?relay", ZDP_BindUnbindReq
ZDP_DeviceAnnce     SYMBOL "ZDP_DeviceAnnce"
`??ZDP_DeviceAnnce::?relay` SYMBOL "?relay", ZDP_DeviceAnnce
ZDP_EPRsp           SYMBOL "ZDP_EPRsp"
`??ZDP_EPRsp::?relay` SYMBOL "?relay", ZDP_EPRsp
ZDP_EndDeviceBindReq SYMBOL "ZDP_EndDeviceBindReq"
`??ZDP_EndDeviceBindReq::?relay` SYMBOL "?relay", ZDP_EndDeviceBindReq
ZDP_GenericRsp      SYMBOL "ZDP_GenericRsp"
`??ZDP_GenericRsp::?relay` SYMBOL "?relay", ZDP_GenericRsp
ZDP_IEEEAddrReq     SYMBOL "ZDP_IEEEAddrReq"
`??ZDP_IEEEAddrReq::?relay` SYMBOL "?relay", ZDP_IEEEAddrReq
ZDP_IncomingData    SYMBOL "ZDP_IncomingData"
`??ZDP_IncomingData::?relay` SYMBOL "?relay", ZDP_IncomingData
ZDP_MatchDescReq    SYMBOL "ZDP_MatchDescReq"
`??ZDP_MatchDescReq::?relay` SYMBOL "?relay", ZDP_MatchDescReq
ZDP_MgmtBindRsp     SYMBOL "ZDP_MgmtBindRsp"
`??ZDP_MgmtBindRsp::?relay` SYMBOL "?relay", ZDP_MgmtBindRsp
ZDP_MgmtDirectJoinReq SYMBOL "ZDP_MgmtDirectJoinReq"
`??ZDP_MgmtDirectJoinReq::?relay` SYMBOL "?relay", ZDP_MgmtDirectJoinReq
ZDP_MgmtLeaveReq    SYMBOL "ZDP_MgmtLeaveReq"
`??ZDP_MgmtLeaveReq::?relay` SYMBOL "?relay", ZDP_MgmtLeaveReq
ZDP_MgmtLqiRsp      SYMBOL "ZDP_MgmtLqiRsp"
`??ZDP_MgmtLqiRsp::?relay` SYMBOL "?relay", ZDP_MgmtLqiRsp
ZDP_MgmtNwkDiscReq  SYMBOL "ZDP_MgmtNwkDiscReq"
`??ZDP_MgmtNwkDiscReq::?relay` SYMBOL "?relay", ZDP_MgmtNwkDiscReq
ZDP_MgmtNwkDiscRsp  SYMBOL "ZDP_MgmtNwkDiscRsp"
`??ZDP_MgmtNwkDiscRsp::?relay` SYMBOL "?relay", ZDP_MgmtNwkDiscRsp
ZDP_MgmtNwkUpdateNotify SYMBOL "ZDP_MgmtNwkUpdateNotify"
`??ZDP_MgmtNwkUpdateNotify::?relay` SYMBOL "?relay", ZDP_MgmtNwkUpdateNotify
ZDP_MgmtNwkUpdateReq SYMBOL "ZDP_MgmtNwkUpdateReq"
`??ZDP_MgmtNwkUpdateReq::?relay` SYMBOL "?relay", ZDP_MgmtNwkUpdateReq
ZDP_MgmtPermitJoinReq SYMBOL "ZDP_MgmtPermitJoinReq"
`??ZDP_MgmtPermitJoinReq::?relay` SYMBOL "?relay", ZDP_MgmtPermitJoinReq
ZDP_MgmtRtgRsp      SYMBOL "ZDP_MgmtRtgRsp"
`??ZDP_MgmtRtgRsp::?relay` SYMBOL "?relay", ZDP_MgmtRtgRsp
ZDP_NWKAddrOfInterestReq SYMBOL "ZDP_NWKAddrOfInterestReq"
`??ZDP_NWKAddrOfInterestReq::?relay` SYMBOL "?relay", ZDP_NWKAddrOfInterestReq
ZDP_NodeDescMsg     SYMBOL "ZDP_NodeDescMsg"
`??ZDP_NodeDescMsg::?relay` SYMBOL "?relay", ZDP_NodeDescMsg
ZDP_NwkAddrReq      SYMBOL "ZDP_NwkAddrReq"
`??ZDP_NwkAddrReq::?relay` SYMBOL "?relay", ZDP_NwkAddrReq
ZDP_PowerDescMsg    SYMBOL "ZDP_PowerDescMsg"
`??ZDP_PowerDescMsg::?relay` SYMBOL "?relay", ZDP_PowerDescMsg
ZDP_SendData        SYMBOL "ZDP_SendData"
`??ZDP_SendData::?relay` SYMBOL "?relay", ZDP_SendData
ZDP_ServerDiscReq   SYMBOL "ZDP_ServerDiscReq"
`??ZDP_ServerDiscReq::?relay` SYMBOL "?relay", ZDP_ServerDiscReq
ZDP_ServerDiscRsp   SYMBOL "ZDP_ServerDiscRsp"
`??ZDP_ServerDiscRsp::?relay` SYMBOL "?relay", ZDP_ServerDiscRsp
ZDP_SimpleDescMsg   SYMBOL "ZDP_SimpleDescMsg"
`??ZDP_SimpleDescMsg::?relay` SYMBOL "?relay", ZDP_SimpleDescMsg
ZDP_SimpleDescReq   SYMBOL "ZDP_SimpleDescReq"
`??ZDP_SimpleDescReq::?relay` SYMBOL "?relay", ZDP_SimpleDescReq
ZDP_UserDescRsp     SYMBOL "ZDP_UserDescRsp"
`??ZDP_UserDescRsp::?relay` SYMBOL "?relay", ZDP_UserDescRsp
ZDP_UserDescSet     SYMBOL "ZDP_UserDescSet"
`??ZDP_UserDescSet::?relay` SYMBOL "?relay", ZDP_UserDescSet
zdpProcessAddrReq   SYMBOL "zdpProcessAddrReq"
`??zdpProcessAddrReq::?relay` SYMBOL "?relay", zdpProcessAddrReq

        EXTERN `??AF_DataRequest::?relay`
        FUNCTION `??AF_DataRequest::?relay`,00H
        EXTERN `??AddrMgrEntryGet::?relay`
        FUNCTION `??AddrMgrEntryGet::?relay`,00H
        EXTERN `??AssocGetWithExt::?relay`
        FUNCTION `??AssocGetWithExt::?relay`,00H
        EXTERN `??AssocGetWithShort::?relay`
        FUNCTION `??AssocGetWithShort::?relay`,00H
        EXTERN `??AssocMakeList::?relay`
        FUNCTION `??AssocMakeList::?relay`,00H
        EXTERN `??NLME_GetExtAddr::?relay`
        FUNCTION `??NLME_GetExtAddr::?relay`,00H
        EXTERN `??NLME_GetShortAddr::?relay`
        FUNCTION `??NLME_GetShortAddr::?relay`,00H
        EXTERN `??ZDApp_InMsgCB::?relay`
        FUNCTION `??ZDApp_InMsgCB::?relay`,00H
        EXTERN `??ZDO_ProcessActiveEPReq::?relay`
        FUNCTION `??ZDO_ProcessActiveEPReq::?relay`,00H
        EXTERN `??ZDO_ProcessDeviceAnnce::?relay`
        FUNCTION `??ZDO_ProcessDeviceAnnce::?relay`,00H
        EXTERN `??ZDO_ProcessMatchDescReq::?relay`
        FUNCTION `??ZDO_ProcessMatchDescReq::?relay`,00H
        EXTERN `??ZDO_ProcessNodeDescReq::?relay`
        FUNCTION `??ZDO_ProcessNodeDescReq::?relay`,00H
        EXTERN `??ZDO_ProcessPowerDescReq::?relay`
        FUNCTION `??ZDO_ProcessPowerDescReq::?relay`,00H
        EXTERN `??ZDO_ProcessSimpleDescReq::?relay`
        FUNCTION `??ZDO_ProcessSimpleDescReq::?relay`,00H
        EXTERN `??osal_buffer_uint32::?relay`
        FUNCTION `??osal_buffer_uint32::?relay`,00H
        EXTERN `??osal_mem_alloc::?relay`
        FUNCTION `??osal_mem_alloc::?relay`,00H
        EXTERN `??osal_mem_free::?relay`
        FUNCTION `??osal_mem_free::?relay`,00H
        EXTERN `??osal_memcpy::?relay`
        FUNCTION `??osal_memcpy::?relay`,00H
        EXTERN `??osal_memset::?relay`
        FUNCTION `??osal_memset::?relay`,00H
        EXTERN `??osal_msg_allocate::?relay`
        FUNCTION `??osal_msg_allocate::?relay`,00H
        EXTERN `??osal_msg_send::?relay`
        FUNCTION `??osal_msg_send::?relay`,00H
        EXTERN `??sAddrExtCmp::?relay`
        FUNCTION `??sAddrExtCmp::?relay`,00H
        EXTERN `??sAddrExtCpy::?relay`
        FUNCTION `??sAddrExtCpy::?relay`,00H
        EXTERN AF_DataRequest
        FUNCTION AF_DataRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryGet
        FUNCTION AddrMgrEntryGet,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocGetWithExt
        FUNCTION AssocGetWithExt,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocGetWithShort
        FUNCTION AssocGetWithShort,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocMakeList
        FUNCTION AssocMakeList,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetExtAddr
        FUNCTION NLME_GetExtAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetShortAddr
        FUNCTION NLME_GetShortAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDAppNwkAddr
        EXTERN ZDApp_InMsgCB
        FUNCTION ZDApp_InMsgCB,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDApp_epDesc
        EXTERN osal_buffer_uint32
        FUNCTION osal_buffer_uint32,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_free
        FUNCTION osal_mem_free,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memset
        FUNCTION osal_memset,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_allocate
        FUNCTION osal_msg_allocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_send
        FUNCTION osal_msg_send,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCmp
        FUNCTION sAddrExtCmp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCpy
        FUNCTION sAddrExtCpy,0202H
        ARGFRAME ISTACK, 1, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN saveExtAddr
        EXTERN zgDeviceLogicalType

// D:\ZStack-CC2530-2.5.1a\Components\stack\zdo\ZDProfile.c
//    1 /**************************************************************************************************
//    2   Filename:       ZDProfile.c
//    3   Revised:        $Date: 2010-10-13 10:54:13 -0700 (Wed, 13 Oct 2010) $
//    4   Revision:       $Revision: 24112 $
//    5 
//    6   Description:    This is the Zigbee Device Profile.
//    7 
//    8 
//    9   Copyright 2004-2010 Texas Instruments Incorporated. All rights reserved.
//   10 
//   11   IMPORTANT: Your use of this Software is limited to those specific rights
//   12   granted under the terms of a software license agreement between the user
//   13   who downloaded the software, his/her employer (which must be your employer)
//   14   and Texas Instruments Incorporated (the "License").  You may not use this
//   15   Software unless you agree to abide by the terms of the License. The License
//   16   limits your use, and you acknowledge, that the Software may not be modified,
//   17   copied or distributed unless embedded on a Texas Instruments microcontroller
//   18   or used solely and exclusively in conjunction with a Texas Instruments radio
//   19   frequency transceiver, which is integrated into your product.  Other than for
//   20   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   21   works of, modify, distribute, perform, display or sell this Software and/or
//   22   its documentation for any purpose.
//   23 
//   24   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   25   PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   26   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   27   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   28   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   29   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   30   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   31   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   32   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   33   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   34   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   35 
//   36   Should you have any questions regarding your right to use this Software,
//   37   contact Texas Instruments Incorporated at www.TI.com.
//   38 **************************************************************************************************/
//   39 
//   40 /*********************************************************************
//   41  * INCLUDES
//   42  */
//   43 #include "ZComdef.h"
//   44 #include "OSAL.h"
//   45 #include "AF.h"
//   46 #include "NLMEDE.h"
//   47 #include "nwk_util.h"
//   48 #include "APS.h"
//   49 
//   50 #include "AddrMgr.h"
//   51 #include "ZDConfig.h"
//   52 #include "ZDProfile.h"
//   53 #include "ZDObject.h"
//   54 #include "ZDNwkMgr.h"
//   55 
//   56 #if defined( LCD_SUPPORTED )
//   57   #include "OnBoard.h"
//   58 #endif
//   59 
//   60 #include "nwk_util.h"
//   61 
//   62 #if defined( MT_ZDO_FUNC )
//   63   #include "MT_ZDO.h"
//   64 #endif
//   65 
//   66 /*********************************************************************
//   67  * MACROS
//   68  */
//   69 
//   70 #define ZADDR_TO_AFADDR( pZADDR, AFADDR ) {                            \ 
//   71   (AFADDR).endPoint = ZDP_AF_ENDPOINT;                                 \ 
//   72   (AFADDR).addrMode = (afAddrMode_t)(pZADDR)->addrMode;                \ 
//   73   (AFADDR).addr.shortAddr = (pZADDR)->addr.shortAddr;                  \ 
//   74 }
//   75 
//   76 #define FillAndSendBuffer( TRANSSEQ, ADDR, ID, LEN, BUF ) {     \ 
//   77   afStatus_t stat;                                    \ 
//   78   ZDP_TmpBuf = (BUF)+1;                               \ 
//   79   stat = fillAndSend( (TRANSSEQ), (ADDR), (ID), (LEN) );          \ 
//   80   osal_mem_free( (BUF) );                             \ 
//   81   ZDP_TmpBuf = ZDP_Buf+1;                             \ 
//   82   return stat;                                        \ 
//   83 }
//   84 
//   85 #define FillAndSendTxOptions( TRANSSEQ, ADDR, ID, LEN, TxO ) {  \ 
//   86   afStatus_t stat;                                    \ 
//   87   ZDP_TxOptions = (TxO);                              \ 
//   88   stat = fillAndSend( (TRANSSEQ), (ADDR), (ID), (LEN) );          \ 
//   89   ZDP_TxOptions = AF_TX_OPTIONS_NONE;                 \ 
//   90   return stat;                                        \ 
//   91 }
//   92 
//   93 #define FillAndSendBufferTxOptions( TRANSSEQ, ADDR, ID, LEN, BUF, TxO ) { \ 
//   94   afStatus_t stat;                                    \ 
//   95   ZDP_TmpBuf = (BUF)+1;                               \ 
//   96   ZDP_TxOptions = (TxO);                              \ 
//   97   stat = fillAndSend( (TRANSSEQ), (ADDR), (ID), (LEN) );          \ 
//   98   osal_mem_free( (BUF) );                             \ 
//   99   ZDP_TmpBuf = ZDP_Buf+1;                             \ 
//  100   ZDP_TxOptions = AF_TX_OPTIONS_NONE;                 \ 
//  101   return stat;                                        \ 
//  102 }
//  103 
//  104 /*********************************************************************
//  105  * CONSTANTS
//  106  */
//  107 
//  108 #define ZDP_BUF_SZ          80
//  109 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  110 CONST byte ZDP_AF_ENDPOINT = 0;
ZDP_AF_ENDPOINT:
        DB 0
//  111 
//  112 /*********************************************************************
//  113  * TYPEDEFS
//  114  */
//  115 typedef struct
//  116 {
//  117   void *next;
//  118   uint8 taskID;
//  119   uint16 clusterID;
//  120 } ZDO_MsgCB_t;
//  121 
//  122 
//  123 /*********************************************************************
//  124  * GLOBAL VARIABLES
//  125  */
//  126 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  127 byte ZDP_TransID = 0;
ZDP_TransID:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  128 
//  129 /*********************************************************************
//  130  * EXTERNAL VARIABLES
//  131  */
//  132 
//  133 extern endPointDesc_t ZDApp_epDesc;
//  134 
//  135 /*********************************************************************
//  136  * EXTERNAL FUNCTIONS
//  137  */
//  138 
//  139 /*********************************************************************
//  140  * LOCAL FUNCTIONS
//  141  */
//  142 
//  143 static afStatus_t fillAndSend( uint8 *transSeq, zAddrType_t *addr, cId_t clusterID, byte len );
//  144 uint8 ZDO_SendMsgCBs( zdoIncomingMsg_t *inMsg );
//  145 void zdpProcessAddrReq( zdoIncomingMsg_t *inMsg );
//  146 
//  147 /*********************************************************************
//  148  * LOCAL VARIABLES
//  149  */
//  150 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  151 static uint8  ZDP_Buf[ ZDP_BUF_SZ ];
ZDP_Buf:
        DS 80
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_I:XDATA:NOROOT(0)
//  152 static uint8 *ZDP_TmpBuf = ZDP_Buf+1;
ZDP_TmpBuf:
        DATA16
        DS 2
        REQUIRE `?<Initializer for ZDP_TmpBuf>`
        REQUIRE __INIT_XDATA_I
//  153 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  154 byte ZDP_TxOptions = AF_TX_OPTIONS_NONE;
ZDP_TxOptions:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  155 ZDO_MsgCB_t *zdoMsgCBs = (ZDO_MsgCB_t *)NULL;
zdoMsgCBs:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  156 
//  157 /*********************************************************************
//  158  * ZDO Message Processing table
//  159  */
//  160 
//  161 typedef void (*pfnZDPMsgProcessor)( zdoIncomingMsg_t *inMsg );
//  162 
//  163 typedef struct
//  164 {
//  165   uint16                clusterID;
//  166   pfnZDPMsgProcessor    pFn;
//  167 } zdpMsgProcItem_t;
//  168 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  169 CONST zdpMsgProcItem_t zdpMsgProcs[] =
zdpMsgProcs:
        DATA16
        DW 0
        DW `??zdpProcessAddrReq::?relay`
        DW 19
        DW `??ZDO_ProcessDeviceAnnce::?relay`
        DW 1
        DW `??zdpProcessAddrReq::?relay`
        DW 2
        DW `??ZDO_ProcessNodeDescReq::?relay`
        DW 3
        DW `??ZDO_ProcessPowerDescReq::?relay`
        DW 4
        DW `??ZDO_ProcessSimpleDescReq::?relay`
        DW 5
        DW `??ZDO_ProcessActiveEPReq::?relay`
        DW 6
        DW `??ZDO_ProcessMatchDescReq::?relay`
        DW 65535
        DW 0H
//  170 {
//  171 #if ( RFD_RCVC_ALWAYS_ON==TRUE ) || ( ZG_BUILD_RTR_TYPE )
//  172   // These aren't processed by sleeping end devices.
//  173   { NWK_addr_req,           zdpProcessAddrReq },
//  174   { Device_annce,           ZDO_ProcessDeviceAnnce },
//  175 #endif
//  176   { IEEE_addr_req,          zdpProcessAddrReq },
//  177   { Node_Desc_req,          ZDO_ProcessNodeDescReq },
//  178   { Power_Desc_req,         ZDO_ProcessPowerDescReq },
//  179   { Simple_Desc_req,        ZDO_ProcessSimpleDescReq },
//  180   { Active_EP_req,          ZDO_ProcessActiveEPReq },
//  181   { Match_Desc_req,         ZDO_ProcessMatchDescReq },
//  182 #if defined ( ZDO_MGMT_NWKDISC_RESPONSE )
//  183   { Mgmt_NWK_Disc_req,      ZDO_ProcessMgmtNwkDiscReq },
//  184 #endif
//  185 #if defined ( ZDO_MGMT_LQI_RESPONSE ) && ( ZG_BUILD_RTR_TYPE )
//  186   { Mgmt_Lqi_req,           ZDO_ProcessMgmtLqiReq },
//  187 #endif
//  188 #if defined ( ZDO_MGMT_RTG_RESPONSE ) && ( ZG_BUILD_RTR_TYPE )
//  189   { Mgmt_Rtg_req,           ZDO_ProcessMgmtRtgReq },
//  190 #endif
//  191 #if defined ( ZDO_MGMT_BIND_RESPONSE ) && defined ( REFLECTOR )
//  192   { Mgmt_Bind_req,          ZDO_ProcessMgmtBindReq },
//  193 #endif
//  194 #if defined ( ZDO_MGMT_JOINDIRECT_RESPONSE ) && ( ZG_BUILD_RTR_TYPE )
//  195   { Mgmt_Direct_Join_req,   ZDO_ProcessMgmtDirectJoinReq },
//  196 #endif
//  197 #if defined ( ZDO_MGMT_LEAVE_RESPONSE )
//  198   { Mgmt_Leave_req,         ZDO_ProcessMgmtLeaveReq },
//  199 #endif
//  200 #if defined ( ZDO_MGMT_PERMIT_JOIN_RESPONSE )  && ( ZG_BUILD_RTR_TYPE )
//  201   { Mgmt_Permit_Join_req,   ZDO_ProcessMgmtPermitJoinReq },
//  202 #endif
//  203 #if defined ( ZDO_USERDESC_RESPONSE )
//  204   { User_Desc_req,          ZDO_ProcessUserDescReq },
//  205 #endif
//  206 #if defined ( ZDO_USERDESCSET_RESPONSE )
//  207   { User_Desc_set,          ZDO_ProcessUserDescSet },
//  208 #endif
//  209 #if defined ( ZDO_SERVERDISC_RESPONSE )
//  210   { Server_Discovery_req,   ZDO_ProcessServerDiscReq },
//  211 #endif
//  212   {0xFFFF, NULL} // Last
//  213 };
//  214 
//  215 /*********************************************************************
//  216  * @fn          fillAndSend
//  217  *
//  218  * @brief       Combined to reduce space
//  219  *
//  220  * @param
//  221  * @param
//  222  *
//  223  * @return      afStatus_t
//  224  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  225 static afStatus_t fillAndSend( uint8 *transSeq, zAddrType_t *addr, cId_t clusterID, byte len )
fillAndSend:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function fillAndSend
        CODE
//  226 {
        FUNCALL fillAndSend, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL fillAndSend, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 12
        MOV       A,#-0xc
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       A,R4
        MOV       R6,A
        MOV       A,R5
        MOV       R7,A
        MOV       ?V4,R1
//  227   afAddrType_t afAddr;
//  228 
//  229   osal_memset( &afAddr, 0, sizeof(afAddrType_t) );
        ; Setup parameters for call to function osal_memset
        MOV       R4,#0xc
        MOV       R5,#0x0
        MOV       R1,#0x0
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
//  230   ZADDR_TO_AFADDR( addr, afAddr );
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_19:
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_66:
        LCALL     ??Subroutine131_0 & 0xFFFF
//  231 
//  232   *(ZDP_TmpBuf-1) = *transSeq;
??CrossCallReturnLabel_221:
        MOV       DPTR,#ZDP_TmpBuf
        MOVX      A,@DPTR
        ADD       A,#-0x1
        MOV       ?V2,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#-0x1
        MOV       ?V3,A
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOVX      A,@DPTR
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      @DPTR,A
//  233 
//  234   return AF_DataRequest( &afAddr, &ZDApp_epDesc, clusterID,
//  235                            (uint16)(len+1), (uint8*)(ZDP_TmpBuf-1),
//  236                            transSeq, ZDP_TxOptions,  AF_DEFAULT_RADIUS );
        ; Setup parameters for call to function AF_DataRequest
        MOV       ?V5,#0x1e
        MOV       R0,#?V5
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       A,?V4
        ADD       A,#0x1
        MOV       ?V0,A
        CLR       A
        ADDC      A,#0x0
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       A,#0x21
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       DPTR,#ZDP_TxOptions
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       R4,#ZDApp_epDesc & 0xff
        MOV       R5,#(ZDApp_epDesc >> 8) & 0xff
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??AF_DataRequest::?relay`; Banked call to: AF_DataRequest
        MOV       A,#0x9
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       A,#0xc
        LJMP      ?Subroutine0 & 0xFFFF
//  237 
//  238 }
          CFI EndBlock cfiBlock0
//  239 
//  240 /*********************************************************************
//  241  * @fn          ZDP_SendData
//  242  *
//  243  * @brief       This builds and send a request message that has
//  244  *              NWKAddrOfInterest as its only parameter.
//  245  *
//  246  * @param       dstAddr - destination address
//  247  * @param       cmd - clusterID
//  248  * @param       dataLen - number of bytes of data
//  249  * @param       data - pointer to the data
//  250  * @param       SecurityEnable - Security Options
//  251  *
//  252  * @return      afStatus_t
//  253  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  254 afStatus_t ZDP_SendData( uint8 *TransSeq, zAddrType_t *dstAddr, uint16 cmd,
ZDP_SendData:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function ZDP_SendData
        CODE
//  255                         byte len, uint8 *buf, byte SecurityEnable )
//  256 {
        FUNCALL ZDP_SendData, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV       A,R1
        MOV       R7,A
//  257   uint8 *pBuf = ZDP_TmpBuf;
        MOV       DPTR,#ZDP_TmpBuf
        LCALL     ??Subroutine117_0 & 0xFFFF
//  258   byte cnt = len;
??CrossCallReturnLabel_161:
        MOV       A,R1
        MOV       R6,A
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine145_0 & 0xFFFF
??CrossCallReturnLabel_308:
        SJMP      ??ZDP_SendData_0
//  259 
//  260   while ( cnt-- )
//  261   {
//  262     *pBuf++ = *buf++;
??ZDP_SendData_1:
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine139_0 & 0xFFFF
//  263   }
??CrossCallReturnLabel_279:
        MOV       R0,DPL
        MOV       R1,DPH
        MOV       DPL,?V2
        MOV       DPH,?V3
        INC       DPTR
        MOV       ?V2,DPL
        MOV       ?V3,DPH
??ZDP_SendData_0:
        MOV       A,#-0x1
        ADD       A,R6
        MOV       R6,A
        INC       A
        JNZ       ??ZDP_SendData_1
//  264 
//  265   FillAndSendTxOptions( TransSeq, dstAddr, cmd, len, ((SecurityEnable) ? AF_EN_SECURITY : 0) );
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       DPTR,#ZDP_TxOptions
        JZ        ??ZDP_SendData_2
        MOV       A,#0x40
        SJMP      ??ZDP_SendData_3
??ZDP_SendData_2:
        CLR       A
??ZDP_SendData_3:
        MOVX      @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       A,R7
        MOV       R1,A
        LCALL     ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_261:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,R1
        MOV       R1,A
        MOV       DPTR,#ZDP_TxOptions
        CLR       A
        MOVX      @DPTR,A
        LJMP      ??Subroutine127_0 & 0xFFFF
//  266 }
          CFI EndBlock cfiBlock1
//  267 
//  268 /*********************************************************************
//  269  * @fn          ZDP_NWKAddrOfInterestReq
//  270  *
//  271  * @brief       This builds and send a request message that has
//  272  *              NWKAddrOfInterest as its only parameter.
//  273  *
//  274  * @param       dstAddr - destination address
//  275  * @param       nwkAddr - 16 bit address
//  276  * @param       SecurityEnable - Security Options
//  277  *
//  278  * @return      afStatus_t
//  279  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  280 afStatus_t ZDP_NWKAddrOfInterestReq( zAddrType_t *dstAddr, uint16 nwkAddr,
ZDP_NWKAddrOfInterestReq:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
        CODE
//  281                                      byte cmd, byte SecurityEnable )
//  282 {
        FUNCALL ZDP_NWKAddrOfInterestReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  283   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  284 
//  285   ZDP_TmpBuf[0] = LO_UINT16( nwkAddr );
        LCALL     ?Subroutine16 & 0xFFFF
//  286   ZDP_TmpBuf[1] = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_15:
        MOVX      @DPTR,A
//  287 
//  288   return fillAndSend( &ZDP_TransID, dstAddr, cmd, 2 );
        ; Setup parameters for call to function fillAndSend
        MOV       A,R1
        MOV       ?V0,A
        LJMP      ?Subroutine2 & 0xFFFF
//  289 }
          CFI EndBlock cfiBlock2
//  290 
//  291 /*********************************************************************
//  292  * Address Requests
//  293  */
//  294 
//  295 /*********************************************************************
//  296  * @fn          ZDP_NwkAddrReq
//  297  *
//  298  * @brief       This builds and send a NWK_addr_req message.  This
//  299  *              function sends a broadcast message looking for a 16
//  300  *              bit address with a 64 bit address as bait.
//  301  *
//  302  * @param       IEEEAddress - looking for this device
//  303  * @param       SecurityEnable - Security Options
//  304  *
//  305  * @return      afStatus_t
//  306  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  307 afStatus_t ZDP_NwkAddrReq( uint8 *IEEEAddress, byte ReqType,
ZDP_NwkAddrReq:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
        CODE
//  308                            byte StartIndex, byte SecurityEnable )
//  309 {
        FUNCALL ZDP_NwkAddrReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_NwkAddrReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_NwkAddrReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 9
        MOV       A,#-0x9
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       ?V2,R1
        MOV       ?V3,R4
//  310   uint8 *pBuf = ZDP_TmpBuf;
        MOV       DPTR,#ZDP_TmpBuf
        LCALL     ?Subroutine40 & 0xFFFF
//  311   byte len = Z_EXTADDR_LEN + 1 + 1;  // IEEEAddress + ReqType + StartIndex.
//  312   zAddrType_t dstAddr;
//  313 
//  314   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  315 
//  316   if ( osal_ExtAddrEqual( saveExtAddr, IEEEAddress ) == FALSE )
??CrossCallReturnLabel_52:
        ; Setup parameters for call to function sAddrExtCmp
        MOV       A,R2
        MOV       R4,A
        MOV       A,R3
        MOV       R5,A
        MOV       R2,#saveExtAddr & 0xff
        MOV       R3,#(saveExtAddr >> 8) & 0xff
        LCALL     `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV       A,R1
        JNZ       ??ZDP_NwkAddrReq_0
//  317   {
//  318     dstAddr.addrMode = AddrBroadcast;
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine90 & 0xFFFF
//  319     dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
//  320   }
??CrossCallReturnLabel_132:
        SJMP      ??ZDP_NwkAddrReq_1
//  321   else
//  322   {
//  323     dstAddr.addrMode = Addr16Bit;
??ZDP_NwkAddrReq_0:
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x2
        MOVX      @DPTR,A
//  324     dstAddr.addr.shortAddr = ZDAppNwkAddr.addr.shortAddr;
        MOV       DPTR,#ZDAppNwkAddr
        LCALL     ?Subroutine48 & 0xFFFF
//  325   }
??CrossCallReturnLabel_67:
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
??ZDP_NwkAddrReq_1:
        MOVX      @DPTR,A
//  326 
//  327   pBuf = osal_cpyExtAddr( pBuf, IEEEAddress );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     ?Subroutine67 & 0xFFFF
//  328 
//  329   *pBuf++ = ReqType;
??CrossCallReturnLabel_96:
        MOV       A,?V2
        MOVX      @DPTR,A
//  330   *pBuf++ = StartIndex;
        INC       DPTR
        MOV       A,?V3
        MOVX      @DPTR,A
//  331 
//  332   return fillAndSend( &ZDP_TransID, &dstAddr, NWK_addr_req, len );
        ; Setup parameters for call to function fillAndSend
        CLR       A
        MOV       ?V0,A
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       R1,#0xa
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP102_8
        LCALL     ??Subroutine136_0 & 0xFFFF
??CrossCallReturnLabel_255:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,#0x9
        LJMP      ??Subroutine126_0 & 0xFFFF
//  333 }
          CFI EndBlock cfiBlock3

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine48:
          CFI Block cfiCond4 Using cfiCommon0
          CFI Function fillAndSend
          CFI Conditional ??CrossCallReturnLabel_66
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond5 Using cfiCommon0
          CFI (cfiCond5) Function ZDP_NwkAddrReq
          CFI (cfiCond5) Conditional ??CrossCallReturnLabel_67
          CFI (cfiCond5) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond5) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond5) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond5) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond5) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond5) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond5) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond5) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond5) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond5) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond5) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond5) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond5) CFA_SP SP+-2
          CFI (cfiCond5) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker6 Using cfiCommon1
          CFI (cfiPicker6) NoFunction
          CFI (cfiPicker6) Picker
        LCALL     ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_318:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        RET
          CFI EndBlock cfiCond4
          CFI EndBlock cfiCond5
          CFI EndBlock cfiPicker6
//  334 
//  335 /*********************************************************************
//  336  * @fn          ZDP_IEEEAddrReq
//  337  *
//  338  * @brief       This builds and send a IEEE_addr_req message.  This
//  339  *              function sends a unicast message looking for a 64
//  340  *              bit IEEE address with a 16 bit address as bait.
//  341  *
//  342  * @param       ReqType - ZDP_IEEEADDR_REQTYPE_SINGLE or
//  343  *                        ZDP_IEEEADDR_REQTYPE_EXTENDED
//  344  * @param       SecurityEnable - Security Options
//  345  *
//  346  * @return      afStatus_t
//  347  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  348 afStatus_t ZDP_IEEEAddrReq( uint16 shortAddr, byte ReqType,
ZDP_IEEEAddrReq:
          CFI Block cfiBlock7 Using cfiCommon0
          CFI Function ZDP_IEEEAddrReq
        CODE
//  349                             byte StartIndex, byte SecurityEnable )
//  350 {
        FUNCALL ZDP_IEEEAddrReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 9
        MOV       A,#-0x9
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        LCALL     ?Subroutine51 & 0xFFFF
//  351   uint8 *pBuf = ZDP_TmpBuf;
//  352   byte len = 2 + 1 + 1;  // shortAddr + ReqType + StartIndex.
//  353   zAddrType_t dstAddr;
//  354 
//  355   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  356 
//  357   dstAddr.addrMode = (afAddrMode_t)Addr16Bit;
??CrossCallReturnLabel_304:
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x2
        MOVX      @DPTR,A
//  358   dstAddr.addr.shortAddr = shortAddr;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,R2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
//  359 
//  360   *pBuf++ = LO_UINT16( shortAddr );
        MOV       A,R2
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      @DPTR,A
//  361   *pBuf++ = HI_UINT16( shortAddr );
        MOV       A,R3
        LCALL     ?Subroutine34 & 0xFFFF
//  362 
//  363   *pBuf++ = ReqType;
??CrossCallReturnLabel_43:
        MOVX      @DPTR,A
//  364   *pBuf++ = StartIndex;
        MOV       A,R4
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
//  365 
//  366   return fillAndSend( &ZDP_TransID, &dstAddr, IEEE_addr_req, len );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x1
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       R1,#0x4
          CFI EndBlock cfiBlock7
        REQUIRE ?Subroutine8
        ; // Fall through to label ?Subroutine8
//  367 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine8:
          CFI Block cfiBlock8 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP102_8
        LCALL     ??Subroutine136_0 & 0xFFFF
??CrossCallReturnLabel_256:
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock8
        REQUIRE ??Subroutine109_0
        ; // Fall through to label ??Subroutine109_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine109_0:
          CFI Block cfiBlock9 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0x9
        SJMP      ??Subroutine112_0
          CFI EndBlock cfiBlock9

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine2:
          CFI Block cfiBlock10 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       R1,#0x2
          CFI EndBlock cfiBlock10
        REQUIRE ??Subroutine110_0
        ; // Fall through to label ??Subroutine110_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine110_0:
          CFI Block cfiBlock11 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,R2
        MOV       R4,A
        MOV       A,R3
        MOV       R5,A
        MOV       R2,#ZDP_TransID & 0xff
        MOV       R3,#(ZDP_TransID >> 8) & 0xff
          CFI EndBlock cfiBlock11
        REQUIRE ??Subroutine111_0
        ; // Fall through to label ??Subroutine111_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine111_0:
          CFI Block cfiBlock12 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        LCALL     ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_262:
          CFI EndBlock cfiBlock12
        REQUIRE ??Subroutine112_0
        ; // Fall through to label ??Subroutine112_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine112_0:
          CFI Block cfiBlock13 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Valid
        MOV       R7,#0x2
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock13
//  368 
//  369 /*********************************************************************
//  370  * @fn          ZDP_MatchDescReq
//  371  *
//  372  * @brief       This builds and send a Match_Desc_req message.  This
//  373  *              function sends a broadcast or unicast message
//  374  *              requesting the list of endpoint/interfaces that
//  375  *              match profile ID and cluster IDs.
//  376  *
//  377  * @param       dstAddr - destination address
//  378  * @param       nwkAddr - network address of interest
//  379  * @param       ProfileID - Profile ID
//  380  * @param       NumInClusters - number of input clusters
//  381  * @param       InClusterList - input cluster ID list
//  382  * @param       NumOutClusters - number of output clusters
//  383  * @param       OutClusterList - output cluster ID list
//  384  * @param       SecurityEnable - Security Options
//  385  *
//  386  * @return      afStatus_t
//  387  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  388 afStatus_t ZDP_MatchDescReq( zAddrType_t *dstAddr, uint16 nwkAddr,
ZDP_MatchDescReq:
          CFI Block cfiBlock14 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
        CODE
//  389                                 uint16 ProfileID,
//  390                                 byte NumInClusters, cId_t *InClusterList,
//  391                                 byte NumOutClusters, cId_t *OutClusterList,
//  392                                 byte SecurityEnable )
//  393 {
        FUNCALL ZDP_MatchDescReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        LCALL     ?Subroutine51 & 0xFFFF
//  394   uint8 *pBuf = ZDP_TmpBuf;
??CrossCallReturnLabel_305:
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V0,A
//  395   // nwkAddr+ProfileID+NumInClusters+NumOutClusters.
//  396   byte i, len = 2 + 2 + 1 + 1;  // nwkAddr+ProfileID+NumInClusters+NumOutClusters.
//  397 
//  398   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  399 
//  400   len += (NumInClusters + NumOutClusters) * sizeof(uint16);
        MOV       A,R6
        ADD       A,?V0
        CLR       C
        RLC       A
        ADD       A,#0x6
        MOV       R7,A
//  401 
//  402   if ( len >= ZDP_BUF_SZ-1 )
        CLR       C
        SUBB      A,#0x4f
        JC        ??ZDP_MatchDescReq_0
//  403   {
//  404     return afStatus_MEM_FAIL;
        MOV       R1,#0x10
        LJMP      ??ZDP_MatchDescReq_1 & 0xFFFF
//  405   }
//  406 
//  407   // The spec changed in Zigbee 2007 (2.4.3.1.7.1) to not allow sending
//  408   // this command to 0xFFFF.  So, here we will filter this and replace 
//  409   // with 0xFFFD to only send to devices with RX ON.  This includes the 
//  410   // network address of interest.
//  411   if ( ((dstAddr->addrMode == AddrBroadcast) || (dstAddr->addrMode == Addr16Bit))
//  412       && (dstAddr->addr.shortAddr == NWK_BROADCAST_SHORTADDR_DEVALL) )
??ZDP_MatchDescReq_0:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,#0xf
        JZ        ??ZDP_MatchDescReq_2
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,#0x2
        JNZ       ??ZDP_MatchDescReq_3
??ZDP_MatchDescReq_2:
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      A,@DPTR
        CPL       A
        JNZ       ??ZDP_MatchDescReq_4
        INC       DPTR
        MOVX      A,@DPTR
        CPL       A
??ZDP_MatchDescReq_4:
        JNZ       ??ZDP_MatchDescReq_3
//  413   {
//  414     dstAddr->addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,#-0x3
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,#-0x1
        MOVX      @DPTR,A
//  415   }
//  416   if ( nwkAddr == NWK_BROADCAST_SHORTADDR_DEVALL )
??ZDP_MatchDescReq_3:
        MOV       A,#-0x1
        XRL       A,R4
        JNZ       ??ZDP_MatchDescReq_5
        MOV       A,#-0x1
        XRL       A,R5
??ZDP_MatchDescReq_5:
        JNZ       ??ZDP_MatchDescReq_6
//  417   {
//  418     nwkAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
        MOV       R4,#-0x3
        MOV       R5,#-0x1
//  419   }
//  420   
//  421   *pBuf++ = LO_UINT16( nwkAddr );   // NWKAddrOfInterest
??ZDP_MatchDescReq_6:
        MOV       A,R4
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      @DPTR,A
//  422   *pBuf++ = HI_UINT16( nwkAddr );
        MOV       A,R5
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine52 & 0xFFFF
//  423 
//  424   *pBuf++ = LO_UINT16( ProfileID );   // Profile ID
??CrossCallReturnLabel_68:
        MOV       A,R4
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        LCALL     ?Subroutine36 & 0xFFFF
//  425   *pBuf++ = HI_UINT16( ProfileID );
??CrossCallReturnLabel_47:
        LCALL     ?Subroutine34 & 0xFFFF
//  426 
//  427   *pBuf++ = NumInClusters; // Input cluster list
??CrossCallReturnLabel_44:
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R0
        ADD       A,#0x5
        MOV       R0,A
        JNC       ??ZDP_MatchDescReq_7
        INC       R1
//  428   if ( NumInClusters )
??ZDP_MatchDescReq_7:
        MOV       A,R6
        JZ        ??ZDP_MatchDescReq_8
//  429   {
//  430     for (i=0; i<NumInClusters; ++i)  {
        MOV       ?V1,#0x0
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine52 & 0xFFFF
//  431       *pBuf++ = LO_UINT16( InClusterList[i] );
??CrossCallReturnLabel_69:
        LCALL     ?Subroutine10 & 0xFFFF
//  432       *pBuf++ = HI_UINT16( InClusterList[i] );
//  433     }
??CrossCallReturnLabel_2:
        JNC       ??ZDP_MatchDescReq_9
        INC       R1
??ZDP_MatchDescReq_9:
        INC       ?V1
        MOV       A,?V1
        CLR       C
        SUBB      A,R6
        JC        ??CrossCallReturnLabel_69
//  434   }
//  435 
//  436   *pBuf++ = NumOutClusters; // Output cluster list
??ZDP_MatchDescReq_8:
        MOV       DPL,R0
        MOV       DPH,R1
        MOV       A,?V0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
//  437   if ( NumOutClusters )
        JZ        ??ZDP_MatchDescReq_10
//  438   {
//  439     for (i=0; i<NumOutClusters; ++i)  {
        MOV       ?V1,#0x0
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine52 & 0xFFFF
//  440       *pBuf++ = LO_UINT16( OutClusterList[i] );
??CrossCallReturnLabel_70:
        LCALL     ?Subroutine10 & 0xFFFF
//  441       *pBuf++ = HI_UINT16( OutClusterList[i] );
//  442     }
??CrossCallReturnLabel_3:
        JNC       ??ZDP_MatchDescReq_11
        INC       R1
??ZDP_MatchDescReq_11:
        INC       ?V1
        MOV       A,?V1
        CLR       C
        SUBB      A,?V0
        JC        ??CrossCallReturnLabel_70
//  443   }
//  444 
//  445   return fillAndSend( &ZDP_TransID, dstAddr, Match_Desc_req, len );
??ZDP_MatchDescReq_10:
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x6
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,R7
        MOV       R1,A
        MOV       A,R2
        MOV       R4,A
        MOV       A,R3
        LCALL     ??Subroutine135_0 & 0xFFFF
??CrossCallReturnLabel_254:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
??ZDP_MatchDescReq_1:
        SJMP      ??Subroutine113_0
//  446 }
          CFI EndBlock cfiBlock14

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine34:
          CFI Block cfiCond15 Using cfiCommon0
          CFI Function ZDP_IEEEAddrReq
          CFI Conditional ??CrossCallReturnLabel_43
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond16 Using cfiCommon0
          CFI (cfiCond16) Function ZDP_MatchDescReq
          CFI (cfiCond16) Conditional ??CrossCallReturnLabel_44
          CFI (cfiCond16) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond16) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond16) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond16) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond16) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond16) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond16) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond16) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond16) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond16) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond16) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond16) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond16) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond16) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond16) CFA_SP SP+-2
          CFI (cfiCond16) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker17 Using cfiCommon1
          CFI (cfiPicker17) NoFunction
          CFI (cfiPicker17) Picker
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R6
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond15
          CFI EndBlock cfiCond16
          CFI EndBlock cfiPicker17

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine10:
          CFI Block cfiCond18 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_2
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond19 Using cfiCommon0
          CFI (cfiCond19) Function ZDP_MatchDescReq
          CFI (cfiCond19) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond19) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond19) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond19) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond19) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond19) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond19) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond19) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond19) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond19) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond19) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond19) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond19) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond19) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond19) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond19) CFA_SP SP+-2
          CFI (cfiCond19) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker20 Using cfiCommon1
          CFI (cfiPicker20) NoFunction
          CFI (cfiPicker20) Picker
        MOV       A,?V1
        LCALL     ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_148:
        ADD       A,?V2
        MOV       ?V2,A
        MOV       A,R5
        ADDC      A,?V3
        MOV       ?V3,A
        MOV       DPL,?V2
        MOV       DPH,A
        LCALL     ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_184:
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_127:
        RET
          CFI EndBlock cfiCond18
          CFI EndBlock cfiCond19
          CFI EndBlock cfiPicker20

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock21 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 26)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock21
        REQUIRE ??Subroutine113_0
        ; // Fall through to label ??Subroutine113_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine113_0:
          CFI Block cfiBlock22 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x6
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock22
//  447 
//  448 /*********************************************************************
//  449  * @fn          ZDP_SimpleDescReq
//  450  *
//  451  * @brief       This builds and send a NWK_Simple_Desc_req
//  452  *              message.  This function sends unicast message to the
//  453  *              destination device.
//  454  *
//  455  * @param       dstAddr - destination address
//  456  * @param       nwkAddr - 16 bit address
//  457  * @param       epIntf - endpoint/interface
//  458  * @param       SecurityEnable - Security Options
//  459  *
//  460  * @return      afStatus_t
//  461  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  462 afStatus_t ZDP_SimpleDescReq( zAddrType_t *dstAddr, uint16 nwkAddr,
ZDP_SimpleDescReq:
          CFI Block cfiBlock23 Using cfiCommon0
          CFI Function ZDP_SimpleDescReq
        CODE
//  463                                     byte endPoint, byte SecurityEnable )
//  464 
//  465 {
        FUNCALL ZDP_SimpleDescReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  466   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  467 
//  468   ZDP_TmpBuf[0] = LO_UINT16( nwkAddr );
        LCALL     ?Subroutine16 & 0xFFFF
//  469   ZDP_TmpBuf[1] = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_16:
        LCALL     ?Subroutine13 & 0xFFFF
//  470   ZDP_TmpBuf[2] = endPoint;
//  471 
//  472   return fillAndSend( &ZDP_TransID, dstAddr, Simple_Desc_req, 3 );
??CrossCallReturnLabel_8:
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x4
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       R1,#0x3
        LJMP      ??Subroutine110_0 & 0xFFFF
//  473 }
          CFI EndBlock cfiBlock23

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine16:
          CFI Block cfiCond24 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
          CFI Conditional ??CrossCallReturnLabel_15
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond25 Using cfiCommon0
          CFI (cfiCond25) Function ZDP_SimpleDescReq
          CFI (cfiCond25) Conditional ??CrossCallReturnLabel_16
          CFI (cfiCond25) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond25) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond25) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond25) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond25) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond25) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond25) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond25) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond25) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond25) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond25) CFA_SP SP+-2
          CFI (cfiCond25) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker26 Using cfiCommon1
          CFI (cfiPicker26) NoFunction
          CFI (cfiPicker26) Picker
        MOV       DPTR,#ZDP_TmpBuf
        LCALL     ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_192:
        MOV       A,R4
        LCALL     ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_115:
        MOV       A,R5
        RET
          CFI EndBlock cfiCond24
          CFI EndBlock cfiCond25
          CFI EndBlock cfiPicker26
//  474 
//  475 /*********************************************************************
//  476  * @fn          ZDP_UserDescSet
//  477  *
//  478  * @brief       This builds and send a User_Desc_set message to set
//  479  *              the user descriptor.  This function sends unicast
//  480  *              message to the destination device.
//  481  *
//  482  * @param       dstAddr - destination address
//  483  * @param       nwkAddr - 16 bit address
//  484  * @param       UserDescriptor - user descriptor
//  485  * @param       SecurityEnable - Security Options
//  486  *
//  487  * @return      afStatus_t
//  488  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  489 afStatus_t ZDP_UserDescSet( zAddrType_t *dstAddr, uint16 nwkAddr,
ZDP_UserDescSet:
          CFI Block cfiBlock27 Using cfiCommon0
          CFI Function ZDP_UserDescSet
        CODE
//  490                           UserDescriptorFormat_t *UserDescriptor,
//  491                           byte SecurityEnable )
//  492 {
        FUNCALL ZDP_UserDescSet, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_UserDescSet, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_UserDescSet, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV       A,#-0xf
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 0
        LCALL     ?Subroutine62 & 0xFFFF
//  493   uint8 *pBuf = ZDP_TmpBuf;
??CrossCallReturnLabel_87:
        MOV       A,#0xf
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine39 & 0xFFFF
//  494   byte len = (UserDescriptor->len < AF_MAX_USER_DESCRIPTOR_LEN) ?
//  495               UserDescriptor->len : AF_MAX_USER_DESCRIPTOR_LEN;
??CrossCallReturnLabel_49:
        CLR       C
        SUBB      A,#0x10
        JNC       ??ZDP_UserDescSet_0
        MOVX      A,@DPTR
        MOV       ?V2,A
        SJMP      ??ZDP_UserDescSet_1
??ZDP_UserDescSet_0:
        MOV       ?V2,#0x10
//  496   byte addrLen = 2;
//  497 
//  498   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  499 
//  500   *pBuf++ = LO_UINT16( nwkAddr );
??ZDP_UserDescSet_1:
        MOV       A,R4
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOVX      @DPTR,A
//  501   *pBuf++ = HI_UINT16( nwkAddr );
        MOV       A,R5
        LCALL     ?Subroutine32 & 0xFFFF
//  502 
//  503   *pBuf++ = len;
??CrossCallReturnLabel_39:
        MOV       A,?V2
        LCALL     ??Subroutine139_0 & 0xFFFF
//  504   addrLen = 3;
//  505 
//  506   pBuf = osal_memcpy( pBuf, UserDescriptor->desc, len );
??CrossCallReturnLabel_278:
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       ?V4,R1
        MOV       ?V5,R2
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       R4,?V2
        MOV       R5,#0x0
        MOV       A,?V0
        ADD       A,#0x3
        LCALL     ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_298:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
//  507   osal_memset( pBuf, AF_USER_DESCRIPTOR_FILL, AF_MAX_USER_DESCRIPTOR_LEN-len );
        ; Setup parameters for call to function osal_memset
        MOV       R0,?V2
        MOV       A,#0x10
        CLR       C
        SUBB      A,R0
        MOV       R4,A
        SUBB      A,0xE0 /* A   */
        MOV       R5,A
        MOV       R1,#0x20
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
//  508 
//  509   return fillAndSend( &ZDP_TransID, dstAddr, User_Desc_set, (AF_MAX_USER_DESCRIPTOR_LEN + addrLen) );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x14
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       R1,#0x13
        LCALL     ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_252:
          CFI EndBlock cfiBlock27
        REQUIRE ?Subroutine3
        ; // Fall through to label ?Subroutine3
//  510 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine3:
          CFI Block cfiBlock28 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Valid
        MOV       R7,#0x7
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock28
//  511 
//  512 /*********************************************************************
//  513  * @fn          ZDP_ServerDiscReq
//  514  *
//  515  * @brief       Build and send a Server_Discovery_req request message.
//  516  *
//  517  * @param       serverMask - 16-bit bit-mask of server services being sought.
//  518  * @param       SecurityEnable - Security Options
//  519  *
//  520  * @return      afStatus_t
//  521  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  522 afStatus_t ZDP_ServerDiscReq( uint16 serverMask, byte SecurityEnable )
ZDP_ServerDiscReq:
          CFI Block cfiBlock29 Using cfiCommon0
          CFI Function ZDP_ServerDiscReq
        CODE
//  523 {
        FUNCALL ZDP_ServerDiscReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 9
        MOV       A,#-0x9
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        LCALL     ?Subroutine51 & 0xFFFF
//  524   uint8 *pBuf = ZDP_TmpBuf;
//  525   zAddrType_t dstAddr;
//  526 
//  527   dstAddr.addrMode = AddrBroadcast;
??CrossCallReturnLabel_306:
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine17 & 0xFFFF
//  528   dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
//  529 
//  530   *pBuf++ = LO_UINT16( serverMask );
??CrossCallReturnLabel_17:
        MOV       A,R2
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      @DPTR,A
//  531   *pBuf = HI_UINT16( serverMask );
        MOV       A,R3
        INC       DPTR
        MOVX      @DPTR,A
//  532 
//  533   FillAndSendTxOptions( &ZDP_TransID, &dstAddr, Server_Discovery_req, 2,
//  534              ((SecurityEnable) ? AF_EN_SECURITY : AF_TX_OPTIONS_NONE) );
        MOV       A,R6
        MOV       DPTR,#ZDP_TxOptions
        JZ        ??ZDP_ServerDiscReq_0
        MOV       A,#0x40
        SJMP      ??ZDP_ServerDiscReq_1
??ZDP_ServerDiscReq_0:
        CLR       A
??ZDP_ServerDiscReq_1:
        MOVX      @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x15
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       R1,#0x2
        MOV       A,R1
        LCALL     ?XSTACK_DISP102_8
        LCALL     ??Subroutine136_0 & 0xFFFF
??CrossCallReturnLabel_257:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R1
        MOV       R1,A
        MOV       DPTR,#ZDP_TxOptions
        CLR       A
        MOVX      @DPTR,A
        LJMP      ??Subroutine109_0 & 0xFFFF
//  535 }
          CFI EndBlock cfiBlock29
//  536 
//  537 /*********************************************************************
//  538  * @fn          ZDP_DeviceAnnce
//  539  *
//  540  * @brief       This builds and send a Device_Annce message.  This
//  541  *              function sends a broadcast message.
//  542  *
//  543  * @param       nwkAddr - 16 bit address of the device
//  544  * @param       IEEEAddr - 64 bit address of the device
//  545  * @param       capabilities - device capabilities.  This field is only
//  546  *                 sent for v1.1 networks.
//  547  * @param       SecurityEnable - Security Options
//  548  *
//  549  * @return      afStatus_t
//  550  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  551 afStatus_t ZDP_DeviceAnnce( uint16 nwkAddr, uint8 *IEEEAddr,
ZDP_DeviceAnnce:
          CFI Block cfiBlock30 Using cfiCommon0
          CFI Function ZDP_DeviceAnnce
        CODE
//  552                               byte capabilities, byte SecurityEnable )
//  553 {
        FUNCALL ZDP_DeviceAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_DeviceAnnce, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 9
        MOV       A,#-0x9
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R1
        MOV       R6,A
//  554   zAddrType_t dstAddr;
//  555   uint8 len;
//  556 
//  557   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  558 
//  559   dstAddr.addrMode = (afAddrMode_t)AddrBroadcast;
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine17 & 0xFFFF
//  560   dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
//  561 
//  562   ZDP_TmpBuf[0] = LO_UINT16( nwkAddr );
??CrossCallReturnLabel_18:
        LCALL     ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_187:
        MOV       A,R2
        LCALL     ?Subroutine20 & 0xFFFF
//  563   ZDP_TmpBuf[1] = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_21:
        MOV       A,R3
        MOVX      @DPTR,A
//  564   osal_cpyExtAddr( &ZDP_TmpBuf[2], IEEEAddr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       DPTR,#ZDP_TmpBuf
        MOVX      A,@DPTR
        ADD       A,#0x2
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
//  565   len = 2 + Z_EXTADDR_LEN;
//  566 
//  567   ZDP_TmpBuf[10] = capabilities;
        LCALL     ?Subroutine106 & 0xFFFF
??CrossCallReturnLabel_325:
        XCH       A,R0
        ADD       A,#0xa
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        MOV       A,R6
        MOVX      @DPTR,A
//  568   len++;
//  569 
//  570   return fillAndSend( &ZDP_TransID, &dstAddr, Device_annce, len );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x13
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       R1,#0xb
        LJMP      ?Subroutine8 & 0xFFFF
//  571 }
          CFI EndBlock cfiBlock30

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine17:
          CFI Block cfiCond31 Using cfiCommon0
          CFI Function ZDP_ServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_17
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond32 Using cfiCommon0
          CFI (cfiCond32) Function ZDP_DeviceAnnce
          CFI (cfiCond32) Conditional ??CrossCallReturnLabel_18
          CFI (cfiCond32) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond32) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond32) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond32) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond32) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond32) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond32) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond32) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond32) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond32) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond32) CFA_SP SP+-2
          CFI (cfiCond32) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker33 Using cfiCommon1
          CFI (cfiPicker33) NoFunction
          CFI (cfiPicker33) Picker
        LCALL     ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_133:
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond31
          CFI EndBlock cfiCond32
          CFI EndBlock cfiPicker33

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine90:
          CFI Block cfiCond34 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
          CFI Conditional ??CrossCallReturnLabel_132
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond35 Using cfiCommon0
          CFI (cfiCond35) Function ZDP_ServerDiscReq
          CFI (cfiCond35) Conditional ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_17
          CFI (cfiCond35) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond35) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond35) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond35) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond35) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond35) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond35) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond35) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond35) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond35) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond35) CFA_SP SP+-4
          CFI (cfiCond35) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond36 Using cfiCommon0
          CFI (cfiCond36) Function ZDP_DeviceAnnce
          CFI (cfiCond36) Conditional ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_18
          CFI (cfiCond36) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond36) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond36) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond36) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond36) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond36) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond36) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond36) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond36) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond36) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond36) CFA_SP SP+-4
          CFI (cfiCond36) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker37 Using cfiCommon1
          CFI (cfiPicker37) NoFunction
          CFI (cfiPicker37) Picker
        MOV       A,#0xf
        MOVX      @DPTR,A
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x3
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,#-0x1
        RET
          CFI EndBlock cfiCond34
          CFI EndBlock cfiCond35
          CFI EndBlock cfiCond36
          CFI EndBlock cfiPicker37
//  572 
//  573 /*********************************************************************
//  574  * Address Responses
//  575  */
//  576 
//  577 /*********************************************************************
//  578  * @fn      zdpProcessAddrReq
//  579  *
//  580  * @brief   Process an incoming NWK_addr_req or IEEE_addr_req message and then
//  581  *          build and send a corresponding NWK_addr_rsp or IEEE_addr_rsp msg.
//  582  *
//  583  * @param   inMsg - incoming message
//  584  *
//  585  * @return  none
//  586  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  587 void zdpProcessAddrReq( zdoIncomingMsg_t *inMsg )
zdpProcessAddrReq:
          CFI Block cfiBlock38 Using cfiCommon0
          CFI Function zdpProcessAddrReq
        CODE
//  588 {
        FUNCALL zdpProcessAddrReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdpProcessAddrReq, AssocGetWithExt
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdpProcessAddrReq, AssocGetWithShort
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdpProcessAddrReq, AddrMgrEntryGet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdpProcessAddrReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdpProcessAddrReq, AssocMakeList
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdpProcessAddrReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdpProcessAddrReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV       A,#-0x12
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 14
        MOV       A,#-0xe
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       ?V0,R2
        MOV       ?V1,R3
//  589   associated_devices_t *pAssoc;
//  590   uint8 reqType;
//  591   uint16 aoi = INVALID_NODE_ADDR;
        MOV       ?V2,#-0x2
        MOV       ?V3,#-0x1
//  592   uint8 *ieee = NULL;
        MOV       R6,#0x0
        MOV       R7,#0x0
//  593 
//  594   reqType = inMsg->asdu[(inMsg->clusterID == NWK_addr_req) ? Z_EXTADDR_LEN : sizeof( uint16 ) ];
        MOV       A,R2
        LCALL     ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_159:
        JNZ       ??zdpProcessAddrReq_0
        MOV       R0,#0x8
        SJMP      ??zdpProcessAddrReq_1
??zdpProcessAddrReq_0:
        MOV       R0,#0x2
??zdpProcessAddrReq_1:
        MOV       A,R2
        LCALL     ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_153:
        ADD       A,R0
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       DPL,R2
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       ?V4,A
//  595 
//  596   if ( inMsg->clusterID == NWK_addr_req )
        LCALL     ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_105:
        ORL       A,R1
        JNZ       ??zdpProcessAddrReq_2
//  597 
//  598   {
//  599     ieee = inMsg->asdu;
        MOV       A,?V0
        LCALL     ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_156:
        LCALL     ??Subroutine142_0 & 0xFFFF
//  600 
//  601     if ( osal_ExtAddrEqual( saveExtAddr, ieee ) )
??CrossCallReturnLabel_287:
        ; Setup parameters for call to function sAddrExtCmp
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       R2,#saveExtAddr & 0xff
        MOV       R3,#(saveExtAddr >> 8) & 0xff
        LCALL     `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV       A,R1
        JZ        ??zdpProcessAddrReq_3
//  602     {
//  603       aoi = ZDAppNwkAddr.addr.shortAddr;
        LCALL     ?Subroutine38 & 0xFFFF
//  604     }
??CrossCallReturnLabel_165:
        LJMP      ??zdpProcessAddrReq_4 & 0xFFFF
//  605     // Handle response for sleeping end devices
//  606     else if ( (ZSTACK_ROUTER_BUILD)
//  607       && (((pAssoc = AssocGetWithExt( ieee )) != NULL)
//  608              && (pAssoc->nodeRelation == CHILD_RFD)) )
??zdpProcessAddrReq_3:
        MOV       DPTR,#zgDeviceLogicalType
        MOVX      A,@DPTR
        JZ        ??zdpProcessAddrReq_5
        XRL       A,#0x1
        JZ        $+5
        LJMP      ??zdpProcessAddrReq_6 & 0xFFFF
??zdpProcessAddrReq_5:
        ; Setup parameters for call to function AssocGetWithExt
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     `??AssocGetWithExt::?relay`; Banked call to: AssocGetWithExt
        MOV       ?V7,R3
        MOV       R1,?V7
        MOV       A,R2
        ORL       A,R1
        JNZ       $+5
        LJMP      ??zdpProcessAddrReq_6 & 0xFFFF
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,#0x1
        JZ        $+5
        LJMP      ??zdpProcessAddrReq_6 & 0xFFFF
//  609     {
//  610       aoi = pAssoc->shortAddr;
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ??Subroutine117_0 & 0xFFFF
//  611       if ( reqType != ZDP_ADDR_REQTYPE_SINGLE )
??CrossCallReturnLabel_162:
        MOV       A,?V4
        JZ        $+5
        LJMP      ??zdpProcessAddrReq_7 & 0xFFFF
        LJMP      ??zdpProcessAddrReq_4 & 0xFFFF
//  612         reqType = 0xFF; // Force Invalid
//  613     }
//  614   }
??zdpProcessAddrReq_2:
        LCALL     ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_154:
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPL,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R2
        ADD       A,R6
        MOV       ?V2,A
        CLR       A
        ADDC      A,R1
        MOV       ?V3,A
//  615   else  // if ( inMsg->clusterID == IEEE_addr_req )
//  616   {
//  617     aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
//  618 
//  619     if ( aoi == ZDAppNwkAddr.addr.shortAddr )
        MOV       DPTR,#ZDAppNwkAddr
        MOVX      A,@DPTR
        XRL       A,R2
        JNZ       ??zdpProcessAddrReq_8
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R1
??zdpProcessAddrReq_8:
        JNZ       ??zdpProcessAddrReq_9
//  620     {
//  621       ieee = saveExtAddr;
        MOV       R6,#saveExtAddr & 0xff
        MOV       R7,#(saveExtAddr >> 8) & 0xff
        SJMP      ??zdpProcessAddrReq_4
//  622     }
//  623     else if ( (ZSTACK_ROUTER_BUILD)
//  624       && (((pAssoc = AssocGetWithShort( aoi )) != NULL)
//  625              && (pAssoc->nodeRelation == CHILD_RFD)) )
??zdpProcessAddrReq_9:
        MOV       DPTR,#zgDeviceLogicalType
        MOVX      A,@DPTR
        JZ        ??zdpProcessAddrReq_10
        XRL       A,#0x1
        JNZ       ??zdpProcessAddrReq_6
??zdpProcessAddrReq_10:
        ; Setup parameters for call to function AssocGetWithShort
        MOV       R3,?V3
        LCALL     `??AssocGetWithShort::?relay`; Banked call to: AssocGetWithShort
        MOV       ?V7,R3
        MOV       R1,?V7
        MOV       A,R2
        ORL       A,R1
        JZ        ??zdpProcessAddrReq_6
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,#0x1
        JNZ       ??zdpProcessAddrReq_6
//  626     {
//  627       AddrMgrEntry_t addrEntry;
//  628       addrEntry.user = ADDRMGR_USER_DEFAULT;
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        MOVX      @DPTR,A
//  629       addrEntry.index = pAssoc->addrIdx;
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine145_0 & 0xFFFF
??CrossCallReturnLabel_309:
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine131_0 & 0xFFFF
//  630       if ( AddrMgrEntryGet( &addrEntry ) )
??CrossCallReturnLabel_222:
        ; Setup parameters for call to function AddrMgrEntryGet
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??AddrMgrEntryGet::?relay`; Banked call to: AddrMgrEntryGet
        MOV       A,R1
        JZ        ??zdpProcessAddrReq_11
//  631       {
//  632         ieee = addrEntry.extAddr;
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOV       R6,DPL
        MOV       R7,DPH
//  633       }
//  634 
//  635       if ( reqType != ZDP_ADDR_REQTYPE_SINGLE )
??zdpProcessAddrReq_11:
        MOV       A,?V4
        JZ        ??zdpProcessAddrReq_4
//  636         reqType = 0xFF; // Force Invalid
??zdpProcessAddrReq_7:
        MOV       ?V4,#-0x1
//  637     }
//  638   }
//  639 
//  640   if ( ((aoi != INVALID_NODE_ADDR) && (ieee != NULL)) || (inMsg->wasBroadcast == FALSE) )
??zdpProcessAddrReq_4:
        MOV       A,#-0x2
        XRL       A,?V2
        JNZ       ??zdpProcessAddrReq_12
        MOV       A,#-0x1
        XRL       A,?V3
??zdpProcessAddrReq_12:
        JZ        ??zdpProcessAddrReq_6
        MOV       A,R6
        ORL       A,R7
        JNZ       ??zdpProcessAddrReq_13
??zdpProcessAddrReq_6:
        MOV       A,?V0
        ADD       A,#0xb
        MOV       DPL,A
        CLR       A
        ADDC      A,?V1
        MOV       DPH,A
        MOVX      A,@DPTR
        JZ        $+5
        LJMP      ??zdpProcessAddrReq_14 & 0xFFFF
//  641   {
//  642     uint8 stat;
//  643     uint8 *pBuf = ZDP_TmpBuf;
??zdpProcessAddrReq_13:
        LCALL     ?Subroutine79 & 0xFFFF
//  644     // Status + IEEE-Addr + Nwk-Addr.
//  645     uint8 len = 1 + Z_EXTADDR_LEN + 2;
??CrossCallReturnLabel_198:
        MOV       ?V5,#0xb
//  646     
//  647     // If aoi and iee are both setup, we found results
//  648     if ( (aoi != INVALID_NODE_ADDR) && (ieee != NULL) )
        MOV       A,#-0x2
        XRL       A,?V2
        JNZ       ??zdpProcessAddrReq_15
        MOV       A,#-0x1
        XRL       A,?V3
??zdpProcessAddrReq_15:
        JZ        ??zdpProcessAddrReq_16
        MOV       A,R6
        ORL       A,R7
        JZ        ??zdpProcessAddrReq_16
//  649     {
//  650       stat = ((reqType == ZDP_ADDR_REQTYPE_SINGLE) || (reqType == ZDP_ADDR_REQTYPE_EXTENDED)) 
//  651                     ? ZDP_SUCCESS : ZDP_INVALID_REQTYPE;
        MOV       A,?V4
        JZ        ??zdpProcessAddrReq_17
        MOV       A,#0x1
        XRL       A,?V4
        JNZ       ??zdpProcessAddrReq_18
??zdpProcessAddrReq_17:
        MOV       ?V6,#0x0
        SJMP      ??zdpProcessAddrReq_19
??zdpProcessAddrReq_18:
        MOV       ?V6,#-0x80
        SJMP      ??zdpProcessAddrReq_19
//  652     }
//  653     else 
//  654     {
//  655       // not found and the req was unicast to this device
//  656       stat = ZDP_DEVICE_NOT_FOUND;
??zdpProcessAddrReq_16:
        MOV       ?V6,#-0x7f
//  657       
//  658       // Fill in the missing field with this device's address
//  659       if ( inMsg->clusterID == NWK_addr_req )
        MOV       A,?V0
        LCALL     ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_160:
        JNZ       ??zdpProcessAddrReq_20
//  660       {
//  661         aoi = ZDAppNwkAddr.addr.shortAddr;
        LCALL     ?Subroutine38 & 0xFFFF
//  662       }
??CrossCallReturnLabel_166:
        SJMP      ??zdpProcessAddrReq_19
//  663       else
//  664       {
//  665         ieee = saveExtAddr;
??zdpProcessAddrReq_20:
        MOV       R6,#saveExtAddr & 0xff
        MOV       R7,#(saveExtAddr >> 8) & 0xff
//  666       }
//  667     }
//  668 
//  669     *pBuf++ = stat;
??zdpProcessAddrReq_19:
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,?V6
        LCALL     ?Subroutine31 & 0xFFFF
//  670 
//  671     pBuf = osal_cpyExtAddr( pBuf, ieee );
??CrossCallReturnLabel_36:
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       ?V8,R2
        MOV       ?V9,R3
        MOV       R6,?V8
        MOV       R7,?V9
//  672 
//  673     *pBuf++ = LO_UINT16( aoi );
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,?V2
        MOVX      @DPTR,A
//  674     *pBuf++ = HI_UINT16( aoi );
        INC       DPTR
        MOV       A,?V3
        MOVX      @DPTR,A
//  675 
//  676     if ( ZSTACK_ROUTER_BUILD )
        MOV       DPTR,#zgDeviceLogicalType
        MOVX      A,@DPTR
        JZ        ??zdpProcessAddrReq_21
        XRL       A,#0x1
        JZ        $+5
        LJMP      ??zdpProcessAddrReq_22 & 0xFFFF
//  677     {
//  678       if ( (reqType == ZDP_ADDR_REQTYPE_EXTENDED) && (aoi == ZDAppNwkAddr.addr.shortAddr)
//  679            && (stat == ZDP_SUCCESS) )
??zdpProcessAddrReq_21:
        MOV       A,#0x1
        XRL       A,?V4
        JZ        $+5
        LJMP      ??zdpProcessAddrReq_22 & 0xFFFF
        MOV       DPTR,#ZDAppNwkAddr
        MOVX      A,@DPTR
        XRL       A,?V2
        JNZ       ??zdpProcessAddrReq_23
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,?V3
??zdpProcessAddrReq_23:
        JZ        $+5
        LJMP      ??zdpProcessAddrReq_22 & 0xFFFF
        MOV       A,?V6
        JZ        $+5
        LJMP      ??zdpProcessAddrReq_22 & 0xFFFF
//  680       {
//  681         uint8  cnt = 0;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        MOVX      @DPTR,A
//  682         uint16 *list = AssocMakeList( &cnt );
        ; Setup parameters for call to function AssocMakeList
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        LCALL     `??AssocMakeList::?relay`; Banked call to: AssocMakeList
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       R0,?V2
        MOV       R1,?V3
//  683 
//  684         if ( list != NULL )
        MOV       A,R2
        ORL       A,R1
        JNZ       $+5
        LJMP      ??zdpProcessAddrReq_24 & 0xFFFF
//  685         {
//  686           byte idx = inMsg->asdu[(((inMsg->clusterID == NWK_addr_req) ? Z_EXTADDR_LEN : sizeof( uint16 )) + 1)];
        LCALL     ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_151:
        LCALL     ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_74:
        JNZ       ??zdpProcessAddrReq_25
        MOV       R2,#0x9
        SJMP      ??zdpProcessAddrReq_26
??zdpProcessAddrReq_25:
        MOV       R2,#0x3
??zdpProcessAddrReq_26:
        LCALL     ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_155:
        ADD       A,R2
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       DPL,R4
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       ?V2,A
//  687           uint16 *pList = list + idx;
        ADD       A,0xE0 /* A   */
        MOV       R2,A
        CLR       A
        RLC       A
        MOV       R3,A
        MOV       A,R0
        ADD       A,R2
        MOV       R4,A
        MOV       A,R1
        ADDC      A,R3
        MOV       R5,A
//  688 
//  689           // NumAssocDev field is only present on success.
//  690           if ( cnt > idx )
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        MOV       R2,A
        MOV       A,?V2
        CLR       C
        SUBB      A,R2
        JNC       ??zdpProcessAddrReq_27
//  691           {
//  692             cnt -= idx;
        MOVX      A,@DPTR
        CLR       C
        SUBB      A,?V2
        MOVX      @DPTR,A
//  693             len += (cnt * sizeof( uint16 ));
        CLR       C
        RLC       A
        ADD       A,#0xb
        MOV       ?V5,A
        SJMP      ??zdpProcessAddrReq_28
//  694           }
//  695           else
//  696           {
//  697             cnt = 0;
??zdpProcessAddrReq_27:
        CLR       A
        MOVX      @DPTR,A
//  698           }
//  699           *pBuf++ = cnt;
??zdpProcessAddrReq_28:
        LCALL     ?Subroutine33 & 0xFFFF
//  700           len++;
//  701 
//  702           // StartIndex field is only present if NumAssocDev field is non-zero.
//  703           *pBuf++ = idx;
??CrossCallReturnLabel_41:
        MOV       A,?V2
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x4
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
//  704           len++;
        INC       ?V5
        INC       ?V5
        SJMP      ??zdpProcessAddrReq_29
//  705 
//  706           while ( cnt != 0 )
//  707           {
//  708             *pBuf++ = LO_UINT16( *pList );
??zdpProcessAddrReq_30:
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine124_0 & 0xFFFF
??CrossCallReturnLabel_202:
        LCALL     ??Subroutine119_0 & 0xFFFF
//  709             *pBuf++ = HI_UINT16( *pList );
??CrossCallReturnLabel_172:
        LCALL     ??Subroutine124_0 & 0xFFFF
??CrossCallReturnLabel_203:
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x2
        MOV       R2,A
        JNC       ??zdpProcessAddrReq_31
        INC       R3
//  710             pList++;
??zdpProcessAddrReq_31:
        MOV       A,R4
        ADD       A,#0x2
        MOV       R4,A
        JNC       ??zdpProcessAddrReq_32
        INC       R5
//  711             cnt--;
??zdpProcessAddrReq_32:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        DEC       A
        MOVX      @DPTR,A
//  712           }
??zdpProcessAddrReq_29:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        JNZ       ??zdpProcessAddrReq_30
//  713 
//  714           osal_mem_free( (uint8 *)list );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,R0
        MOV       R2,A
        MOV       A,R1
        MOV       R3,A
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        SJMP      ??zdpProcessAddrReq_22
//  715         }
//  716         else
//  717         {
//  718           // NumAssocDev field is only present on success.
//  719           *pBuf++ = 0;
??zdpProcessAddrReq_24:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        CLR       A
        MOVX      @DPTR,A
//  720           len++;
        MOV       ?V5,#0xc
//  721         }
//  722       }
//  723     }
//  724 
//  725     ZDP_TxOptions = AF_MSG_ACK_REQUEST;
??zdpProcessAddrReq_22:
        MOV       DPTR,#ZDP_TxOptions
        MOV       A,#0x10
        MOVX      @DPTR,A
//  726     fillAndSend( &(inMsg->TransSeq), &(inMsg->srcAddr), (cId_t)(inMsg->clusterID | ZDO_RESPONSE_BIT), len );
        ; Setup parameters for call to function fillAndSend
        LCALL     ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_106:
        MOV       ?V2,A
        INC       DPTR
        MOVX      A,@DPTR
        ORL       A,#0x80
        MOV       ?V3,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 34)
        MOV       R1,?V5
        LCALL     ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_101:
        LCALL     ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_263:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 32)
//  727     ZDP_TxOptions = AF_TX_OPTIONS_NONE;
        MOV       DPTR,#ZDP_TxOptions
        CLR       A
        MOVX      @DPTR,A
//  728   }
//  729 }
??zdpProcessAddrReq_14:
        MOV       A,#0xe
        LJMP      ??Subroutine140_0 & 0xFFFF
          CFI EndBlock cfiBlock38

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine101:
          CFI Block cfiCond39 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_151
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond40 Using cfiCommon0
          CFI (cfiCond40) Function zdpProcessAddrReq
          CFI (cfiCond40) Conditional ??CrossCallReturnLabel_152, ??CrossCallReturnLabel_105
          CFI (cfiCond40) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond40) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond40) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond40) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond40) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond40) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond40) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond40) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond40) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond40) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond40) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond40) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond40) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond40) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond40) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond40) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond40) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond40) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond40) CFA_SP SP+-4
          CFI (cfiCond40) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond41 Using cfiCommon0
          CFI (cfiCond41) Function zdpProcessAddrReq
          CFI (cfiCond41) Conditional ??CrossCallReturnLabel_152, ??CrossCallReturnLabel_106
          CFI (cfiCond41) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond41) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond41) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond41) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond41) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond41) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond41) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond41) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond41) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond41) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond41) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond41) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond41) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond41) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond41) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond41) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond41) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond41) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond41) CFA_SP SP+-4
          CFI (cfiCond41) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiPicker42 Using cfiCommon1
          CFI (cfiPicker42) NoFunction
          CFI (cfiPicker42) Picker
        MOV       A,?V0
          CFI EndBlock cfiCond39
          CFI EndBlock cfiCond40
          CFI EndBlock cfiCond41
          CFI EndBlock cfiPicker42
        REQUIRE ??Subroutine114_0
        ; // Fall through to label ??Subroutine114_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine114_0:
          CFI Block cfiCond43 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_150, ??CrossCallReturnLabel_159
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond44 Using cfiCommon0
          CFI (cfiCond44) Function zdpProcessAddrReq
          CFI (cfiCond44) Conditional ??CrossCallReturnLabel_150, ??CrossCallReturnLabel_160
          CFI (cfiCond44) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond44) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond44) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond44) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond44) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond44) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond44) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond44) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond44) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond44) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond44) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond44) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond44) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond44) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond44) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond44) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond44) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond44) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond44) CFA_SP SP+-4
          CFI (cfiCond44) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond45 Using cfiCommon0
          CFI (cfiCond45) Function zdpProcessAddrReq
          CFI (cfiCond45) Conditional ??CrossCallReturnLabel_151
          CFI (cfiCond45) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond45) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond45) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond45) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond45) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond45) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond45) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond45) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond45) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond45) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond45) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond45) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond45) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond45) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond45) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond45) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond45) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond45) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond45) CFA_SP SP+-2
          CFI (cfiCond45) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond46 Using cfiCommon0
          CFI (cfiCond46) Function zdpProcessAddrReq
          CFI (cfiCond46) Conditional ??CrossCallReturnLabel_152, ??CrossCallReturnLabel_105
          CFI (cfiCond46) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond46) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond46) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond46) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond46) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond46) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond46) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond46) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond46) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond46) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond46) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond46) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond46) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond46) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond46) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond46) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond46) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond46) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond46) CFA_SP SP+-4
          CFI (cfiCond46) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond47 Using cfiCommon0
          CFI (cfiCond47) Function zdpProcessAddrReq
          CFI (cfiCond47) Conditional ??CrossCallReturnLabel_152, ??CrossCallReturnLabel_106
          CFI (cfiCond47) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond47) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond47) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond47) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond47) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond47) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond47) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond47) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond47) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond47) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond47) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond47) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond47) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond47) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond47) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond47) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond47) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond47) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond47) CFA_SP SP+-4
          CFI (cfiCond47) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiPicker48 Using cfiCommon1
          CFI (cfiPicker48) NoFunction
          CFI (cfiPicker48) Picker
        ADD       A,#0xc
        MOV       DPL,A
        CLR       A
        ADDC      A,?V1
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond43
          CFI EndBlock cfiCond44
          CFI EndBlock cfiCond45
          CFI EndBlock cfiCond46
          CFI EndBlock cfiCond47
          CFI EndBlock cfiPicker48

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine74:
          CFI Block cfiCond49 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_105
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond50 Using cfiCommon0
          CFI (cfiCond50) Function zdpProcessAddrReq
          CFI (cfiCond50) Conditional ??CrossCallReturnLabel_106
          CFI (cfiCond50) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond50) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond50) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond50) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond50) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond50) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond50) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond50) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond50) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond50) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond50) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond50) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond50) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond50) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond50) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond50) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond50) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond50) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond50) CFA_SP SP+-2
          CFI (cfiCond50) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiPicker51 Using cfiCommon1
          CFI (cfiPicker51) NoFunction
          CFI (cfiPicker51) Picker
        LCALL     ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_152:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond49
          CFI EndBlock cfiCond50
          CFI EndBlock cfiPicker51

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine69:
          CFI Block cfiCond52 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_154
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond53 Using cfiCommon0
          CFI (cfiCond53) Function zdpProcessAddrReq
          CFI (cfiCond53) Conditional ??CrossCallReturnLabel_155
          CFI (cfiCond53) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond53) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond53) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond53) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond53) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond53) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond53) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond53) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond53) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond53) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond53) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond53) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond53) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond53) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond53) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond53) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond53) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond53) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond53) CFA_SP SP+-2
          CFI (cfiCond53) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiPicker54 Using cfiCommon1
          CFI (cfiPicker54) NoFunction
          CFI (cfiPicker54) Picker
        MOV       A,?V0
          CFI EndBlock cfiCond52
          CFI EndBlock cfiCond53
          CFI EndBlock cfiPicker54
        REQUIRE ??Subroutine115_0
        ; // Fall through to label ??Subroutine115_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine115_0:
          CFI Block cfiCond55 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_153
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond56 Using cfiCommon0
          CFI (cfiCond56) Function zdpProcessAddrReq
          CFI (cfiCond56) Conditional ??CrossCallReturnLabel_154
          CFI (cfiCond56) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond56) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond56) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond56) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond56) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond56) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond56) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond56) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond56) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond56) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond56) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond56) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond56) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond56) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond56) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond56) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond56) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond56) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond56) CFA_SP SP+-2
          CFI (cfiCond56) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond57 Using cfiCommon0
          CFI (cfiCond57) Function zdpProcessAddrReq
          CFI (cfiCond57) Conditional ??CrossCallReturnLabel_155
          CFI (cfiCond57) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond57) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond57) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond57) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond57) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond57) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond57) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond57) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond57) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond57) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond57) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond57) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond57) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond57) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond57) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond57) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond57) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond57) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond57) CFA_SP SP+-2
          CFI (cfiCond57) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiPicker58 Using cfiCommon1
          CFI (cfiPicker58) NoFunction
          CFI (cfiPicker58) Picker
        LCALL     ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_157:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond55
          CFI EndBlock cfiCond56
          CFI EndBlock cfiCond57
          CFI EndBlock cfiPicker58

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine100:
          CFI Block cfiCond59 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_156
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond60 Using cfiCommon0
          CFI (cfiCond60) Function zdpProcessAddrReq
          CFI (cfiCond60) Conditional ??CrossCallReturnLabel_157, ??CrossCallReturnLabel_154
          CFI (cfiCond60) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond60) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond60) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond60) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond60) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond60) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond60) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond60) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond60) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond60) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond60) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond60) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond60) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond60) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond60) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond60) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond60) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond60) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond60) CFA_SP SP+-4
          CFI (cfiCond60) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond61 Using cfiCommon0
          CFI (cfiCond61) Function zdpProcessAddrReq
          CFI (cfiCond61) Conditional ??CrossCallReturnLabel_157, ??CrossCallReturnLabel_155
          CFI (cfiCond61) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond61) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond61) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond61) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond61) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond61) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond61) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond61) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond61) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond61) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond61) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond61) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond61) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond61) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond61) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond61) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond61) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond61) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond61) CFA_SP SP+-4
          CFI (cfiCond61) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond62 Using cfiCommon0
          CFI (cfiCond62) Function zdpProcessAddrReq
          CFI (cfiCond62) Conditional ??CrossCallReturnLabel_157, ??CrossCallReturnLabel_153
          CFI (cfiCond62) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond62) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond62) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond62) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond62) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond62) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond62) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond62) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond62) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond62) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond62) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond62) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond62) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond62) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond62) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond62) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond62) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond62) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond62) CFA_SP SP+-4
          CFI (cfiCond62) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiPicker63 Using cfiCommon1
          CFI (cfiPicker63) NoFunction
          CFI (cfiPicker63) Picker
        ADD       A,#0x13
        MOV       DPL,A
        CLR       A
        ADDC      A,?V1
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond59
          CFI EndBlock cfiCond60
          CFI EndBlock cfiCond61
          CFI EndBlock cfiCond62
          CFI EndBlock cfiPicker63

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine49:
          CFI Block cfiCond64 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_159
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond65 Using cfiCommon0
          CFI (cfiCond65) Function zdpProcessAddrReq
          CFI (cfiCond65) Conditional ??CrossCallReturnLabel_160
          CFI (cfiCond65) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond65) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond65) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond65) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond65) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond65) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond65) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond65) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond65) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond65) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond65) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond65) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond65) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond65) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond65) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond65) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond65) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond65) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond65) CFA_SP SP+-2
          CFI (cfiCond65) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiPicker66 Using cfiCommon1
          CFI (cfiPicker66) NoFunction
          CFI (cfiPicker66) Picker
        LCALL     ??Subroutine114_0 & 0xFFFF
??CrossCallReturnLabel_150:
          CFI EndBlock cfiCond64
          CFI EndBlock cfiCond65
          CFI EndBlock cfiPicker66
        REQUIRE ??Subroutine116_0
        ; // Fall through to label ??Subroutine116_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine116_0:
          CFI Block cfiCond67 Using cfiCommon0
          CFI Function ZDO_RemoveRegisteredCB
          CFI Conditional ??CrossCallReturnLabel_158
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond68 Using cfiCommon0
          CFI (cfiCond68) Function zdpProcessAddrReq
          CFI (cfiCond68) Conditional ??CrossCallReturnLabel_159
          CFI (cfiCond68) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond68) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond68) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond68) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond68) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond68) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond68) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond68) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond68) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond68) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond68) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond68) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond68) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond68) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond68) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond68) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond68) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond68) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond68) CFA_SP SP+-2
          CFI (cfiCond68) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond69 Using cfiCommon0
          CFI (cfiCond69) Function zdpProcessAddrReq
          CFI (cfiCond69) Conditional ??CrossCallReturnLabel_160
          CFI (cfiCond69) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond69) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond69) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond69) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond69) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond69) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond69) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond69) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond69) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond69) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond69) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond69) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond69) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond69) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond69) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond69) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond69) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond69) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond69) CFA_SP SP+-2
          CFI (cfiCond69) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiPicker70 Using cfiCommon1
          CFI (cfiPicker70) NoFunction
          CFI (cfiPicker70) Picker
        LCALL     ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_319:
        MOV       A,R0
        ORL       A,R1
        RET
          CFI EndBlock cfiCond67
          CFI EndBlock cfiCond68
          CFI EndBlock cfiCond69
          CFI EndBlock cfiPicker70

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine38:
          CFI Block cfiCond71 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_165
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond72 Using cfiCommon0
          CFI (cfiCond72) Function zdpProcessAddrReq
          CFI (cfiCond72) Conditional ??CrossCallReturnLabel_166
          CFI (cfiCond72) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond72) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond72) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond72) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond72) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond72) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond72) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond72) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond72) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond72) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond72) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond72) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond72) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond72) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond72) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond72) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond72) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond72) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond72) CFA_SP SP+-2
          CFI (cfiCond72) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiPicker73 Using cfiCommon1
          CFI (cfiPicker73) NoFunction
          CFI (cfiPicker73) Picker
        MOV       DPTR,#ZDAppNwkAddr
          CFI EndBlock cfiCond71
          CFI EndBlock cfiCond72
          CFI EndBlock cfiPicker73
        REQUIRE ??Subroutine117_0
        ; // Fall through to label ??Subroutine117_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine117_0:
          CFI Block cfiCond74 Using cfiCommon0
          CFI Function ZDP_SendData
          CFI Conditional ??CrossCallReturnLabel_161
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond75 Using cfiCommon0
          CFI (cfiCond75) Function zdpProcessAddrReq
          CFI (cfiCond75) Conditional ??CrossCallReturnLabel_162
          CFI (cfiCond75) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond75) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond75) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond75) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond75) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond75) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond75) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond75) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond75) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond75) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond75) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond75) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond75) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond75) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond75) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond75) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond75) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond75) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond75) CFA_SP SP+-2
          CFI (cfiCond75) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond76 Using cfiCommon0
          CFI (cfiCond76) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond76) Conditional ??CrossCallReturnLabel_163
          CFI (cfiCond76) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond76) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond76) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond76) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond76) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond76) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond76) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond76) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond76) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond76) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond76) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond76) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond76) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond76) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond76) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond76) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond76) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond76) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond76) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond76) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond76) CFA_SP SP+-2
          CFI (cfiCond76) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond77 Using cfiCommon0
          CFI (cfiCond77) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond77) Conditional ??CrossCallReturnLabel_164
          CFI (cfiCond77) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond77) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond77) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond77) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond77) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond77) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond77) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond77) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond77) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond77) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond77) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond77) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond77) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond77) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond77) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond77) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond77) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond77) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond77) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond77) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond77) CFA_SP SP+-2
          CFI (cfiCond77) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond78 Using cfiCommon0
          CFI (cfiCond78) Function zdpProcessAddrReq
          CFI (cfiCond78) Conditional ??CrossCallReturnLabel_165
          CFI (cfiCond78) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond78) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond78) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond78) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond78) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond78) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond78) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond78) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond78) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond78) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond78) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond78) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond78) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond78) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond78) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond78) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond78) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond78) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond78) CFA_SP SP+-2
          CFI (cfiCond78) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond79 Using cfiCommon0
          CFI (cfiCond79) Function zdpProcessAddrReq
          CFI (cfiCond79) Conditional ??CrossCallReturnLabel_166
          CFI (cfiCond79) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond79) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond79) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond79) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond79) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond79) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond79) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond79) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond79) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond79) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond79) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond79) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond79) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond79) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond79) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond79) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond79) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond79) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond79) CFA_SP SP+-2
          CFI (cfiCond79) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiPicker80 Using cfiCommon1
          CFI (cfiPicker80) NoFunction
          CFI (cfiPicker80) Picker
        MOVX      A,@DPTR
        MOV       ?V2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V3,A
        RET
          CFI EndBlock cfiCond74
          CFI EndBlock cfiCond75
          CFI EndBlock cfiCond76
          CFI EndBlock cfiCond77
          CFI EndBlock cfiCond78
          CFI EndBlock cfiCond79
          CFI EndBlock cfiPicker80
//  730 
//  731 /*********************************************************************
//  732  * @fn          ZDP_NodeDescMsg
//  733  *
//  734  * @brief       Builds and sends a Node Descriptor message, unicast to the
//  735  *              specified device.
//  736  *
//  737  * @param       inMsg - incoming message
//  738  * @param       nwkAddr - 16 bit network address for device
//  739  * @param       pNodeDesc - pointer to the node descriptor
//  740  *
//  741  * @return      afStatus_t
//  742  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  743 afStatus_t ZDP_NodeDescMsg( zdoIncomingMsg_t *inMsg,
ZDP_NodeDescMsg:
          CFI Block cfiBlock81 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
        CODE
//  744                            uint16 nwkAddr, NodeDescriptorFormat_t *pNodeDesc )
//  745 {
        FUNCALL ZDP_NodeDescMsg, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  746   uint8 *pBuf = ZDP_TmpBuf;
        LCALL     ?Subroutine43 & 0xFFFF
//  747   byte len;
//  748 
//  749   len = 1 + 2 + 13;  // Status + nwkAddr + Node descriptor
//  750 
//  751   *pBuf++ = ZDP_SUCCESS;
??CrossCallReturnLabel_291:
        MOV       DPL,R6
        MOV       DPH,A
        CLR       A
        MOVX      @DPTR,A
//  752 
//  753   *pBuf++ = LO_UINT16( nwkAddr );
        MOV       A,R4
        INC       DPTR
        MOVX      @DPTR,A
//  754   *pBuf++ = HI_UINT16( nwkAddr );
        MOV       A,R5
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine39 & 0xFFFF
//  755 
//  756   *pBuf++ = (byte)((pNodeDesc->ComplexDescAvail << 3) |
//  757                      (pNodeDesc->UserDescAvail << 4) |
//  758                      (pNodeDesc->LogicalType & 0x07));
??CrossCallReturnLabel_50:
        ANL       A,#0x1f
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine27 & 0xFFFF
//  759 
//  760   *pBuf++ = (byte)((pNodeDesc->FrequencyBand << 3) | (pNodeDesc->APSFlags & 0x07));
??CrossCallReturnLabel_275:
        LCALL     ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_62:
        LCALL     ?Subroutine27 & 0xFFFF
//  761   *pBuf++ = pNodeDesc->CapabilityFlags;
??CrossCallReturnLabel_276:
        LCALL     ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_219:
        LCALL     ?Subroutine26 & 0xFFFF
//  762   *pBuf++ = pNodeDesc->ManufacturerCode[0];
??CrossCallReturnLabel_167:
        LCALL     ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_63:
        LCALL     ?Subroutine26 & 0xFFFF
//  763   *pBuf++ = pNodeDesc->ManufacturerCode[1];
??CrossCallReturnLabel_168:
        LCALL     ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_220:
        LCALL     ?Subroutine25 & 0xFFFF
//  764   *pBuf++ = pNodeDesc->MaxBufferSize;
??CrossCallReturnLabel_27:
        LCALL     ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_64:
        LCALL     ?Subroutine25 & 0xFFFF
//  765   *pBuf++ = pNodeDesc->MaxInTransferSize[0];
??CrossCallReturnLabel_28:
        INC       DPTR
        LCALL     ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_56:
        LCALL     ?Subroutine21 & 0xFFFF
//  766   *pBuf++ = pNodeDesc->MaxInTransferSize[1];
??CrossCallReturnLabel_23:
        LCALL     ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_57:
        INC       DPTR
        MOVX      @DPTR,A
//  767 
//  768   *pBuf++ = LO_UINT16( pNodeDesc->ServerMask );
        MOV       A,R0
        ADD       A,#0x8
        MOV       R4,A
        CLR       A
        ADDC      A,R1
        MOV       R5,A
        MOV       DPL,R4
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       ?V0,A
        LCALL     ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_107:
        MOV       A,?V0
        LCALL     ??Subroutine119_0 & 0xFFFF
//  769   *pBuf++ = HI_UINT16( pNodeDesc->ServerMask );
??CrossCallReturnLabel_173:
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R6
        ADD       A,#0xc
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine21 & 0xFFFF
//  770   *pBuf++ = pNodeDesc->MaxOutTransferSize[0];
??CrossCallReturnLabel_24:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R6
        ADD       A,#0xd
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
//  771   *pBuf++ = pNodeDesc->MaxOutTransferSize[1];
        MOV       A,R0
        ADD       A,#0xb
        MOV       DPL,A
        CLR       A
        ADDC      A,R1
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R6
        ADD       A,#0xe
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
//  772   *pBuf = pNodeDesc->DescriptorCapability;
        MOV       A,R0
        ADD       A,#0xc
        MOV       DPL,A
        CLR       A
        ADDC      A,R1
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R6
        ADD       A,#0xf
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
//  773 
//  774   return fillAndSend( &(inMsg->TransSeq), &(inMsg->srcAddr), Node_Desc_rsp, len );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x2
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       R1,#0x10
        LCALL     ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_103:
        JNC       ??ZDP_NodeDescMsg_0
        INC       R3
??ZDP_NodeDescMsg_0:
        LJMP      ??Subroutine111_0 & 0xFFFF
//  775 }
          CFI EndBlock cfiBlock81

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine41:
          CFI Block cfiCond82 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_56
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond83 Using cfiCommon0
          CFI (cfiCond83) Function ZDP_NodeDescMsg
          CFI (cfiCond83) Conditional ??CrossCallReturnLabel_57
          CFI (cfiCond83) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond83) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond83) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond83) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond83) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond83) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond83) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond83) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond83) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond83) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond83) CFA_SP SP+-2
          CFI (cfiCond83) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker84 Using cfiCommon1
          CFI (cfiPicker84) NoFunction
          CFI (cfiPicker84) Picker
        LCALL     ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_120:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond82
          CFI EndBlock cfiCond83
          CFI EndBlock cfiPicker84

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine39:
          CFI Block cfiCond85 Using cfiCommon0
          CFI Function ZDP_UserDescSet
          CFI Conditional ??CrossCallReturnLabel_49
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond86 Using cfiCommon0
          CFI (cfiCond86) Function ZDP_NodeDescMsg
          CFI (cfiCond86) Conditional ??CrossCallReturnLabel_50
          CFI (cfiCond86) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond86) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond86) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond86) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond86) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond86) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond86) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond86) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond86) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond86) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond86) CFA_SP SP+-2
          CFI (cfiCond86) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond87 Using cfiCommon0
          CFI (cfiCond87) Function ZDP_PowerDescMsg
          CFI (cfiCond87) Conditional ??CrossCallReturnLabel_51
          CFI (cfiCond87) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond87) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond87) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond87) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond87) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond87) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond87) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond87) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond87) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond87) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond87) CFA_SP SP+-2
          CFI (cfiCond87) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker88 Using cfiCommon1
          CFI (cfiPicker88) NoFunction
          CFI (cfiPicker88) Picker
        LCALL     ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_317:
        MOV       DPL,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond85
          CFI EndBlock cfiCond86
          CFI EndBlock cfiCond87
          CFI EndBlock cfiPicker88

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine26:
          CFI Block cfiCond89 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_167
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond90 Using cfiCommon0
          CFI (cfiCond90) Function ZDP_NodeDescMsg
          CFI (cfiCond90) Conditional ??CrossCallReturnLabel_168
          CFI (cfiCond90) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond90) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond90) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond90) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond90) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond90) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond90) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond90) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond90) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond90) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond90) CFA_SP SP+-2
          CFI (cfiCond90) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker91 Using cfiCommon1
          CFI (cfiPicker91) NoFunction
          CFI (cfiPicker91) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond89
          CFI EndBlock cfiCond90
          CFI EndBlock cfiPicker91
        REQUIRE ??Subroutine118_0
        ; // Fall through to label ??Subroutine118_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine118_0:
          CFI Block cfiCond92 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_169
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond93 Using cfiCommon0
          CFI (cfiCond93) Function ZDP_NodeDescMsg
          CFI (cfiCond93) Conditional ??CrossCallReturnLabel_167
          CFI (cfiCond93) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond93) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond93) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond93) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond93) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond93) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond93) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond93) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond93) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond93) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond93) CFA_SP SP+-2
          CFI (cfiCond93) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond94 Using cfiCommon0
          CFI (cfiCond94) Function ZDP_NodeDescMsg
          CFI (cfiCond94) Conditional ??CrossCallReturnLabel_168
          CFI (cfiCond94) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond94) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond94) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond94) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond94) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond94) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond94) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond94) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond94) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond94) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond94) CFA_SP SP+-2
          CFI (cfiCond94) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker95 Using cfiCommon1
          CFI (cfiPicker95) NoFunction
          CFI (cfiPicker95) Picker
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_280:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond92
          CFI EndBlock cfiCond93
          CFI EndBlock cfiCond94
          CFI EndBlock cfiPicker95

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine25:
          CFI Block cfiCond96 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_27
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond97 Using cfiCommon0
          CFI (cfiCond97) Function ZDP_NodeDescMsg
          CFI (cfiCond97) Conditional ??CrossCallReturnLabel_28
          CFI (cfiCond97) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond97) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond97) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond97) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond97) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond97) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond97) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond97) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond97) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond97) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond97) CFA_SP SP+-2
          CFI (cfiCond97) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker98 Using cfiCommon1
          CFI (cfiPicker98) NoFunction
          CFI (cfiPicker98) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_134:
        RET
          CFI EndBlock cfiCond96
          CFI EndBlock cfiCond97
          CFI EndBlock cfiPicker98

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine91:
          CFI Block cfiCond99 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_27
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond100 Using cfiCommon0
          CFI (cfiCond100) Function ZDP_NodeDescMsg
          CFI (cfiCond100) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_28
          CFI (cfiCond100) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond100) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond100) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond100) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond100) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond100) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond100) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond100) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond100) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond100) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond100) CFA_SP SP+-4
          CFI (cfiCond100) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond101 Using cfiCommon0
          CFI (cfiCond101) Function ZDP_NodeDescMsg
          CFI (cfiCond101) Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_23
          CFI (cfiCond101) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond101) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond101) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond101) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond101) CFA_SP SP+-4
          CFI (cfiCond101) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond102 Using cfiCommon0
          CFI (cfiCond102) Function ZDP_NodeDescMsg
          CFI (cfiCond102) Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_24
          CFI (cfiCond102) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond102) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond102) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond102) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond102) CFA_SP SP+-4
          CFI (cfiCond102) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker103 Using cfiCommon1
          CFI (cfiPicker103) NoFunction
          CFI (cfiPicker103) Picker
        LCALL     ?Subroutine107 & 0xFFFF
??CrossCallReturnLabel_283:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond99
          CFI EndBlock cfiCond100
          CFI EndBlock cfiCond101
          CFI EndBlock cfiCond102
          CFI EndBlock cfiPicker103

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine22:
          CFI Block cfiCond104 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_170
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond105 Using cfiCommon0
          CFI (cfiCond105) Function ZDP_SimpleDescMsg
          CFI (cfiCond105) Conditional ??CrossCallReturnLabel_171
          CFI (cfiCond105) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond105) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond105) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond105) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond105) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond105) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond105) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond105) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond105) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond105) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond105) CFA_SP SP+-2
          CFI (cfiCond105) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker106 Using cfiCommon1
          CFI (cfiPicker106) NoFunction
          CFI (cfiPicker106) Picker
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond104
          CFI EndBlock cfiCond105
          CFI EndBlock cfiPicker106
        REQUIRE ??Subroutine119_0
        ; // Fall through to label ??Subroutine119_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine119_0:
          CFI Block cfiCond107 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_172
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond108 Using cfiCommon0
          CFI (cfiCond108) Function ZDP_NodeDescMsg
          CFI (cfiCond108) Conditional ??CrossCallReturnLabel_173
          CFI (cfiCond108) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond108) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond108) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond108) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond108) CFA_SP SP+-2
          CFI (cfiCond108) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond109 Using cfiCommon0
          CFI (cfiCond109) Function ZDP_SimpleDescMsg
          CFI (cfiCond109) Conditional ??CrossCallReturnLabel_170
          CFI (cfiCond109) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond109) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond109) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond109) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond109) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond109) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond109) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond109) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond109) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond109) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond109) CFA_SP SP+-2
          CFI (cfiCond109) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond110 Using cfiCommon0
          CFI (cfiCond110) Function ZDP_SimpleDescMsg
          CFI (cfiCond110) Conditional ??CrossCallReturnLabel_171
          CFI (cfiCond110) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond110) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond110) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond110) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond110) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond110) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond110) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond110) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond110) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond110) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond110) CFA_SP SP+-2
          CFI (cfiCond110) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker111 Using cfiCommon1
          CFI (cfiPicker111) NoFunction
          CFI (cfiPicker111) Picker
        MOVX      @DPTR,A
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        RET
          CFI EndBlock cfiCond107
          CFI EndBlock cfiCond108
          CFI EndBlock cfiCond109
          CFI EndBlock cfiCond110
          CFI EndBlock cfiPicker111

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine21:
          CFI Block cfiCond112 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_23
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond113 Using cfiCommon0
          CFI (cfiCond113) Function ZDP_NodeDescMsg
          CFI (cfiCond113) Conditional ??CrossCallReturnLabel_24
          CFI (cfiCond113) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond113) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond113) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond113) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond113) CFA_SP SP+-2
          CFI (cfiCond113) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker114 Using cfiCommon1
          CFI (cfiPicker114) NoFunction
          CFI (cfiPicker114) Picker
        LCALL     ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_135:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond112
          CFI EndBlock cfiCond113
          CFI EndBlock cfiPicker114
//  776 
//  777 /*********************************************************************
//  778  * @fn          ZDP_PowerDescMsg
//  779  *
//  780  * @brief       Builds and sends a Power Descriptor message, unicast to the
//  781  *              specified device.
//  782  *
//  783  * @param       inMsg - incoming message (request)
//  784  * @param       nwkAddr - 16 bit network address for device
//  785  * @param       pPowerDesc - pointer to the node descriptor
//  786  *
//  787  * @return      afStatus_t
//  788  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  789 afStatus_t ZDP_PowerDescMsg( zdoIncomingMsg_t *inMsg,
ZDP_PowerDescMsg:
          CFI Block cfiBlock115 Using cfiCommon0
          CFI Function ZDP_PowerDescMsg
        CODE
//  790                      uint16 nwkAddr, NodePowerDescriptorFormat_t *pPowerDesc )
//  791 {
        FUNCALL ZDP_PowerDescMsg, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  792   uint8 *pBuf = ZDP_TmpBuf;
        LCALL     ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_176:
        MOV       R6,A
        MOV       A,R1
        MOV       R7,A
//  793   byte len = 1 + 2 + 2;  // Status + nwkAddr + Node Power descriptor.
//  794 
//  795   *pBuf++ = ZDP_SUCCESS;
        MOV       DPL,R0
        MOV       DPH,A
        CLR       A
        MOVX      @DPTR,A
//  796 
//  797   *pBuf++ = LO_UINT16( nwkAddr );
        MOV       A,R4
        LCALL     ?Subroutine36 & 0xFFFF
//  798   *pBuf++ = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_48:
        MOVX      @DPTR,A
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine39 & 0xFFFF
//  799 
//  800   *pBuf++ = (byte)((pPowerDesc->AvailablePowerSources << 4)
//  801                     | (pPowerDesc->PowerMode & 0x0F));
??CrossCallReturnLabel_51:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine107 & 0xFFFF
//  802   *pBuf++ = (byte)((pPowerDesc->CurrentPowerSourceLevel << 4)
//  803                     | (pPowerDesc->CurrentPowerSource & 0x0F));
??CrossCallReturnLabel_284:
        LCALL     ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_53:
        ANL       A,#0xf
        MOV       R1,A
        MOV       A,#0xc
        MOV       R0,#?V0
        LCALL     ?US_SHR
        MOV       A,?V0
        SWAP      A
        ORL       A,R1
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
//  804 
//  805   return fillAndSend( &(inMsg->TransSeq), &(inMsg->srcAddr), Power_Desc_rsp, len );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x3
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       R1,#0x5
        LCALL     ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_104:
        JNC       ??ZDP_PowerDescMsg_0
        INC       R3
??ZDP_PowerDescMsg_0:
        LJMP      ??Subroutine111_0 & 0xFFFF
//  806 }
          CFI EndBlock cfiBlock115

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine73:
          CFI Block cfiCond116 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_103
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond117 Using cfiCommon0
          CFI (cfiCond117) Function ZDP_PowerDescMsg
          CFI (cfiCond117) Conditional ??CrossCallReturnLabel_104
          CFI (cfiCond117) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond117) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond117) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond117) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond117) CFA_SP SP+-2
          CFI (cfiCond117) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker118 Using cfiCommon1
          CFI (cfiPicker118) NoFunction
          CFI (cfiPicker118) Picker
        MOV       A,R2
        ADD       A,#0x2
        MOV       R4,A
        CLR       A
        ADDC      A,R3
        MOV       R5,A
        MOV       A,R2
        ADD       A,#0xf
        MOV       R2,A
        RET
          CFI EndBlock cfiCond116
          CFI EndBlock cfiCond117
          CFI EndBlock cfiPicker118

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine50:
          CFI Block cfiCond119 Using cfiCommon0
          CFI Function ZDP_PowerDescMsg
          CFI Conditional ??CrossCallReturnLabel_176
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond120 Using cfiCommon0
          CFI (cfiCond120) Function ZDP_EPRsp
          CFI (cfiCond120) Conditional ??CrossCallReturnLabel_177
          CFI (cfiCond120) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond120) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond120) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond120) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond120) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond120) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond120) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond120) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond120) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond120) CFA_SP SP+-2
          CFI (cfiCond120) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond121 Using cfiCommon0
          CFI (cfiCond121) Function ZDP_ServerDiscRsp
          CFI (cfiCond121) Conditional ??CrossCallReturnLabel_178
          CFI (cfiCond121) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond121) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond121) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond121) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond121) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond121) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond121) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond121) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond121) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond121) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond121) CFA_SP SP+-2
          CFI (cfiCond121) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker122 Using cfiCommon1
          CFI (cfiPicker122) NoFunction
          CFI (cfiPicker122) Picker
        MOV       DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond119
          CFI EndBlock cfiCond120
          CFI EndBlock cfiCond121
          CFI EndBlock cfiPicker122
        REQUIRE ??Subroutine120_0
        ; // Fall through to label ??Subroutine120_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine120_0:
          CFI Block cfiCond123 Using cfiCommon0
          CFI Function ZDP_ServerDiscRsp
          CFI Conditional ??CrossCallReturnLabel_174
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond124 Using cfiCommon0
          CFI (cfiCond124) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond124) Conditional ??CrossCallReturnLabel_175
          CFI (cfiCond124) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond124) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond124) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond124) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond124) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond124) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond124) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond124) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond124) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond124) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond124) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond124) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond124) CFA_SP SP+-2
          CFI (cfiCond124) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond125 Using cfiCommon0
          CFI (cfiCond125) Function ZDP_PowerDescMsg
          CFI (cfiCond125) Conditional ??CrossCallReturnLabel_176
          CFI (cfiCond125) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond125) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond125) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond125) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond125) CFA_SP SP+-2
          CFI (cfiCond125) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond126 Using cfiCommon0
          CFI (cfiCond126) Function ZDP_EPRsp
          CFI (cfiCond126) Conditional ??CrossCallReturnLabel_177
          CFI (cfiCond126) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond126) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond126) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond126) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond126) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond126) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond126) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond126) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond126) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond126) CFA_SP SP+-2
          CFI (cfiCond126) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond127 Using cfiCommon0
          CFI (cfiCond127) Function ZDP_ServerDiscRsp
          CFI (cfiCond127) Conditional ??CrossCallReturnLabel_178
          CFI (cfiCond127) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond127) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond127) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond127) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond127) CFA_SP SP+-2
          CFI (cfiCond127) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker128 Using cfiCommon1
          CFI (cfiPicker128) NoFunction
          CFI (cfiPicker128) Picker
        LCALL     ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_320:
        MOV       A,R0
        RET
          CFI EndBlock cfiCond123
          CFI EndBlock cfiCond124
          CFI EndBlock cfiCond125
          CFI EndBlock cfiCond126
          CFI EndBlock cfiCond127
          CFI EndBlock cfiPicker128

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine36:
          CFI Block cfiCond129 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_47
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond130 Using cfiCommon0
          CFI (cfiCond130) Function ZDP_PowerDescMsg
          CFI (cfiCond130) Conditional ??CrossCallReturnLabel_48
          CFI (cfiCond130) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond130) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond130) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond130) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond130) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond130) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond130) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond130) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond130) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond130) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond130) CFA_SP SP+-2
          CFI (cfiCond130) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker131 Using cfiCommon1
          CFI (cfiPicker131) NoFunction
          CFI (cfiPicker131) Picker
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R5
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond129
          CFI EndBlock cfiCond130
          CFI EndBlock cfiPicker131
//  807 
//  808 /*********************************************************************
//  809  * @fn          ZDP_SimpleDescMsg
//  810  *
//  811  * @brief       Builds and sends a Simple Descriptor message, unicast to the
//  812  *              specified device.
//  813  *
//  814  * @param       inMsg - incoming message (request)
//  815  * @param       Status - message status (ZDP_SUCCESS or other)
//  816  * @param       pSimpleDesc - pointer to the node descriptor
//  817  *
//  818  * @return      afStatus_t
//  819  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  820 afStatus_t ZDP_SimpleDescMsg( zdoIncomingMsg_t *inMsg, byte Status,
ZDP_SimpleDescMsg:
          CFI Block cfiBlock132 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
        CODE
//  821                               SimpleDescriptionFormat_t *pSimpleDesc )
//  822 {
        FUNCALL ZDP_SimpleDescMsg, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV       ?V0,R2
        MOV       ?V1,R3
        LCALL     ?Subroutine51 & 0xFFFF
//  823   uint8 *pBuf = ZDP_TmpBuf;
//  824   uint8 i, len;
//  825 
//  826   if ( Status == ZDP_SUCCESS && pSimpleDesc )
??CrossCallReturnLabel_307:
        MOV       A,R6
        JNZ       ??ZDP_SimpleDescMsg_0
        MOV       A,R4
        ORL       A,R5
        JZ        ??ZDP_SimpleDescMsg_0
//  827   {
//  828     // Status + NWKAddrOfInterest + desc length + empty simple descriptor.
//  829     len = 1 + 2 + 1 + 8;
//  830     len += (pSimpleDesc->AppNumInClusters + pSimpleDesc->AppNumOutClusters) * sizeof ( uint16 );
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R2,A
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        ADD       A,R2
        CLR       C
        RLC       A
        ADD       A,#0xc
        MOV       R2,A
//  831   }
//  832   else
//  833   {
//  834     len = 1 + 2 + 1; // Status + desc length
//  835   }
//  836   if ( len >= ZDP_BUF_SZ-1 )
        CLR       C
        SUBB      A,#0x4f
        JC        ??ZDP_SimpleDescMsg_1
//  837   {
//  838     return afStatus_MEM_FAIL;
        MOV       R1,#0x10
        LJMP      ??ZDP_SimpleDescMsg_2 & 0xFFFF
//  839   }
??ZDP_SimpleDescMsg_0:
        MOV       R2,#0x4
//  840 
//  841   *pBuf++ = Status;
??ZDP_SimpleDescMsg_1:
        MOV       A,R6
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      @DPTR,A
//  842 
//  843   *pBuf++ = LO_UINT16( ZDAppNwkAddr.addr.shortAddr );
        MOV       DPTR,#ZDAppNwkAddr
        LCALL     ??Subroutine133_0 & 0xFFFF
??CrossCallReturnLabel_237:
        INC       DPTR
        MOVX      @DPTR,A
//  844   *pBuf++ = HI_UINT16( ZDAppNwkAddr.addr.shortAddr );
        MOV       DPTR,#ZDAppNwkAddr + 1
        LCALL     ?Subroutine55 & 0xFFFF
//  845 
//  846   if ( len > 4 )
??CrossCallReturnLabel_78:
        CLR       C
        SUBB      A,#0x5
        JNC       $+5
        LJMP      ??ZDP_SimpleDescMsg_3 & 0xFFFF
//  847   {
//  848     *pBuf++ = len - 4;   // Simple descriptor length
        MOV       A,#-0x4
        ADD       A,R2
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
//  849 
//  850     *pBuf++ = pSimpleDesc->EndPoint;
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine134_0 & 0xFFFF
??CrossCallReturnLabel_242:
        LCALL     ?Subroutine22 & 0xFFFF
//  851     *pBuf++ = LO_UINT16( pSimpleDesc->AppProfId );
??CrossCallReturnLabel_170:
        MOV       ?V2,DPL
        MOV       ?V3,DPH
        LCALL     ??Subroutine133_0 & 0xFFFF
??CrossCallReturnLabel_238:
        LCALL     ?Subroutine11 & 0xFFFF
//  852     *pBuf++ = HI_UINT16( pSimpleDesc->AppProfId );
??CrossCallReturnLabel_4:
        MOVX      @DPTR,A
//  853     *pBuf++ = LO_UINT16( pSimpleDesc->AppDeviceId );
        MOV       A,R4
        ADD       A,#0x3
        LCALL     ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_112:
        LCALL     ?Subroutine57 & 0xFFFF
??CrossCallReturnLabel_243:
        LCALL     ?Subroutine11 & 0xFFFF
//  854     *pBuf++ = HI_UINT16( pSimpleDesc->AppDeviceId );
??CrossCallReturnLabel_5:
        LCALL     ?Subroutine22 & 0xFFFF
//  855 
//  856     *pBuf++ = (byte)(pSimpleDesc->AppDevVer << 4);
??CrossCallReturnLabel_171:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        SWAP      A
        ANL       A,#0xf0
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
//  857 
//  858     *pBuf++ = pSimpleDesc->AppNumInClusters;
        MOV       A,R4
        ADD       A,#0x6
        LCALL     ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_113:
        MOV       DPH,A
        LCALL     ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_80:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R0
        ADD       A,#0xb
        MOV       R0,A
        JNC       ??ZDP_SimpleDescMsg_4
        INC       R1
//  859     if ( pSimpleDesc->AppNumInClusters )
??ZDP_SimpleDescMsg_4:
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        JZ        ??ZDP_SimpleDescMsg_5
//  860     {
//  861       for (i=0; i<pSimpleDesc->AppNumInClusters; ++i)
        MOV       R3,#0x0
        SJMP      ??ZDP_SimpleDescMsg_6
//  862       {
//  863         *pBuf++ = LO_UINT16( pSimpleDesc->pAppInClusterList[i] );
??ZDP_SimpleDescMsg_7:
        LCALL     ?Subroutine68 & 0xFFFF
//  864         *pBuf++ = HI_UINT16( pSimpleDesc->pAppInClusterList[i] );
//  865       }
??CrossCallReturnLabel_99:
        ADD       A,#0x7
        LCALL     ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_0:
        JNC       ??ZDP_SimpleDescMsg_8
        INC       R1
??ZDP_SimpleDescMsg_8:
        INC       R3
??ZDP_SimpleDescMsg_6:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R7,A
        MOV       A,R3
        CLR       C
        SUBB      A,R7
        JC        ??ZDP_SimpleDescMsg_7
//  866     }
//  867 
//  868     *pBuf++ = pSimpleDesc->AppNumOutClusters;
??ZDP_SimpleDescMsg_5:
        MOV       A,R4
        ADD       A,#0x9
        LCALL     ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_114:
        LCALL     ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_181:
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
//  869     if ( pSimpleDesc->AppNumOutClusters )
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        JZ        ??ZDP_SimpleDescMsg_9
//  870     {
//  871       for (i=0; i<pSimpleDesc->AppNumOutClusters; ++i)
        MOV       R3,#0x0
??ZDP_SimpleDescMsg_10:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R7,A
        MOV       A,R3
        CLR       C
        SUBB      A,R7
        JNC       ??ZDP_SimpleDescMsg_9
//  872       {
//  873         *pBuf++ = LO_UINT16( pSimpleDesc->pAppOutClusterList[i] );
        LCALL     ?Subroutine68 & 0xFFFF
//  874         *pBuf++ = HI_UINT16( pSimpleDesc->pAppOutClusterList[i] );
//  875       }
??CrossCallReturnLabel_100:
        ADD       A,#0xa
        LCALL     ?Subroutine9 & 0xFFFF
??CrossCallReturnLabel_1:
        JNC       ??ZDP_SimpleDescMsg_11
        INC       R1
??ZDP_SimpleDescMsg_11:
        INC       R3
        SJMP      ??ZDP_SimpleDescMsg_10
//  876     }
//  877   }
//  878 
//  879   else
//  880   {
//  881     *pBuf = 0; // Description Length = 0;
??ZDP_SimpleDescMsg_3:
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        CLR       A
        MOVX      @DPTR,A
//  882   }
//  883 
//  884   return fillAndSend( &(inMsg->TransSeq), &(inMsg->srcAddr), Simple_Desc_rsp, len );
??ZDP_SimpleDescMsg_9:
        ; Setup parameters for call to function fillAndSend
        MOV       ?V2,#0x4
        MOV       ?V3,#-0x80
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       A,R2
        MOV       R1,A
        LCALL     ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_102:
        LCALL     ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_264:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
??ZDP_SimpleDescMsg_2:
          CFI EndBlock cfiBlock132
        REQUIRE ?Subroutine5
        ; // Fall through to label ?Subroutine5
//  885 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine5:
          CFI Block cfiBlock133 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x8
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock133

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine77:
          CFI Block cfiCond134 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_112
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond135 Using cfiCommon0
          CFI (cfiCond135) Function ZDP_SimpleDescMsg
          CFI (cfiCond135) Conditional ??CrossCallReturnLabel_113
          CFI (cfiCond135) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond135) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond135) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond135) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond135) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond135) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond135) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond135) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond135) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond135) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond135) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond135) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond135) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond135) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond135) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond135) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond135) CFA_SP SP+-2
          CFI (cfiCond135) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond136 Using cfiCommon0
          CFI (cfiCond136) Function ZDP_SimpleDescMsg
          CFI (cfiCond136) Conditional ??CrossCallReturnLabel_114
          CFI (cfiCond136) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond136) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond136) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond136) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond136) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond136) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond136) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond136) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond136) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond136) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond136) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond136) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond136) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond136) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond136) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond136) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond136) CFA_SP SP+-2
          CFI (cfiCond136) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker137 Using cfiCommon1
          CFI (cfiPicker137) NoFunction
          CFI (cfiPicker137) Picker
        MOV       ?V2,A
        CLR       A
        ADDC      A,R5
        MOV       ?V3,A
        MOV       DPL,?V2
        RET
          CFI EndBlock cfiCond134
          CFI EndBlock cfiCond135
          CFI EndBlock cfiCond136
          CFI EndBlock cfiPicker137

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine70:
          CFI Block cfiCond138 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_101
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond139 Using cfiCommon0
          CFI (cfiCond139) Function ZDP_SimpleDescMsg
          CFI (cfiCond139) Conditional ??CrossCallReturnLabel_102
          CFI (cfiCond139) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond139) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond139) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond139) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond139) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond139) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond139) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond139) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond139) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond139) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond139) CFA_SP SP+-2
          CFI (cfiCond139) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker140 Using cfiCommon1
          CFI (cfiPicker140) NoFunction
          CFI (cfiPicker140) Picker
        MOV       A,?V0
        ADD       A,#0x2
        MOV       R4,A
        CLR       A
        ADDC      A,?V1
        MOV       R5,A
        MOV       A,?V0
        ADD       A,#0xf
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        RET
          CFI EndBlock cfiCond138
          CFI EndBlock cfiCond139
          CFI EndBlock cfiPicker140

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine68:
          CFI Block cfiCond141 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_99
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond142 Using cfiCommon0
          CFI (cfiCond142) Function ZDP_SimpleDescMsg
          CFI (cfiCond142) Conditional ??CrossCallReturnLabel_100
          CFI (cfiCond142) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond142) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond142) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond142) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond142) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond142) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond142) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond142) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond142) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond142) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond142) CFA_SP SP+-2
          CFI (cfiCond142) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker143 Using cfiCommon1
          CFI (cfiPicker143) NoFunction
          CFI (cfiPicker143) Picker
        MOV       A,R3
        LCALL     ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_149:
        RET
          CFI EndBlock cfiCond141
          CFI EndBlock cfiCond142
          CFI EndBlock cfiPicker143

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine99:
          CFI Block cfiCond144 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_148, ??CrossCallReturnLabel_2
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond145 Using cfiCommon0
          CFI (cfiCond145) Function ZDP_MatchDescReq
          CFI (cfiCond145) Conditional ??CrossCallReturnLabel_148, ??CrossCallReturnLabel_3
          CFI (cfiCond145) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond145) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond145) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond145) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond145) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond145) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond145) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond145) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond145) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond145) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond145) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond145) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond145) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond145) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond145) CFA_SP SP+-4
          CFI (cfiCond145) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond146 Using cfiCommon0
          CFI (cfiCond146) Function ZDP_SimpleDescMsg
          CFI (cfiCond146) Conditional ??CrossCallReturnLabel_149, ??CrossCallReturnLabel_99
          CFI (cfiCond146) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond146) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond146) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond146) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond146) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond146) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond146) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond146) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond146) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond146) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond146) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond146) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond146) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond146) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond146) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond146) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond146) CFA_SP SP+-4
          CFI (cfiCond146) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond147 Using cfiCommon0
          CFI (cfiCond147) Function ZDP_SimpleDescMsg
          CFI (cfiCond147) Conditional ??CrossCallReturnLabel_149, ??CrossCallReturnLabel_100
          CFI (cfiCond147) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond147) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond147) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond147) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond147) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond147) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond147) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond147) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond147) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond147) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond147) CFA_SP SP+-4
          CFI (cfiCond147) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker148 Using cfiCommon1
          CFI (cfiPicker148) NoFunction
          CFI (cfiPicker148) Picker
        ADD       A,0xE0 /* A   */
        MOV       ?V2,A
        CLR       A
        RLC       A
        MOV       ?V3,A
        MOV       A,R4
        RET
          CFI EndBlock cfiCond144
          CFI EndBlock cfiCond145
          CFI EndBlock cfiCond146
          CFI EndBlock cfiCond147
          CFI EndBlock cfiPicker148

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine46:
          CFI Block cfiCond149 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_181
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond150 Using cfiCommon0
          CFI (cfiCond150) Function ZDP_MgmtLqiRsp
          CFI (cfiCond150) Conditional ??CrossCallReturnLabel_182
          CFI (cfiCond150) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond150) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond150) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond150) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond150) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond150) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond150) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond150) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond150) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond150) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond150) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond150) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond150) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond150) CFA_SP SP+-2
          CFI (cfiCond150) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker151 Using cfiCommon1
          CFI (cfiPicker151) NoFunction
          CFI (cfiPicker151) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond149
          CFI EndBlock cfiCond150
          CFI EndBlock cfiPicker151
        REQUIRE ??Subroutine121_0
        ; // Fall through to label ??Subroutine121_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine121_0:
          CFI Block cfiCond152 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_179
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond153 Using cfiCommon0
          CFI (cfiCond153) Function ZDP_MgmtRtgRsp
          CFI (cfiCond153) Conditional ??CrossCallReturnLabel_180
          CFI (cfiCond153) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond153) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond153) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond153) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond153) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond153) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond153) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond153) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond153) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond153) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond153) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond153) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond153) CFA_SP SP+-2
          CFI (cfiCond153) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond154 Using cfiCommon0
          CFI (cfiCond154) Function ZDP_SimpleDescMsg
          CFI (cfiCond154) Conditional ??CrossCallReturnLabel_181
          CFI (cfiCond154) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond154) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond154) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond154) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond154) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond154) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond154) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond154) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond154) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond154) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond154) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond154) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond154) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond154) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond154) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond154) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond154) CFA_SP SP+-2
          CFI (cfiCond154) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond155 Using cfiCommon0
          CFI (cfiCond155) Function ZDP_MgmtLqiRsp
          CFI (cfiCond155) Conditional ??CrossCallReturnLabel_182
          CFI (cfiCond155) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond155) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond155) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond155) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond155) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond155) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond155) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond155) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond155) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond155) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond155) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond155) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond155) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond155) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond155) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond155) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond155) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond155) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond155) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond155) CFA_SP SP+-2
          CFI (cfiCond155) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker156 Using cfiCommon1
          CFI (cfiPicker156) NoFunction
          CFI (cfiPicker156) Picker
        LCALL     ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_185:
        RET
          CFI EndBlock cfiCond152
          CFI EndBlock cfiCond153
          CFI EndBlock cfiCond154
          CFI EndBlock cfiCond155
          CFI EndBlock cfiPicker156

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine85:
          CFI Block cfiCond157 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_2
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond158 Using cfiCommon0
          CFI (cfiCond158) Function ZDP_MatchDescReq
          CFI (cfiCond158) Conditional ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_3
          CFI (cfiCond158) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond158) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond158) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond158) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond158) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond158) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond158) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond158) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond158) CFA_SP SP+-4
          CFI (cfiCond158) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond159 Using cfiCommon0
          CFI (cfiCond159) Function ZDP_SimpleDescMsg
          CFI (cfiCond159) Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_181
          CFI (cfiCond159) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond159) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond159) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond159) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond159) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond159) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond159) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond159) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond159) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond159) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond159) CFA_SP SP+-4
          CFI (cfiCond159) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond160 Using cfiCommon0
          CFI (cfiCond160) Function ZDP_MgmtLqiRsp
          CFI (cfiCond160) Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_182
          CFI (cfiCond160) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond160) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond160) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond160) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond160) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond160) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond160) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond160) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond160) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond160) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond160) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond160) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond160) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond160) CFA_SP SP+-4
          CFI (cfiCond160) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond161 Using cfiCommon0
          CFI (cfiCond161) Function ZDP_EPRsp
          CFI (cfiCond161) Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_179
          CFI (cfiCond161) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond161) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond161) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond161) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond161) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond161) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond161) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond161) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond161) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond161) CFA_SP SP+-4
          CFI (cfiCond161) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond162 Using cfiCommon0
          CFI (cfiCond162) Function ZDP_MgmtRtgRsp
          CFI (cfiCond162) Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_180
          CFI (cfiCond162) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond162) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond162) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond162) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond162) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond162) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond162) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond162) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond162) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond162) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond162) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond162) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond162) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond162) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond162) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond162) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond162) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond162) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond162) CFA_SP SP+-4
          CFI (cfiCond162) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond163 Using cfiCommon0
          CFI (cfiCond163) Function ZDP_SimpleDescMsg
          CFI (cfiCond163) Conditional ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_0
          CFI (cfiCond163) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond163) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond163) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond163) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond163) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond163) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond163) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond163) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond163) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond163) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond163) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond163) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond163) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond163) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond163) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond163) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond163) CFA_SP SP+-4
          CFI (cfiCond163) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond164 Using cfiCommon0
          CFI (cfiCond164) Function ZDP_SimpleDescMsg
          CFI (cfiCond164) Conditional ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_1
          CFI (cfiCond164) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond164) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond164) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond164) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond164) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond164) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond164) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond164) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond164) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond164) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond164) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond164) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond164) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond164) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond164) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond164) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond164) CFA_SP SP+-4
          CFI (cfiCond164) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker165 Using cfiCommon1
          CFI (cfiPicker165) NoFunction
          CFI (cfiPicker165) Picker
        LCALL     ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_249:
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond157
          CFI EndBlock cfiCond158
          CFI EndBlock cfiCond159
          CFI EndBlock cfiCond160
          CFI EndBlock cfiCond161
          CFI EndBlock cfiCond162
          CFI EndBlock cfiCond163
          CFI EndBlock cfiCond164
          CFI EndBlock cfiPicker165

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine11:
          CFI Block cfiCond166 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond167 Using cfiCommon0
          CFI (cfiCond167) Function ZDP_SimpleDescMsg
          CFI (cfiCond167) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond167) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond167) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond167) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond167) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond167) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond167) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond167) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond167) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond167) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond167) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond167) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond167) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond167) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond167) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond167) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond167) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond167) CFA_SP SP+-2
          CFI (cfiCond167) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker168 Using cfiCommon1
          CFI (cfiPicker168) NoFunction
          CFI (cfiPicker168) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_142:
        LCALL     ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_128:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond166
          CFI EndBlock cfiCond167
          CFI EndBlock cfiPicker168

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine9:
          CFI Block cfiCond169 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond170 Using cfiCommon0
          CFI (cfiCond170) Function ZDP_SimpleDescMsg
          CFI (cfiCond170) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond170) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond170) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond170) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond170) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond170) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond170) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond170) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond170) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond170) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond170) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond170) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond170) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond170) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond170) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond170) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond170) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond170) CFA_SP SP+-2
          CFI (cfiCond170) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker171 Using cfiCommon1
          CFI (cfiPicker171) NoFunction
          CFI (cfiPicker171) Picker
        MOV       ?V4,A
        CLR       A
        ADDC      A,R5
        MOV       ?V5,A
        MOV       DPL,?V4
        MOV       DPH,A
        LCALL     ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_122:
        LCALL     ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_183:
        MOV       DPL,?V4
        MOV       DPH,?V5
        LCALL     ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_123:
        LCALL     ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_126:
        RET
          CFI EndBlock cfiCond169
          CFI EndBlock cfiCond170
          CFI EndBlock cfiPicker171

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine84:
          CFI Block cfiCond172 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_127, ??CrossCallReturnLabel_2
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond173 Using cfiCommon0
          CFI (cfiCond173) Function ZDP_MatchDescReq
          CFI (cfiCond173) Conditional ??CrossCallReturnLabel_127, ??CrossCallReturnLabel_3
          CFI (cfiCond173) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond173) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond173) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond173) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond173) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond173) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond173) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond173) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond173) CFA_SP SP+-4
          CFI (cfiCond173) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond174 Using cfiCommon0
          CFI (cfiCond174) Function ZDP_SimpleDescMsg
          CFI (cfiCond174) Conditional ??CrossCallReturnLabel_126, ??CrossCallReturnLabel_0
          CFI (cfiCond174) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond174) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond174) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond174) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond174) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond174) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond174) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond174) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond174) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond174) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond174) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond174) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond174) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond174) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond174) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond174) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond174) CFA_SP SP+-4
          CFI (cfiCond174) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond175 Using cfiCommon0
          CFI (cfiCond175) Function ZDP_SimpleDescMsg
          CFI (cfiCond175) Conditional ??CrossCallReturnLabel_126, ??CrossCallReturnLabel_1
          CFI (cfiCond175) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond175) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond175) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond175) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond175) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond175) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond175) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond175) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond175) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond175) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond175) CFA_SP SP+-4
          CFI (cfiCond175) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker176 Using cfiCommon1
          CFI (cfiPicker176) NoFunction
          CFI (cfiPicker176) Picker
        INC       DPTR
        LCALL     ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_248:
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R0
        ADD       A,#0x2
        MOV       R0,A
        RET
          CFI EndBlock cfiCond172
          CFI EndBlock cfiCond173
          CFI EndBlock cfiCond174
          CFI EndBlock cfiCond175
          CFI EndBlock cfiPicker176

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine81:
          CFI Block cfiCond177 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_122, ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond178 Using cfiCommon0
          CFI (cfiCond178) Function ZDP_SimpleDescMsg
          CFI (cfiCond178) Conditional ??CrossCallReturnLabel_122, ??CrossCallReturnLabel_1
          CFI (cfiCond178) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond178) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond178) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond178) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond178) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond178) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond178) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond178) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond178) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond178) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond178) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond178) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond178) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond178) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond178) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond178) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond178) CFA_SP SP+-4
          CFI (cfiCond178) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond179 Using cfiCommon0
          CFI (cfiCond179) Function ZDP_SimpleDescMsg
          CFI (cfiCond179) Conditional ??CrossCallReturnLabel_123, ??CrossCallReturnLabel_0
          CFI (cfiCond179) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond179) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond179) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond179) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond179) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond179) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond179) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond179) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond179) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond179) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond179) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond179) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond179) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond179) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond179) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond179) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond179) CFA_SP SP+-4
          CFI (cfiCond179) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond180 Using cfiCommon0
          CFI (cfiCond180) Function ZDP_SimpleDescMsg
          CFI (cfiCond180) Conditional ??CrossCallReturnLabel_123, ??CrossCallReturnLabel_1
          CFI (cfiCond180) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond180) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond180) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond180) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond180) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond180) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond180) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond180) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond180) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond180) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond180) CFA_SP SP+-4
          CFI (cfiCond180) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker181 Using cfiCommon1
          CFI (cfiPicker181) NoFunction
          CFI (cfiPicker181) Picker
        MOVX      A,@DPTR
        ADD       A,?V2
        MOV       R7,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,?V3
        MOV       DPL,R7
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond177
          CFI EndBlock cfiCond178
          CFI EndBlock cfiCond179
          CFI EndBlock cfiCond180
          CFI EndBlock cfiPicker181
//  886 
//  887 /*********************************************************************
//  888  * @fn          ZDP_EPRsp
//  889  *
//  890  * @brief       This builds and send an endpoint list. Used in
//  891  *              Active_EP_rsp and Match_Desc_Rsp
//  892  *              message.  This function sends unicast message to the
//  893  *              requesting device.
//  894  *
//  895  * @param       MsgType - either Active_EP_rsp or Match_Desc_Rsp
//  896  * @param       dstAddr - destination address
//  897  * @param       Status - message status (ZDP_SUCCESS or other)
//  898  * @param       nwkAddr - Device's short address that this response describes
//  899  * @param       Count - number of endpoint/interfaces in list
//  900  * @param       pEPIntfList - Array of Endpoint/Interfaces
//  901  * @param       SecurityEnable - Security Options
//  902  *
//  903  * @return      afStatus_t
//  904  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  905 afStatus_t ZDP_EPRsp( uint16 MsgType, byte TransSeq, zAddrType_t *dstAddr,
ZDP_EPRsp:
          CFI Block cfiBlock182 Using cfiCommon0
          CFI Function ZDP_EPRsp
        CODE
//  906                         byte Status, uint16 nwkAddr, byte Count,
//  907                         uint8 *pEPList,
//  908                         byte SecurityEnable )
//  909 {
        FUNCALL ZDP_EPRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EPRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV       A,#-0xf
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       A,R4
        MOV       R6,A
        MOV       A,R5
        MOV       R7,A
//  910   uint8 *pBuf = ZDP_TmpBuf;
        LCALL     ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_177:
        MOV       R2,A
        MOV       A,R1
        MOV       R3,A
//  911   byte len = 1 + 2 + 1;  // Status + nwkAddr + endpoint/interface count.
        MOV       ?V0,#0x4
//  912   byte txOptions;
//  913 
//  914   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  915 
//  916   if ( MsgType == Match_Desc_rsp )
        MOV       A,#0x6
        XRL       A,?V2
        JNZ       ??ZDP_EPRsp_0
        MOV       A,#-0x80
        XRL       A,?V3
??ZDP_EPRsp_0:
        JNZ       ??ZDP_EPRsp_1
//  917     txOptions = AF_MSG_ACK_REQUEST;
        MOV       ?V1,#0x10
        SJMP      ??ZDP_EPRsp_2
//  918   else
//  919     txOptions = 0;
??ZDP_EPRsp_1:
        MOV       ?V1,#0x0
//  920 
//  921     *pBuf++ = Status;
??ZDP_EPRsp_2:
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine121_0 & 0xFFFF
??CrossCallReturnLabel_179:
        MOV       A,#0x11
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine15 & 0xFFFF
//  922   *pBuf++ = LO_UINT16( nwkAddr );
//  923   *pBuf++ = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_12:
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R1,A
//  924 
//  925   *pBuf++ = Count;   // Endpoint/Interface count
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
//  926 
//  927   if ( Count )
        JZ        ??ZDP_EPRsp_3
//  928   {
//  929     len += Count;
        MOV       A,#0x4
        ADD       A,R1
        MOV       ?V0,A
//  930     osal_memcpy( pBuf, pEPList, Count );
        ; Setup parameters for call to function osal_memcpy
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine45 & 0xFFFF
//  931   }
??CrossCallReturnLabel_60:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R1
        MOV       R4,A
        MOV       R5,#0x0
        MOV       A,R2
        ADD       A,#0x4
        MOV       R2,A
        JNC       ??ZDP_EPRsp_4
        INC       R3
??ZDP_EPRsp_4:
        LCALL     ??Subroutine144_0 & 0xFFFF
??CrossCallReturnLabel_300:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
//  932 
//  933   FillAndSendTxOptions( &TransSeq, dstAddr, MsgType, len, txOptions );
??ZDP_EPRsp_3:
        MOV       A,?V1
        MOV       DPTR,#ZDP_TxOptions
        MOVX      @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       R1,?V0
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_265:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,R1
        MOV       R1,A
        MOV       DPTR,#ZDP_TxOptions
        CLR       A
        MOVX      @DPTR,A
        INC       A
        LJMP      ?Subroutine3 & 0xFFFF
//  934 }
          CFI EndBlock cfiBlock182
//  935 
//  936 /*********************************************************************
//  937  * @fn          ZDP_UserDescRsp
//  938  *
//  939  * @brief       Build and send the User Decriptor Response.
//  940  *
//  941  *
//  942  * @param       dstAddr - destination address
//  943  * @param       nwkAddrOfInterest -
//  944  * @param       userDesc -
//  945  * @param       SecurityEnable - Security Options
//  946  *
//  947  * @return      ZStatus_t
//  948  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  949 ZStatus_t ZDP_UserDescRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_UserDescRsp:
          CFI Block cfiBlock183 Using cfiCommon0
          CFI Function ZDP_UserDescRsp
        CODE
//  950                 uint16 nwkAddrOfInterest, UserDescriptorFormat_t *userDesc,
//  951                 byte SecurityEnable )
//  952 {
        FUNCALL ZDP_UserDescRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_UserDescRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V8
        REQUIRE ?V9
        MOV       A,#-0x12
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        LCALL     ?Subroutine62 & 0xFFFF
//  953   uint8 *pBuf = ZDP_TmpBuf;
??CrossCallReturnLabel_88:
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine146_0 & 0xFFFF
??CrossCallReturnLabel_322:
        MOV       ?V8,R0
        MOV       ?V9,A
//  954   byte len = 1 + 2 + 1;  // Status + nwkAddr + descriptor length.
//  955 
//  956   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  957 
//  958   len += userDesc->len;
        MOV       DPL,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        ADD       A,#0x4
        MOV       ?V2,A
//  959 
//  960   *pBuf++ = ZSUCCESS;
        MOV       DPL,?V0
        MOV       DPH,?V1
        CLR       A
        MOVX      @DPTR,A
//  961 
//  962   *pBuf++ = LO_UINT16( nwkAddrOfInterest );
        MOV       A,R4
        INC       DPTR
        MOVX      @DPTR,A
//  963   *pBuf++ = HI_UINT16( nwkAddrOfInterest );
        MOV       A,R5
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
//  964 
//  965   *pBuf++ = userDesc->len;
        MOV       DPL,R0
        MOV       DPH,?V9
        LCALL     ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_89:
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
//  966   osal_memcpy( pBuf, userDesc->desc, userDesc->len );
        ; Setup parameters for call to function osal_memcpy
        MOV       DPL,R0
        MOV       DPH,?V9
        INC       DPTR
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       ?V4,R1
        MOV       ?V5,R2
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       R5,#0x0
        MOV       A,?V0
        ADD       A,#0x4
        LCALL     ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_299:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
//  967 
//  968   return (ZStatus_t)fillAndSend( &TransSeq, dstAddr, User_Desc_rsp, len );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x11
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       R1,?V2
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_266:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        LJMP      ?Subroutine4 & 0xFFFF
//  969 }
          CFI EndBlock cfiBlock183

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine62:
          CFI Block cfiCond184 Using cfiCommon0
          CFI Function ZDP_UserDescSet
          CFI Conditional ??CrossCallReturnLabel_87
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond185 Using cfiCommon0
          CFI (cfiCond185) Function ZDP_UserDescRsp
          CFI (cfiCond185) Conditional ??CrossCallReturnLabel_88
          CFI (cfiCond185) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond185) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond185) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond185) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond185) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond185) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond185) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond185) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond185) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond185) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond185) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond185) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond185) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond185) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond185) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond185) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond185) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond185) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond185) CFA_SP SP+-2
          CFI (cfiCond185) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker186 Using cfiCommon1
          CFI (cfiPicker186) NoFunction
          CFI (cfiPicker186) Picker
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        LCALL     ?Subroutine106 & 0xFFFF
??CrossCallReturnLabel_326:
        MOV       ?V0,R0
        MOV       ?V1,A
        RET
          CFI EndBlock cfiCond184
          CFI EndBlock cfiCond185
          CFI EndBlock cfiPicker186
//  970 
//  971 /*********************************************************************
//  972  * @fn          ZDP_ServerDiscRsp
//  973  *
//  974  * @brief       Build and send the Server_Discovery_rsp response.
//  975  *
//  976  * @param       transID - Transaction sequence number of request.
//  977  * @param       dstAddr - Network Destination Address.
//  978  * @param       status - Status of response to request.
//  979  * @param       aoi - Network Address of Interest of request.
//  980  * @param       serverMask - Bit map of service(s) being sought.
//  981  * @param       SecurityEnable - Security Options
//  982  *
//  983  * @return      ZStatus_t
//  984  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  985 ZStatus_t ZDP_ServerDiscRsp( byte transID, zAddrType_t *dstAddr, byte status,
ZDP_ServerDiscRsp:
          CFI Block cfiBlock187 Using cfiCommon0
          CFI Function ZDP_ServerDiscRsp
        CODE
//  986                            uint16 aoi, uint16 serverMask, byte SecurityEnable )
//  987 {
        FUNCALL ZDP_ServerDiscRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       A,R4
        MOV       R6,A
//  988   const byte len = 1  + 2;  // status + aoi + mask.
//  989   uint8 *pBuf = ZDP_TmpBuf;
        LCALL     ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_178:
        MOV       R4,A
        MOV       A,R1
        MOV       R5,A
//  990   ZStatus_t stat;
//  991 
//  992   // Intentionally unreferenced parameters
//  993   (void)aoi;
//  994   (void)SecurityEnable;
//  995 
//  996   *pBuf++ = status;
        MOV       A,R6
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      @DPTR,A
        MOV       A,#0xd
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine120_0 & 0xFFFF
//  997 
//  998   *pBuf++ = LO_UINT16( serverMask );
??CrossCallReturnLabel_174:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        MOVX      @DPTR,A
//  999   *pBuf++ = HI_UINT16( serverMask );
        MOV       A,R1
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
// 1000 
// 1001   ZDP_TxOptions = AF_MSG_ACK_REQUEST;
        MOV       DPTR,#ZDP_TxOptions
        MOV       A,#0x10
        MOVX      @DPTR,A
// 1002   stat = fillAndSend( &transID, dstAddr, Server_Discovery_rsp, len );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x15
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       R1,#0x3
        MOV       A,R2
        MOV       R4,A
        MOV       A,R3
        MOV       R5,A
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_267:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        MOV       A,R1
        MOV       R1,A
// 1003   ZDP_TxOptions = AF_TX_OPTIONS_NONE;
        MOV       DPTR,#ZDP_TxOptions
        CLR       A
        MOVX      @DPTR,A
// 1004 
// 1005   return ( stat );
        INC       A
        LJMP      ??Subroutine112_0 & 0xFFFF
// 1006 }
          CFI EndBlock cfiBlock187
// 1007 
// 1008 /*********************************************************************
// 1009  * @fn          ZDP_GenericRsp
// 1010  *
// 1011  * @brief       Sends a response message with only the parameter status
// 1012  *              byte and the addr of interest for data.
// 1013  *              This function sends unicast message to the
// 1014  *              requesting device.
// 1015  *
// 1016  * @param       dstAddr - destination address
// 1017  * @param       status  - generic status for response
// 1018  * @param       aoi     - address of interest
// 1019  * @param       dstAddr - destination address
// 1020  * @param       rspId   - response cluster ID
// 1021  * @param       SecurityEnable - Security Options
// 1022  *
// 1023  * @return      afStatus_t
// 1024  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1025 afStatus_t ZDP_GenericRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_GenericRsp:
          CFI Block cfiBlock188 Using cfiCommon0
          CFI Function ZDP_GenericRsp
        CODE
// 1026                      byte status, uint16 aoi, uint16 rspID, byte SecurityEnable )
// 1027 {
        FUNCALL ZDP_GenericRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV       A,#-0x9
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 1028   uint8 len;
// 1029 
// 1030   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1031 
// 1032   ZDP_TmpBuf[0] = status;
        LCALL     ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_188:
        MOV       A,R4
        MOVX      @DPTR,A
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine145_0 & 0xFFFF
// 1033   ZDP_TmpBuf[1] = LO_UINT16( aoi );
??CrossCallReturnLabel_310:
        MOV       DPTR,#ZDP_TmpBuf
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPH,A
        MOV       DPL,R4
        INC       DPTR
        MOV       A,R0
        LCALL     ?Subroutine13 & 0xFFFF
// 1034   ZDP_TmpBuf[2] = HI_UINT16( aoi );
// 1035 
// 1036   // Length byte
// 1037   ZDP_TmpBuf[3] = 0;
??CrossCallReturnLabel_9:
        LCALL     ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_189:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        CLR       A
        MOVX      @DPTR,A
// 1038   len = 4;
// 1039 
// 1040   return fillAndSend( &TransSeq, dstAddr, rspID, len );
        ; Setup parameters for call to function fillAndSend
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       R1,#0x4
        MOV       A,R2
        MOV       R4,A
        MOV       A,R3
        MOV       R5,A
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_268:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        MOV       A,#0x1
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock188
        REQUIRE ?Subroutine6
        ; // Fall through to label ?Subroutine6
// 1041 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine6:
          CFI Block cfiBlock189 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x1
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock189

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine42:
          CFI Block cfiCond190 Using cfiCommon0
          CFI Function ZDP_DeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_187
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond191 Using cfiCommon0
          CFI (cfiCond191) Function ZDP_GenericRsp
          CFI (cfiCond191) Conditional ??CrossCallReturnLabel_188
          CFI (cfiCond191) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond191) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond191) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond191) CFA_SP SP+-2
          CFI (cfiCond191) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond192 Using cfiCommon0
          CFI (cfiCond192) Function ZDP_GenericRsp
          CFI (cfiCond192) Conditional ??CrossCallReturnLabel_189
          CFI (cfiCond192) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond192) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond192) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond192) CFA_SP SP+-2
          CFI (cfiCond192) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond193 Using cfiCommon0
          CFI (cfiCond193) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond193) Conditional ??CrossCallReturnLabel_190
          CFI (cfiCond193) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond193) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond193) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond193) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond193) CFA_SP SP+-2
          CFI (cfiCond193) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond194 Using cfiCommon0
          CFI (cfiCond194) Function ZDP_MgmtLqiRsp
          CFI (cfiCond194) Conditional ??CrossCallReturnLabel_191
          CFI (cfiCond194) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond194) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond194) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond194) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond194) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond194) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond194) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond194) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond194) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond194) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond194) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond194) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond194) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond194) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond194) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond194) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond194) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond194) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond194) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond194) CFA_SP SP+-2
          CFI (cfiCond194) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker195 Using cfiCommon1
          CFI (cfiPicker195) NoFunction
          CFI (cfiPicker195) Picker
        MOV       DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond190
          CFI EndBlock cfiCond191
          CFI EndBlock cfiCond192
          CFI EndBlock cfiCond193
          CFI EndBlock cfiCond194
          CFI EndBlock cfiPicker195
        REQUIRE ??Subroutine122_0
        ; // Fall through to label ??Subroutine122_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine122_0:
          CFI Block cfiCond196 Using cfiCommon0
          CFI Function ZDP_IncomingData
          CFI Conditional ??CrossCallReturnLabel_186
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond197 Using cfiCommon0
          CFI (cfiCond197) Function ZDP_DeviceAnnce
          CFI (cfiCond197) Conditional ??CrossCallReturnLabel_187
          CFI (cfiCond197) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond197) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond197) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond197) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond197) CFA_SP SP+-2
          CFI (cfiCond197) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond198 Using cfiCommon0
          CFI (cfiCond198) Function ZDP_GenericRsp
          CFI (cfiCond198) Conditional ??CrossCallReturnLabel_188
          CFI (cfiCond198) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond198) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond198) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond198) CFA_SP SP+-2
          CFI (cfiCond198) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond199 Using cfiCommon0
          CFI (cfiCond199) Function ZDP_GenericRsp
          CFI (cfiCond199) Conditional ??CrossCallReturnLabel_189
          CFI (cfiCond199) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond199) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond199) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond199) CFA_SP SP+-2
          CFI (cfiCond199) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond200 Using cfiCommon0
          CFI (cfiCond200) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond200) Conditional ??CrossCallReturnLabel_190
          CFI (cfiCond200) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond200) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond200) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond200) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond200) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond200) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond200) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond200) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond200) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond200) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond200) CFA_SP SP+-2
          CFI (cfiCond200) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond201 Using cfiCommon0
          CFI (cfiCond201) Function ZDP_MgmtLqiRsp
          CFI (cfiCond201) Conditional ??CrossCallReturnLabel_191
          CFI (cfiCond201) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond201) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond201) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond201) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond201) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond201) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond201) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond201) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond201) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond201) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond201) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond201) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond201) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond201) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond201) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond201) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond201) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond201) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond201) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond201) CFA_SP SP+-2
          CFI (cfiCond201) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker202 Using cfiCommon1
          CFI (cfiPicker202) NoFunction
          CFI (cfiPicker202) Picker
        LCALL     ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_193:
        RET
          CFI EndBlock cfiCond196
          CFI EndBlock cfiCond197
          CFI EndBlock cfiCond198
          CFI EndBlock cfiCond199
          CFI EndBlock cfiCond200
          CFI EndBlock cfiCond201
          CFI EndBlock cfiPicker202

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine87:
          CFI Block cfiCond203 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
          CFI Conditional ??CrossCallReturnLabel_192, ??CrossCallReturnLabel_15
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond204 Using cfiCommon0
          CFI (cfiCond204) Function ZDP_SimpleDescReq
          CFI (cfiCond204) Conditional ??CrossCallReturnLabel_192, ??CrossCallReturnLabel_16
          CFI (cfiCond204) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond204) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond204) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond204) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond204) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond204) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond204) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond204) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond204) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond204) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond204) CFA_SP SP+-4
          CFI (cfiCond204) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond205 Using cfiCommon0
          CFI (cfiCond205) Function ZDP_DeviceAnnce
          CFI (cfiCond205) Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_187
          CFI (cfiCond205) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond205) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond205) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond205) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond205) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond205) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond205) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond205) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond205) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond205) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond205) CFA_SP SP+-4
          CFI (cfiCond205) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond206 Using cfiCommon0
          CFI (cfiCond206) Function ZDP_GenericRsp
          CFI (cfiCond206) Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_188
          CFI (cfiCond206) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond206) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond206) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond206) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond206) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond206) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond206) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond206) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond206) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond206) CFA_SP SP+-4
          CFI (cfiCond206) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond207 Using cfiCommon0
          CFI (cfiCond207) Function ZDP_GenericRsp
          CFI (cfiCond207) Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_189
          CFI (cfiCond207) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond207) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond207) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond207) CFA_SP SP+-4
          CFI (cfiCond207) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond208 Using cfiCommon0
          CFI (cfiCond208) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond208) Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_190
          CFI (cfiCond208) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond208) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond208) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond208) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond208) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond208) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond208) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond208) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond208) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond208) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond208) CFA_SP SP+-4
          CFI (cfiCond208) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond209 Using cfiCommon0
          CFI (cfiCond209) Function ZDP_MgmtLqiRsp
          CFI (cfiCond209) Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_191
          CFI (cfiCond209) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond209) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond209) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond209) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond209) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond209) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond209) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond209) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond209) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond209) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond209) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond209) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond209) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond209) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond209) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond209) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond209) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond209) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond209) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond209) CFA_SP SP+-4
          CFI (cfiCond209) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond210 Using cfiCommon0
          CFI (cfiCond210) Function ZDP_IncomingData
          CFI (cfiCond210) Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_186
          CFI (cfiCond210) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond210) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond210) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond210) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond210) CFA_SP SP+-4
          CFI (cfiCond210) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiPicker211 Using cfiCommon1
          CFI (cfiPicker211) NoFunction
          CFI (cfiPicker211) Picker
        LCALL     ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_195:
        RET
          CFI EndBlock cfiCond203
          CFI EndBlock cfiCond204
          CFI EndBlock cfiCond205
          CFI EndBlock cfiCond206
          CFI EndBlock cfiCond207
          CFI EndBlock cfiCond208
          CFI EndBlock cfiCond209
          CFI EndBlock cfiCond210
          CFI EndBlock cfiPicker211

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine105:
          CFI Block cfiCond212 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
          CFI Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_192, ??CrossCallReturnLabel_15
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond213 Using cfiCommon0
          CFI (cfiCond213) Function ZDP_SimpleDescReq
          CFI (cfiCond213) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_192, ??CrossCallReturnLabel_16
          CFI (cfiCond213) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond213) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond213) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond213) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond213) CFA_SP SP+-6
          CFI (cfiCond213) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond214 Using cfiCommon0
          CFI (cfiCond214) Function ZDP_DeviceAnnce
          CFI (cfiCond214) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_187
          CFI (cfiCond214) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond214) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond214) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond214) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond214) CFA_SP SP+-6
          CFI (cfiCond214) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond215 Using cfiCommon0
          CFI (cfiCond215) Function ZDP_GenericRsp
          CFI (cfiCond215) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_188
          CFI (cfiCond215) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond215) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond215) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond215) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond215) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond215) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond215) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond215) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond215) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond215) CFA_SP SP+-6
          CFI (cfiCond215) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond216 Using cfiCommon0
          CFI (cfiCond216) Function ZDP_GenericRsp
          CFI (cfiCond216) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_189
          CFI (cfiCond216) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond216) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond216) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond216) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond216) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond216) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond216) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond216) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond216) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond216) CFA_SP SP+-6
          CFI (cfiCond216) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond217 Using cfiCommon0
          CFI (cfiCond217) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond217) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_190
          CFI (cfiCond217) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond217) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond217) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond217) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond217) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond217) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond217) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond217) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond217) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond217) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond217) CFA_SP SP+-6
          CFI (cfiCond217) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond218 Using cfiCommon0
          CFI (cfiCond218) Function ZDP_MgmtLqiRsp
          CFI (cfiCond218) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_191
          CFI (cfiCond218) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond218) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond218) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond218) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond218) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond218) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond218) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond218) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond218) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond218) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond218) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond218) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond218) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond218) CFA_SP SP+-6
          CFI (cfiCond218) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond219 Using cfiCommon0
          CFI (cfiCond219) Function ZDP_IncomingData
          CFI (cfiCond219) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_186
          CFI (cfiCond219) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond219) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond219) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond219) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond219) CFA_SP SP+-6
          CFI (cfiCond219) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond220 Using cfiCommon0
          CFI (cfiCond220) Function ZDP_NWKAddrOfInterestReq
          CFI (cfiCond220) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_115, ??CrossCallReturnLabel_15
          CFI (cfiCond220) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond220) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond220) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond220) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond220) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond220) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond220) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond220) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond220) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond220) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond220) CFA_SP SP+-6
          CFI (cfiCond220) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond221 Using cfiCommon0
          CFI (cfiCond221) Function ZDP_SimpleDescReq
          CFI (cfiCond221) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_115, ??CrossCallReturnLabel_16
          CFI (cfiCond221) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond221) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond221) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond221) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond221) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond221) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond221) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond221) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond221) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond221) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond221) CFA_SP SP+-6
          CFI (cfiCond221) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond222 Using cfiCommon0
          CFI (cfiCond222) Function ZDP_SimpleDescReq
          CFI (cfiCond222) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_116, ??CrossCallReturnLabel_8
          CFI (cfiCond222) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond222) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond222) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond222) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond222) CFA_SP SP+-6
          CFI (cfiCond222) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond223 Using cfiCommon0
          CFI (cfiCond223) Function ZDP_GenericRsp
          CFI (cfiCond223) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_116, ??CrossCallReturnLabel_9
          CFI (cfiCond223) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond223) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond223) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond223) CFA_SP SP+-6
          CFI (cfiCond223) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond224 Using cfiCommon0
          CFI (cfiCond224) Function ZDP_DeviceAnnce
          CFI (cfiCond224) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_117, ??CrossCallReturnLabel_21
          CFI (cfiCond224) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond224) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond224) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond224) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond224) CFA_SP SP+-6
          CFI (cfiCond224) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond225 Using cfiCommon0
          CFI (cfiCond225) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond225) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_117, ??CrossCallReturnLabel_22
          CFI (cfiCond225) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond225) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond225) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond225) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond225) CFA_SP SP+-6
          CFI (cfiCond225) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker226 Using cfiCommon1
          CFI (cfiPicker226) NoFunction
          CFI (cfiPicker226) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPH,A
        MOV       DPL,R0
        RET
          CFI EndBlock cfiCond212
          CFI EndBlock cfiCond213
          CFI EndBlock cfiCond214
          CFI EndBlock cfiCond215
          CFI EndBlock cfiCond216
          CFI EndBlock cfiCond217
          CFI EndBlock cfiCond218
          CFI EndBlock cfiCond219
          CFI EndBlock cfiCond220
          CFI EndBlock cfiCond221
          CFI EndBlock cfiCond222
          CFI EndBlock cfiCond223
          CFI EndBlock cfiCond224
          CFI EndBlock cfiCond225
          CFI EndBlock cfiPicker226

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine13:
          CFI Block cfiCond227 Using cfiCommon0
          CFI Function ZDP_SimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_8
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond228 Using cfiCommon0
          CFI (cfiCond228) Function ZDP_GenericRsp
          CFI (cfiCond228) Conditional ??CrossCallReturnLabel_9
          CFI (cfiCond228) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond228) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond228) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond228) CFA_SP SP+-2
          CFI (cfiCond228) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker229 Using cfiCommon1
          CFI (cfiPicker229) NoFunction
          CFI (cfiPicker229) Picker
        LCALL     ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_116:
        INC       DPTR
        MOV       A,R1
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond227
          CFI EndBlock cfiCond228
          CFI EndBlock cfiPicker229
// 1042 
// 1043 /*********************************************************************
// 1044  * Binding
// 1045  */
// 1046 /*********************************************************************
// 1047  * @fn          ZDP_EndDeviceBindReq
// 1048  *
// 1049  * @brief       This builds and sends a End_Device_Bind_req message.
// 1050  *              This function sends a unicast message.
// 1051  *
// 1052  * @param       dstAddr - destination address
// 1053  * @param       LocalCoordinator - short address of local coordinator
// 1054  * @param       epIntf - Endpoint/Interface of Simple Desc
// 1055  * @param       ProfileID - Profile ID
// 1056  *
// 1057  *   The Input cluster list is the opposite of what you would think.
// 1058  *   This is the output cluster list of this device
// 1059  * @param       NumInClusters - number of input clusters
// 1060  * @param       InClusterList - input cluster ID list
// 1061  *
// 1062  *   The Output cluster list is the opposite of what you would think.
// 1063  *   This is the input cluster list of this device
// 1064  * @param       NumOutClusters - number of output clusters
// 1065  * @param       OutClusterList - output cluster ID list
// 1066  *
// 1067  * @param       SecurityEnable - Security Options
// 1068  *
// 1069  * @return      afStatus_t
// 1070  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1071 afStatus_t ZDP_EndDeviceBindReq( zAddrType_t *dstAddr,
ZDP_EndDeviceBindReq:
          CFI Block cfiBlock230 Using cfiCommon0
          CFI Function ZDP_EndDeviceBindReq
        CODE
// 1072                                  uint16 LocalCoordinator,
// 1073                                  byte endPoint,
// 1074                                  uint16 ProfileID,
// 1075                                  byte NumInClusters, cId_t *InClusterList,
// 1076                                  byte NumOutClusters, cId_t *OutClusterList,
// 1077                                  byte SecurityEnable )
// 1078 {
        FUNCALL ZDP_EndDeviceBindReq, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EndDeviceBindReq, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EndDeviceBindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EndDeviceBindReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV       A,#-0x12
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       ?V4,R4
        MOV       ?V5,R5
        MOV       ?V3,R1
// 1079   uint8 *pBuf = ZDP_TmpBuf;
        LCALL     ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_292:
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V2,A
        MOV       A,#0x17
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V1,A
// 1080   uint8 i, len;
// 1081   uint8 *ieeeAddr;
// 1082 
// 1083   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1084 
// 1085   // LocalCoordinator + SrcExtAddr + ep + ProfileID +  NumInClusters + NumOutClusters.
// 1086   len = 2 + Z_EXTADDR_LEN + 1 + 2 + 1 + 1;
// 1087   len += (NumInClusters + NumOutClusters) * sizeof ( uint16 );
        MOV       A,?V2
        ADD       A,?V1
        CLR       C
        RLC       A
        ADD       A,#0xf
        MOV       ?V0,A
// 1088 
// 1089   if ( len >= ZDP_BUF_SZ-1 )
        CLR       C
        SUBB      A,#0x4f
        JC        ??ZDP_EndDeviceBindReq_0
// 1090   {
// 1091     return afStatus_MEM_FAIL;
        MOV       R1,#0x10
        LJMP      ??ZDP_EndDeviceBindReq_1 & 0xFFFF
// 1092   }
// 1093 
// 1094   if ( LocalCoordinator != NLME_GetShortAddr() )
??ZDP_EndDeviceBindReq_0:
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL     `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV       A,R2
        XRL       A,?V4
        JNZ       ??ZDP_EndDeviceBindReq_2
        MOV       A,R3
        XRL       A,?V5
??ZDP_EndDeviceBindReq_2:
        JZ        ??ZDP_EndDeviceBindReq_3
// 1095   {
// 1096     return afStatus_INVALID_PARAMETER;
        MOV       R1,#0x2
        LJMP      ??ZDP_EndDeviceBindReq_1 & 0xFFFF
// 1097   }
// 1098 
// 1099   *pBuf++ = LO_UINT16( LocalCoordinator );
??ZDP_EndDeviceBindReq_3:
        MOV       DPL,R6
        MOV       DPH,R7
        MOV       A,?V4
        MOVX      @DPTR,A
// 1100   *pBuf++ = HI_UINT16( LocalCoordinator );
        MOV       A,?V5
        INC       DPTR
        MOVX      @DPTR,A
// 1101 
// 1102   ieeeAddr = NLME_GetExtAddr();
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL     `??NLME_GetExtAddr::?relay`; Banked call to: NLME_GetExtAddr
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       R4,?V4
        MOV       R5,?V5
// 1103   pBuf = osal_cpyExtAddr( pBuf, ieeeAddr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        ADD       A,#0x2
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        LCALL     ?Subroutine67 & 0xFFFF
// 1104 
// 1105   *pBuf++ = endPoint;
??CrossCallReturnLabel_97:
        MOV       A,?V3
        MOVX      @DPTR,A
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine15 & 0xFFFF
// 1106 
// 1107   *pBuf++ = LO_UINT16( ProfileID );   // Profile ID
// 1108   *pBuf++ = HI_UINT16( ProfileID );
// 1109 
// 1110   *pBuf++ = NumInClusters; // Input cluster list
??CrossCallReturnLabel_13:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V2
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x4
        MOV       R6,A
        CLR       A
        ADDC      A,R3
        MOV       R7,A
// 1111   for ( i = 0; i < NumInClusters; ++i )
        MOV       R2,#0x0
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine145_0 & 0xFFFF
??CrossCallReturnLabel_311:
        SJMP      ??ZDP_EndDeviceBindReq_4
// 1112   {
// 1113     *pBuf++ = LO_UINT16(InClusterList[i]);
??ZDP_EndDeviceBindReq_5:
        LCALL     ?Subroutine12 & 0xFFFF
// 1114     *pBuf++ = HI_UINT16(InClusterList[i]);
// 1115   }
??CrossCallReturnLabel_6:
        JNC       ??ZDP_EndDeviceBindReq_6
        INC       R7
??ZDP_EndDeviceBindReq_6:
        INC       R2
??ZDP_EndDeviceBindReq_4:
        MOV       A,R2
        CLR       C
        SUBB      A,?V2
        JC        ??ZDP_EndDeviceBindReq_5
// 1116 
// 1117   *pBuf++ = NumOutClusters; // Output cluster list
        MOV       DPL,R6
        MOV       DPH,R7
        MOV       A,?V1
        MOVX      @DPTR,A
        INC       DPTR
        MOV       R6,DPL
        MOV       R7,DPH
// 1118   for ( i = 0; i < NumOutClusters; ++i )
        MOV       R2,#0x0
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine145_0 & 0xFFFF
??CrossCallReturnLabel_312:
        SJMP      ??ZDP_EndDeviceBindReq_7
// 1119   {
// 1120     *pBuf++ = LO_UINT16(OutClusterList[i]);
??ZDP_EndDeviceBindReq_8:
        LCALL     ?Subroutine12 & 0xFFFF
// 1121     *pBuf++ = HI_UINT16(OutClusterList[i]);
// 1122   }
??CrossCallReturnLabel_7:
        JNC       ??ZDP_EndDeviceBindReq_9
        INC       R7
??ZDP_EndDeviceBindReq_9:
        INC       R2
??ZDP_EndDeviceBindReq_7:
        MOV       A,R2
        CLR       C
        SUBB      A,?V1
        JC        ??ZDP_EndDeviceBindReq_8
// 1123 
// 1124   return fillAndSend( &ZDP_TransID, dstAddr, End_Device_Bind_req, len );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V4,#0x20
        MOV       ?V5,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       R1,?V0
        MOV       R4,?V6
        MOV       R5,?V7
        LCALL     ??Subroutine136_0 & 0xFFFF
??CrossCallReturnLabel_258:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
??ZDP_EndDeviceBindReq_1:
        LJMP      ??Subroutine141_0 & 0xFFFF
// 1125 }
          CFI EndBlock cfiBlock230

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine67:
          CFI Block cfiCond231 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
          CFI Conditional ??CrossCallReturnLabel_96
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond232 Using cfiCommon0
          CFI (cfiCond232) Function ZDP_EndDeviceBindReq
          CFI (cfiCond232) Conditional ??CrossCallReturnLabel_97
          CFI (cfiCond232) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond232) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond232) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond232) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond232) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond232) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond232) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond232) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond232) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond232) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond232) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond232) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond232) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond232) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond232) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond232) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond232) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond232) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond232) CFA_SP SP+-2
          CFI (cfiCond232) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond233 Using cfiCommon0
          CFI (cfiCond233) Function ZDP_BindUnbindReq
          CFI (cfiCond233) Conditional ??CrossCallReturnLabel_98
          CFI (cfiCond233) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond233) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond233) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond233) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond233) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond233) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond233) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond233) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond233) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond233) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond233) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond233) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond233) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond233) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond233) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond233) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond233) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker234 Using cfiCommon1
          CFI (cfiPicker234) NoFunction
          CFI (cfiPicker234) Picker
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond231
          CFI EndBlock cfiCond232
          CFI EndBlock cfiCond233
          CFI EndBlock cfiPicker234

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine15:
          CFI Block cfiCond235 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_12
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond236 Using cfiCommon0
          CFI (cfiCond236) Function ZDP_EndDeviceBindReq
          CFI (cfiCond236) Conditional ??CrossCallReturnLabel_13
          CFI (cfiCond236) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond236) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond236) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond236) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond236) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond236) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond236) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond236) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond236) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond236) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond236) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond236) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond236) CFA_SP SP+-2
          CFI (cfiCond236) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond237 Using cfiCommon0
          CFI (cfiCond237) Function ZDP_BindUnbindReq
          CFI (cfiCond237) Conditional ??CrossCallReturnLabel_14
          CFI (cfiCond237) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond237) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond237) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond237) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond237) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond237) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond237) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond237) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond237) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond237) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond237) CFA_SP SP+-2
          CFI (cfiCond237) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker238 Using cfiCommon1
          CFI (cfiPicker238) NoFunction
          CFI (cfiPicker238) Picker
        LCALL     ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_124:
        LCALL     ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_138:
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond235
          CFI EndBlock cfiCond236
          CFI EndBlock cfiCond237
          CFI EndBlock cfiPicker238

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine12:
          CFI Block cfiCond239 Using cfiCommon0
          CFI Function ZDP_EndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_6
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond240 Using cfiCommon0
          CFI (cfiCond240) Function ZDP_EndDeviceBindReq
          CFI (cfiCond240) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond240) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond240) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond240) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond240) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond240) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond240) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond240) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond240) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond240) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond240) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond240) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond240) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond240) CFA_SP SP+-2
          CFI (cfiCond240) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker241 Using cfiCommon1
          CFI (cfiPicker241) NoFunction
          CFI (cfiPicker241) Picker
        MOV       A,R2
        ADD       A,0xE0 /* A   */
        MOV       R4,A
        CLR       A
        RLC       A
        MOV       R5,A
        MOV       A,R0
        ADD       A,R4
        MOV       R4,A
        MOV       A,R1
        ADDC      A,R5
        MOV       R5,A
        MOV       DPL,R4
        MOV       DPH,A
        LCALL     ??Subroutine129_0 & 0xFFFF
??CrossCallReturnLabel_217:
        MOVX      @DPTR,A
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        LCALL     ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_118:
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x2
        MOV       R6,A
        RET
          CFI EndBlock cfiCond239
          CFI EndBlock cfiCond240
          CFI EndBlock cfiPicker241
// 1126 
// 1127 /*********************************************************************
// 1128  * @fn          ZDP_BindUnbindReq
// 1129  *
// 1130  * @brief       This builds and send a Bind_req or Unbind_req message
// 1131  *              Depending on the ClusterID. This function
// 1132  *              sends a unicast message to the local coordinator.
// 1133  *
// 1134  * @param       BindOrUnbind - either Bind_req or Unbind_req
// 1135  * @param       dstAddr - destination address of the message
// 1136  * @param       SourceAddr - source 64 bit address of the binding
// 1137  * @param       SrcEPIntf - Source endpoint/interface
// 1138  * @param       ClusterID - Binding cluster ID
// 1139  * @param       DestinationAddr - destination 64 bit addr of binding
// 1140  * @param       DstEPIntf - destination endpoint/interface
// 1141  * @param       SecurityEnable - Security Options
// 1142  *
// 1143  * @return      afStatus_t
// 1144  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1145 afStatus_t ZDP_BindUnbindReq( uint16 BindOrUnbind, zAddrType_t *dstAddr,
ZDP_BindUnbindReq:
          CFI Block cfiBlock242 Using cfiCommon0
          CFI Function ZDP_BindUnbindReq
        CODE
// 1146                               uint8 *SourceAddr, byte SrcEndPoint,
// 1147                               cId_t ClusterID,
// 1148                               zAddrType_t *destinationAddr, byte DstEndPoint,
// 1149                               byte SecurityEnable )
// 1150 {
        FUNCALL ZDP_BindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_BindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 1, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_BindUnbindReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       ?V2,R4
        MOV       ?V3,R5
        MOV       A,R1
        MOV       R7,A
// 1151   uint8 *pBuf = ZDP_TmpBuf;
        LCALL     ?Subroutine79 & 0xFFFF
// 1152   byte len;
// 1153 
// 1154   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1155 
// 1156   // SourceAddr + SrcEPIntf + ClusterID +  addrMode.
// 1157   len = Z_EXTADDR_LEN + 1 + sizeof( cId_t ) + sizeof( uint8 );
??CrossCallReturnLabel_199:
        MOV       R6,#0xc
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine40 & 0xFFFF
// 1158   if ( destinationAddr->addrMode == Addr64Bit )
??CrossCallReturnLabel_54:
        MOV       DPL,?V0
        MOV       DPH,A
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,#0x3
        JNZ       ??ZDP_BindUnbindReq_0
// 1159     len += Z_EXTADDR_LEN + 1;     // +1 for DstEPIntf
        MOV       R6,#0x15
        SJMP      ??ZDP_BindUnbindReq_1
// 1160   else if ( destinationAddr->addrMode == AddrGroup )
??ZDP_BindUnbindReq_0:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,#0x1
        JNZ       ??ZDP_BindUnbindReq_1
// 1161     len += sizeof ( uint16 );
        MOV       R6,#0xe
// 1162 
// 1163   pBuf = osal_cpyExtAddr( pBuf, SourceAddr );
??ZDP_BindUnbindReq_1:
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_71:
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 1164   *pBuf++ = SrcEndPoint;
        MOV       A,R7
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      @DPTR,A
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine15 & 0xFFFF
// 1165 
// 1166   *pBuf++ = LO_UINT16( ClusterID );
// 1167 
// 1168   *pBuf++ = HI_UINT16( ClusterID );
// 1169   *pBuf++ = destinationAddr->addrMode;
??CrossCallReturnLabel_14:
        MOV       A,?V0
        ADD       A,#0x8
        MOV       R0,A
        CLR       A
        ADDC      A,?V1
        LCALL     ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_58:
        JNC       ??ZDP_BindUnbindReq_2
        INC       R3
// 1170   if ( destinationAddr->addrMode == Addr64Bit )
??ZDP_BindUnbindReq_2:
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        XRL       A,#0x3
        JNZ       ??ZDP_BindUnbindReq_3
// 1171   {
// 1172     pBuf = osal_cpyExtAddr( pBuf, destinationAddr->addr.extAddr );
// 1173     *pBuf = DstEndPoint;
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,?V0
        MOV       R5,?V1
        LCALL     ?Subroutine67 & 0xFFFF
// 1174   }
??CrossCallReturnLabel_98:
        POP       A
          CFI CFA_SP SP+0
        SJMP      ??ZDP_BindUnbindReq_4
// 1175   else if ( destinationAddr->addrMode == AddrGroup )
??ZDP_BindUnbindReq_3:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,#0x1
        JNZ       ??ZDP_BindUnbindReq_5
// 1176   {
// 1177     *pBuf++ = LO_UINT16( destinationAddr->addr.shortAddr );
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ??Subroutine124_0 & 0xFFFF
// 1178     *pBuf++ = HI_UINT16( destinationAddr->addr.shortAddr );
// 1179   }
??CrossCallReturnLabel_204:
        LCALL     ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_144:
        LCALL     ??Subroutine124_0 & 0xFFFF
??CrossCallReturnLabel_205:
        INC       DPTR
??ZDP_BindUnbindReq_4:
        MOVX      @DPTR,A
// 1180 
// 1181   FillAndSendTxOptions( &ZDP_TransID, dstAddr, BindOrUnbind, len, AF_MSG_ACK_REQUEST );
??ZDP_BindUnbindReq_5:
        MOV       DPTR,#ZDP_TxOptions
        MOV       A,#0x10
        MOVX      @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       A,R6
        MOV       R1,A
        MOV       R4,?V2
        MOV       R5,?V3
        LCALL     ??Subroutine136_0 & 0xFFFF
??CrossCallReturnLabel_259:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,R1
        MOV       R1,A
        MOV       DPTR,#ZDP_TxOptions
        CLR       A
        MOVX      @DPTR,A
        LJMP      ?Subroutine5 & 0xFFFF
// 1182 }
          CFI EndBlock cfiBlock242

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine79:
          CFI Block cfiCond243 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_198
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond244 Using cfiCommon0
          CFI (cfiCond244) Function ZDP_BindUnbindReq
          CFI (cfiCond244) Conditional ??CrossCallReturnLabel_199
          CFI (cfiCond244) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond244) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond244) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond244) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond244) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond244) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond244) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond244) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond244) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond244) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond244) CFA_SP SP+-2
          CFI (cfiCond244) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond245 Using cfiCommon0
          CFI (cfiCond245) Function ZDP_MgmtDirectJoinReq
          CFI (cfiCond245) Conditional ??CrossCallReturnLabel_200, ??CrossCallReturnLabel_213
          CFI (cfiCond245) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond245) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond245) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond245) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond245) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond245) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond245) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond245) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond245) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond245) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond245) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond245) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond245) CFA_SP SP+-4
          CFI (cfiCond245) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond246 Using cfiCommon0
          CFI (cfiCond246) Function ZDP_MgmtLeaveReq
          CFI (cfiCond246) Conditional ??CrossCallReturnLabel_200, ??CrossCallReturnLabel_214
          CFI (cfiCond246) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond246) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond246) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond246) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond246) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond246) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond246) CFA_SP SP+-4
          CFI (cfiCond246) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond247 Using cfiCommon0
          CFI (cfiCond247) Function ZDP_MgmtNwkDiscReq
          CFI (cfiCond247) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_76
          CFI (cfiCond247) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond247) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond247) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond247) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond247) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond247) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond247) CFA_SP SP+-4
          CFI (cfiCond247) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond248 Using cfiCommon0
          CFI (cfiCond248) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond248) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_77
          CFI (cfiCond248) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond248) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond248) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond248) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond248) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond248) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond248) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond248) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond248) CFA_SP SP+-4
          CFI (cfiCond248) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker249 Using cfiCommon1
          CFI (cfiPicker249) NoFunction
          CFI (cfiPicker249) Picker
        MOV       DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond243
          CFI EndBlock cfiCond244
          CFI EndBlock cfiCond245
          CFI EndBlock cfiCond246
          CFI EndBlock cfiCond247
          CFI EndBlock cfiCond248
          CFI EndBlock cfiPicker249
        REQUIRE ??Subroutine123_0
        ; // Fall through to label ??Subroutine123_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine123_0:
          CFI Block cfiCond250 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_196
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond251 Using cfiCommon0
          CFI (cfiCond251) Function zdpProcessAddrReq
          CFI (cfiCond251) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_74
          CFI (cfiCond251) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond251) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond251) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond251) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond251) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond251) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond251) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond251) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond251) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond251) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond251) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond251) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond251) CFA_SP SP+-4
          CFI (cfiCond251) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond252 Using cfiCommon0
          CFI (cfiCond252) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond252) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_75
          CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond252) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond252) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond252) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond252) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond252) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond252) CFA_SP SP+-4
          CFI (cfiCond252) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond253 Using cfiCommon0
          CFI (cfiCond253) Function ZDO_RemoveRegisteredCB
          CFI (cfiCond253) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_73
          CFI (cfiCond253) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond253) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond253) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond253) CFA_SP SP+-4
          CFI (cfiCond253) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond254 Using cfiCommon0
          CFI (cfiCond254) Function zdpProcessAddrReq
          CFI (cfiCond254) Conditional ??CrossCallReturnLabel_198
          CFI (cfiCond254) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond254) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond254) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond254) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond254) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond254) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond254) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond254) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond254) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond254) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond254) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond254) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond254) CFA_SP SP+-2
          CFI (cfiCond254) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond255 Using cfiCommon0
          CFI (cfiCond255) Function ZDP_BindUnbindReq
          CFI (cfiCond255) Conditional ??CrossCallReturnLabel_199
          CFI (cfiCond255) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond255) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond255) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond255) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond255) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond255) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond255) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond255) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond255) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond255) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond255) CFA_SP SP+-2
          CFI (cfiCond255) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond256 Using cfiCommon0
          CFI (cfiCond256) Function ZDP_MgmtDirectJoinReq
          CFI (cfiCond256) Conditional ??CrossCallReturnLabel_200, ??CrossCallReturnLabel_213
          CFI (cfiCond256) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond256) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond256) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond256) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond256) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond256) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond256) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond256) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond256) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond256) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond256) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond256) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond256) CFA_SP SP+-4
          CFI (cfiCond256) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond257 Using cfiCommon0
          CFI (cfiCond257) Function ZDP_MgmtLeaveReq
          CFI (cfiCond257) Conditional ??CrossCallReturnLabel_200, ??CrossCallReturnLabel_214
          CFI (cfiCond257) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond257) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond257) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond257) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond257) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond257) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond257) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond257) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond257) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond257) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond257) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond257) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond257) CFA_SP SP+-4
          CFI (cfiCond257) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond258 Using cfiCommon0
          CFI (cfiCond258) Function ZDP_MgmtNwkDiscReq
          CFI (cfiCond258) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_76
          CFI (cfiCond258) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond258) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond258) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond258) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond258) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond258) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond258) CFA_SP SP+-4
          CFI (cfiCond258) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond259 Using cfiCommon0
          CFI (cfiCond259) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond259) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_77
          CFI (cfiCond259) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond259) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond259) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond259) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond259) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond259) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond259) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond259) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond259) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond259) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond259) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond259) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond259) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond259) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond259) CFA_SP SP+-4
          CFI (cfiCond259) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker260 Using cfiCommon1
          CFI (cfiPicker260) NoFunction
          CFI (cfiPicker260) Picker
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        RET
          CFI EndBlock cfiCond250
          CFI EndBlock cfiCond251
          CFI EndBlock cfiCond252
          CFI EndBlock cfiCond253
          CFI EndBlock cfiCond254
          CFI EndBlock cfiCond255
          CFI EndBlock cfiCond256
          CFI EndBlock cfiCond257
          CFI EndBlock cfiCond258
          CFI EndBlock cfiCond259
          CFI EndBlock cfiPicker260

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine61:
          CFI Block cfiCond261 Using cfiCommon0
          CFI Function ZDP_MgmtBindRsp
          CFI Conditional ??CrossCallReturnLabel_207
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond262 Using cfiCommon0
          CFI (cfiCond262) Function ZDP_MgmtBindRsp
          CFI (cfiCond262) Conditional ??CrossCallReturnLabel_208
          CFI (cfiCond262) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond262) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond262) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond262) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond262) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond262) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond262) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond262) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond262) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond262) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond262) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond262) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond262) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond262) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond262) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond262) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond262) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond262) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond262) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond262) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond262) CFA_SP SP+-2
          CFI (cfiCond262) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker263 Using cfiCommon1
          CFI (cfiPicker263) NoFunction
          CFI (cfiPicker263) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond261
          CFI EndBlock cfiCond262
          CFI EndBlock cfiPicker263
        REQUIRE ??Subroutine124_0
        ; // Fall through to label ??Subroutine124_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine124_0:
          CFI Block cfiCond264 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_202
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond265 Using cfiCommon0
          CFI (cfiCond265) Function zdpProcessAddrReq
          CFI (cfiCond265) Conditional ??CrossCallReturnLabel_203
          CFI (cfiCond265) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond265) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond265) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond265) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond265) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond265) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond265) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond265) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond265) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond265) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond265) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond265) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond265) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond265) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond265) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond265) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond265) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond265) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond265) CFA_SP SP+-2
          CFI (cfiCond265) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond266 Using cfiCommon0
          CFI (cfiCond266) Function ZDP_BindUnbindReq
          CFI (cfiCond266) Conditional ??CrossCallReturnLabel_204
          CFI (cfiCond266) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond266) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond266) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond266) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond266) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond266) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond266) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond266) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond266) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond266) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond266) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond266) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond266) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond266) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond266) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond266) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond266) CFA_SP SP+-2
          CFI (cfiCond266) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond267 Using cfiCommon0
          CFI (cfiCond267) Function ZDP_BindUnbindReq
          CFI (cfiCond267) Conditional ??CrossCallReturnLabel_205
          CFI (cfiCond267) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond267) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond267) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond267) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond267) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond267) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond267) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond267) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond267) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond267) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond267) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond267) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond267) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond267) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond267) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond267) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond267) CFA_SP SP+-2
          CFI (cfiCond267) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond268 Using cfiCommon0
          CFI (cfiCond268) Function ZDP_MgmtBindRsp
          CFI (cfiCond268) Conditional ??CrossCallReturnLabel_206
          CFI (cfiCond268) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond268) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond268) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond268) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond268) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond268) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond268) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond268) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond268) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond268) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond268) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond268) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond268) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond268) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond268) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond268) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond268) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond268) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond268) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond268) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond268) CFA_SP SP+-2
          CFI (cfiCond268) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond269 Using cfiCommon0
          CFI (cfiCond269) Function ZDP_MgmtBindRsp
          CFI (cfiCond269) Conditional ??CrossCallReturnLabel_207
          CFI (cfiCond269) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond269) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond269) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond269) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond269) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond269) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond269) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond269) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond269) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond269) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond269) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond269) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond269) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond269) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond269) CFA_SP SP+-2
          CFI (cfiCond269) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond270 Using cfiCommon0
          CFI (cfiCond270) Function ZDP_MgmtBindRsp
          CFI (cfiCond270) Conditional ??CrossCallReturnLabel_208
          CFI (cfiCond270) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond270) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond270) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond270) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond270) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond270) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond270) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond270) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond270) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond270) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond270) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond270) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond270) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond270) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond270) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond270) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond270) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond270) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond270) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond270) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond270) CFA_SP SP+-2
          CFI (cfiCond270) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker271 Using cfiCommon1
          CFI (cfiPicker271) NoFunction
          CFI (cfiPicker271) Picker
        LCALL     ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_212:
        RET
          CFI EndBlock cfiCond264
          CFI EndBlock cfiCond265
          CFI EndBlock cfiCond266
          CFI EndBlock cfiCond267
          CFI EndBlock cfiCond268
          CFI EndBlock cfiCond269
          CFI EndBlock cfiCond270
          CFI EndBlock cfiPicker271

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine89:
          CFI Block cfiCond272 Using cfiCommon0
          CFI Function ZDP_MgmtBindRsp
          CFI Conditional ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_207
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond273 Using cfiCommon0
          CFI (cfiCond273) Function ZDP_MgmtBindRsp
          CFI (cfiCond273) Conditional ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_208
          CFI (cfiCond273) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond273) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond273) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond273) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond273) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond273) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond273) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond273) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond273) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond273) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond273) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond273) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond273) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond273) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond273) CFA_SP SP+-4
          CFI (cfiCond273) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond274 Using cfiCommon0
          CFI (cfiCond274) Function zdpProcessAddrReq
          CFI (cfiCond274) Conditional ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_202
          CFI (cfiCond274) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond274) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond274) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond274) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond274) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond274) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond274) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond274) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond274) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond274) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond274) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond274) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond274) CFA_SP SP+-4
          CFI (cfiCond274) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond275 Using cfiCommon0
          CFI (cfiCond275) Function zdpProcessAddrReq
          CFI (cfiCond275) Conditional ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_203
          CFI (cfiCond275) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond275) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond275) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond275) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond275) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond275) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond275) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond275) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond275) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond275) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond275) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond275) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond275) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond275) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond275) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond275) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond275) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond275) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond275) CFA_SP SP+-4
          CFI (cfiCond275) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond276 Using cfiCommon0
          CFI (cfiCond276) Function ZDP_BindUnbindReq
          CFI (cfiCond276) Conditional ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_204
          CFI (cfiCond276) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond276) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond276) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond276) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond276) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond276) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond276) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond276) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond276) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond276) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond276) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond276) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond276) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond276) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond276) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond276) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond276) CFA_SP SP+-4
          CFI (cfiCond276) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond277 Using cfiCommon0
          CFI (cfiCond277) Function ZDP_BindUnbindReq
          CFI (cfiCond277) Conditional ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_205
          CFI (cfiCond277) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond277) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond277) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond277) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond277) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond277) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond277) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond277) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond277) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond277) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond277) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond277) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond277) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond277) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond277) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond277) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond277) CFA_SP SP+-4
          CFI (cfiCond277) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond278 Using cfiCommon0
          CFI (cfiCond278) Function ZDP_MgmtBindRsp
          CFI (cfiCond278) Conditional ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_206
          CFI (cfiCond278) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond278) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond278) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond278) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond278) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond278) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond278) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond278) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond278) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond278) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond278) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond278) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond278) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond278) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond278) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond278) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond278) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond278) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond278) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond278) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond278) CFA_SP SP+-4
          CFI (cfiCond278) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond279 Using cfiCommon0
          CFI (cfiCond279) Function ZDP_MgmtLqiRsp
          CFI (cfiCond279) Conditional ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_84
          CFI (cfiCond279) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond279) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond279) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond279) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond279) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond279) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond279) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond279) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond279) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond279) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond279) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond279) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond279) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond279) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond279) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond279) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond279) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond279) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond279) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond279) CFA_SP SP+-4
          CFI (cfiCond279) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond280 Using cfiCommon0
          CFI (cfiCond280) Function ZDP_MgmtBindRsp
          CFI (cfiCond280) Conditional ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_85
          CFI (cfiCond280) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond280) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond280) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond280) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond280) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond280) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond280) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond280) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond280) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond280) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond280) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond280) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond280) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond280) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond280) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond280) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond280) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond280) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond280) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond280) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond280) CFA_SP SP+-4
          CFI (cfiCond280) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond281 Using cfiCommon0
          CFI (cfiCond281) Function ZDP_MgmtBindRsp
          CFI (cfiCond281) Conditional ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_86
          CFI (cfiCond281) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond281) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond281) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond281) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond281) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond281) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond281) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond281) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond281) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond281) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond281) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond281) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond281) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond281) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond281) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond281) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond281) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond281) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond281) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond281) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond281) CFA_SP SP+-4
          CFI (cfiCond281) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond282 Using cfiCommon0
          CFI (cfiCond282) Function ZDP_MgmtLqiRsp
          CFI (cfiCond282) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_10
          CFI (cfiCond282) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond282) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond282) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond282) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond282) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond282) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond282) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond282) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond282) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond282) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond282) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond282) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond282) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond282) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond282) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond282) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond282) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond282) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond282) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond282) CFA_SP SP+-4
          CFI (cfiCond282) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond283 Using cfiCommon0
          CFI (cfiCond283) Function ZDP_MgmtBindRsp
          CFI (cfiCond283) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_11
          CFI (cfiCond283) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond283) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond283) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond283) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond283) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond283) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond283) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond283) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond283) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond283) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond283) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond283) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond283) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond283) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond283) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond283) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond283) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond283) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond283) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond283) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond283) CFA_SP SP+-4
          CFI (cfiCond283) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond284 Using cfiCommon0
          CFI (cfiCond284) Function ZDP_MgmtLqiRsp
          CFI (cfiCond284) Conditional ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_10
          CFI (cfiCond284) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond284) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond284) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond284) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond284) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond284) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond284) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond284) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond284) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond284) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond284) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond284) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond284) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond284) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond284) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond284) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond284) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond284) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond284) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond284) CFA_SP SP+-4
          CFI (cfiCond284) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond285 Using cfiCommon0
          CFI (cfiCond285) Function ZDP_MgmtBindRsp
          CFI (cfiCond285) Conditional ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_11
          CFI (cfiCond285) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond285) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond285) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond285) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond285) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond285) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond285) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond285) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond285) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond285) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond285) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond285) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond285) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond285) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond285) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond285) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond285) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond285) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond285) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond285) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond285) CFA_SP SP+-4
          CFI (cfiCond285) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker286 Using cfiCommon1
          CFI (cfiPicker286) NoFunction
          CFI (cfiPicker286) Picker
        MOVX      A,@DPTR
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond272
          CFI EndBlock cfiCond273
          CFI EndBlock cfiCond274
          CFI EndBlock cfiCond275
          CFI EndBlock cfiCond276
          CFI EndBlock cfiCond277
          CFI EndBlock cfiCond278
          CFI EndBlock cfiCond279
          CFI EndBlock cfiCond280
          CFI EndBlock cfiCond281
          CFI EndBlock cfiCond282
          CFI EndBlock cfiCond283
          CFI EndBlock cfiCond284
          CFI EndBlock cfiCond285
          CFI EndBlock cfiPicker286

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine52:
          CFI Block cfiCond287 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_68
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond288 Using cfiCommon0
          CFI (cfiCond288) Function ZDP_MatchDescReq
          CFI (cfiCond288) Conditional ??CrossCallReturnLabel_69
          CFI (cfiCond288) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond288) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond288) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond288) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond288) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond288) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond288) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond288) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond288) CFA_SP SP+-2
          CFI (cfiCond288) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond289 Using cfiCommon0
          CFI (cfiCond289) Function ZDP_MatchDescReq
          CFI (cfiCond289) Conditional ??CrossCallReturnLabel_70
          CFI (cfiCond289) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond289) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond289) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond289) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond289) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond289) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond289) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond289) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond289) CFA_SP SP+-2
          CFI (cfiCond289) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond290 Using cfiCommon0
          CFI (cfiCond290) Function ZDP_BindUnbindReq
          CFI (cfiCond290) Conditional ??CrossCallReturnLabel_71
          CFI (cfiCond290) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond290) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond290) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond290) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond290) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond290) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond290) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond290) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond290) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond290) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond290) CFA_SP SP+-2
          CFI (cfiCond290) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond291 Using cfiCommon0
          CFI (cfiCond291) Function ZDO_RemoveRegisteredCB
          CFI (cfiCond291) Conditional ??CrossCallReturnLabel_72
          CFI (cfiCond291) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond291) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond291) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond291) CFA_SP SP+-2
          CFI (cfiCond291) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker292 Using cfiCommon1
          CFI (cfiPicker292) NoFunction
          CFI (cfiPicker292) Picker
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R5,A
        RET
          CFI EndBlock cfiCond287
          CFI EndBlock cfiCond288
          CFI EndBlock cfiCond289
          CFI EndBlock cfiCond290
          CFI EndBlock cfiCond291
          CFI EndBlock cfiPicker292

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine40:
          CFI Block cfiCond293 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
          CFI Conditional ??CrossCallReturnLabel_52
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond294 Using cfiCommon0
          CFI (cfiCond294) Function ZDP_PowerDescMsg
          CFI (cfiCond294) Conditional ??CrossCallReturnLabel_53
          CFI (cfiCond294) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond294) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond294) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond294) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond294) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond294) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond294) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond294) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond294) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond294) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond294) CFA_SP SP+-2
          CFI (cfiCond294) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond295 Using cfiCommon0
          CFI (cfiCond295) Function ZDP_BindUnbindReq
          CFI (cfiCond295) Conditional ??CrossCallReturnLabel_54
          CFI (cfiCond295) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond295) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond295) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond295) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond295) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond295) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond295) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond295) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond295) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond295) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond295) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond295) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond295) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond295) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond295) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond295) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond295) CFA_SP SP+-2
          CFI (cfiCond295) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond296 Using cfiCommon0
          CFI (cfiCond296) Function ZDO_SendMsgCBs
          CFI (cfiCond296) Conditional ??CrossCallReturnLabel_55
          CFI (cfiCond296) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond296) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond296) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond296) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond296) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond296) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond296) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond296) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond296) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond296) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond296) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond296) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond296) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond296) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond296) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond296) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond296) CFA_SP SP+-2
          CFI (cfiCond296) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker297 Using cfiCommon1
          CFI (cfiPicker297) NoFunction
          CFI (cfiPicker297) Picker
        MOVX      A,@DPTR
        MOV       ?V0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V1,A
        RET
          CFI EndBlock cfiCond293
          CFI EndBlock cfiCond294
          CFI EndBlock cfiCond295
          CFI EndBlock cfiCond296
          CFI EndBlock cfiPicker297
// 1183 
// 1184 /*********************************************************************
// 1185  * Network Management
// 1186  */
// 1187 
// 1188 /*********************************************************************
// 1189  * @fn          ZDP_MgmtNwkDiscReq
// 1190  *
// 1191  * @brief       This builds and send a Mgmt_NWK_Disc_req message. This
// 1192  *              function sends a unicast message.
// 1193  *
// 1194  * @param       dstAddr - destination address of the message
// 1195  * @param       ScanChannels - 32 bit address bit map
// 1196  * @param       StartIndex - Starting index within the reporting network
// 1197  *                           list
// 1198  * @param       SecurityEnable - Security Options
// 1199  *
// 1200  * @return      afStatus_t
// 1201  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1202 afStatus_t ZDP_MgmtNwkDiscReq( zAddrType_t *dstAddr,
ZDP_MgmtNwkDiscReq:
          CFI Block cfiBlock298 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscReq
        CODE
// 1203                                uint32 ScanChannels,
// 1204                                byte ScanDuration,
// 1205                                byte StartIndex,
// 1206                                byte SecurityEnable )
// 1207 {
        FUNCALL ZDP_MgmtNwkDiscReq, osal_buffer_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkDiscReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       ?V0,R1
        MOV       ?V1,R4
// 1208   uint8 *pBuf = ZDP_TmpBuf;
// 1209   byte len = sizeof( uint32 )+1+1;  // ScanChannels + ScanDuration + StartIndex.
// 1210 
// 1211   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1212 
// 1213   pBuf = osal_buffer_uint32( pBuf, ScanChannels );
        ; Setup parameters for call to function osal_buffer_uint32
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 16)
        LCALL     ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_76:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       DPL,R2
        MOV       DPH,R3
// 1214 
// 1215   *pBuf++ = ScanDuration;
        MOV       A,?V0
        MOVX      @DPTR,A
// 1216   *pBuf = StartIndex;
        INC       DPTR
        MOV       A,?V1
        MOVX      @DPTR,A
// 1217 
// 1218   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_NWK_Disc_req, len );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V2,#0x30
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       R1,#0x6
        SJMP      ??Subroutine125_0
// 1219 }
          CFI EndBlock cfiBlock298
// 1220 
// 1221 /*********************************************************************
// 1222  * @fn          ZDP_MgmtDirectJoinReq
// 1223  *
// 1224  * @brief       This builds and send a Mgmt_Direct_Join_req message. This
// 1225  *              function sends a unicast message.
// 1226  *
// 1227  * @param       dstAddr - destination address of the message
// 1228  * @param       deviceAddr - 64 bit IEEE Address
// 1229  * @param       SecurityEnable - Security Options
// 1230  *
// 1231  * @return      afStatus_t
// 1232  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiBlock299 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       R1,#0x9
          CFI EndBlock cfiBlock299
        REQUIRE ??Subroutine125_0
        ; // Fall through to label ??Subroutine125_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine125_0:
          CFI Block cfiBlock300 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        LCALL     ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_253:
          CFI EndBlock cfiBlock300
        REQUIRE ??Subroutine126_0
        ; // Fall through to label ??Subroutine126_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine126_0:
          CFI Block cfiBlock301 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock301
        REQUIRE ??Subroutine127_0
        ; // Fall through to label ??Subroutine127_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine127_0:
          CFI Block cfiBlock302 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x4
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock302

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1233 afStatus_t ZDP_MgmtDirectJoinReq( zAddrType_t *dstAddr,
ZDP_MgmtDirectJoinReq:
          CFI Block cfiBlock303 Using cfiCommon0
          CFI Function ZDP_MgmtDirectJoinReq
        CODE
// 1234                                uint8 *deviceAddr,
// 1235                                byte capInfo,
// 1236                                byte SecurityEnable )
// 1237 {
        FUNCALL ZDP_MgmtDirectJoinReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtDirectJoinReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        LCALL     ?Subroutine37 & 0xFFFF
// 1238   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1239 
// 1240   osal_cpyExtAddr( ZDP_TmpBuf, deviceAddr );
// 1241   ZDP_TmpBuf[Z_EXTADDR_LEN] = capInfo;
??CrossCallReturnLabel_213:
        MOV       A,?V0
        MOVX      @DPTR,A
// 1242 
// 1243   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_Direct_Join_req, (Z_EXTADDR_LEN + 1) );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V2,#0x35
        SJMP      ?Subroutine1
// 1244 }
          CFI EndBlock cfiBlock303

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine37:
          CFI Block cfiCond304 Using cfiCommon0
          CFI Function ZDP_MgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_213
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond305 Using cfiCommon0
          CFI (cfiCond305) Function ZDP_MgmtLeaveReq
          CFI (cfiCond305) Conditional ??CrossCallReturnLabel_214
          CFI (cfiCond305) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond305) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond305) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond305) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond305) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond305) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond305) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond305) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond305) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond305) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond305) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond305) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond305) CFA_SP SP+-2
          CFI (cfiCond305) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker306 Using cfiCommon1
          CFI (cfiPicker306) NoFunction
          CFI (cfiPicker306) Picker
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       ?V0,R1
        ; Setup parameters for call to function sAddrExtCpy
        ; Setup parameters for call to function sAddrExtCpy
        LCALL     ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_200:
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
          CFI EndBlock cfiCond304
          CFI EndBlock cfiCond305
          CFI EndBlock cfiPicker306
        REQUIRE ??Subroutine128_0
        ; // Fall through to label ??Subroutine128_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine128_0:
          CFI Block cfiCond307 Using cfiCommon0
          CFI Function ZDP_MgmtLeaveReq
          CFI Conditional ??CrossCallReturnLabel_215
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond308 Using cfiCommon0
          CFI (cfiCond308) Function ZDP_MgmtLeaveReq
          CFI (cfiCond308) Conditional ??CrossCallReturnLabel_216
          CFI (cfiCond308) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond308) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond308) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond308) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond308) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond308) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond308) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond308) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond308) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond308) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond308) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond308) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond308) CFA_SP SP+-2
          CFI (cfiCond308) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond309 Using cfiCommon0
          CFI (cfiCond309) Function ZDP_MgmtDirectJoinReq
          CFI (cfiCond309) Conditional ??CrossCallReturnLabel_213
          CFI (cfiCond309) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond309) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond309) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond309) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond309) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond309) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond309) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond309) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond309) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond309) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond309) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond309) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond309) CFA_SP SP+-2
          CFI (cfiCond309) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond310 Using cfiCommon0
          CFI (cfiCond310) Function ZDP_MgmtLeaveReq
          CFI (cfiCond310) Conditional ??CrossCallReturnLabel_214
          CFI (cfiCond310) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond310) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond310) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond310) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond310) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond310) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond310) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond310) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond310) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond310) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond310) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond310) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond310) CFA_SP SP+-2
          CFI (cfiCond310) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker311 Using cfiCommon1
          CFI (cfiPicker311) NoFunction
          CFI (cfiPicker311) Picker
        LCALL     ?Subroutine106 & 0xFFFF
??CrossCallReturnLabel_327:
        XCH       A,R0
        ADD       A,#0x8
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond307
          CFI EndBlock cfiCond308
          CFI EndBlock cfiCond309
          CFI EndBlock cfiCond310
          CFI EndBlock cfiPicker311
// 1245 
// 1246 /*********************************************************************
// 1247  * @fn          ZDP_MgmtPermitJoinReq
// 1248  *
// 1249  * @brief       This builds and send a Mgmt_Permit_Join_req message.
// 1250  *
// 1251  * @param       dstAddr - destination address of the message
// 1252  * @param       duration - Permit duration
// 1253  * @param       TcSignificance - Trust Center Significance
// 1254  *
// 1255  * @return      afStatus_t
// 1256  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1257 afStatus_t ZDP_MgmtPermitJoinReq( zAddrType_t *dstAddr, byte duration,
ZDP_MgmtPermitJoinReq:
          CFI Block cfiBlock312 Using cfiCommon0
          CFI Function ZDP_MgmtPermitJoinReq
        CODE
// 1258                                   byte TcSignificance, byte SecurityEnable )
// 1259 {
        FUNCALL ZDP_MgmtPermitJoinReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 1260   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1261 
// 1262   // Build buffer
// 1263   ZDP_TmpBuf[ZDP_MGMT_PERMIT_JOIN_REQ_DURATION] = duration;
        LCALL     ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_190:
        MOV       A,R1
        LCALL     ?Subroutine20 & 0xFFFF
// 1264   ZDP_TmpBuf[ZDP_MGMT_PERMIT_JOIN_REQ_TC_SIG]   = TcSignificance;
??CrossCallReturnLabel_22:
        MOV       A,R4
        MOVX      @DPTR,A
// 1265 
// 1266   // Send the message
// 1267   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_Permit_Join_req,
// 1268                       ZDP_MGMT_PERMIT_JOIN_REQ_SIZE );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x36
        LJMP      ?Subroutine2 & 0xFFFF
// 1269 }
          CFI EndBlock cfiBlock312

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine20:
          CFI Block cfiCond313 Using cfiCommon0
          CFI Function ZDP_DeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_21
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond314 Using cfiCommon0
          CFI (cfiCond314) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond314) Conditional ??CrossCallReturnLabel_22
          CFI (cfiCond314) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond314) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond314) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond314) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond314) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond314) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond314) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond314) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond314) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond314) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond314) CFA_SP SP+-2
          CFI (cfiCond314) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker315 Using cfiCommon1
          CFI (cfiPicker315) NoFunction
          CFI (cfiPicker315) Picker
        LCALL     ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_117:
        RET
          CFI EndBlock cfiCond313
          CFI EndBlock cfiCond314
          CFI EndBlock cfiPicker315

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine78:
          CFI Block cfiCond316 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
          CFI Conditional ??CrossCallReturnLabel_115, ??CrossCallReturnLabel_15
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond317 Using cfiCommon0
          CFI (cfiCond317) Function ZDP_SimpleDescReq
          CFI (cfiCond317) Conditional ??CrossCallReturnLabel_115, ??CrossCallReturnLabel_16
          CFI (cfiCond317) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond317) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond317) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond317) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond317) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond317) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond317) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond317) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond317) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond317) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond317) CFA_SP SP+-4
          CFI (cfiCond317) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond318 Using cfiCommon0
          CFI (cfiCond318) Function ZDP_SimpleDescReq
          CFI (cfiCond318) Conditional ??CrossCallReturnLabel_116, ??CrossCallReturnLabel_8
          CFI (cfiCond318) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond318) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond318) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond318) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond318) CFA_SP SP+-4
          CFI (cfiCond318) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond319 Using cfiCommon0
          CFI (cfiCond319) Function ZDP_GenericRsp
          CFI (cfiCond319) Conditional ??CrossCallReturnLabel_116, ??CrossCallReturnLabel_9
          CFI (cfiCond319) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond319) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond319) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond319) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond319) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond319) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond319) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond319) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond319) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond319) CFA_SP SP+-4
          CFI (cfiCond319) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond320 Using cfiCommon0
          CFI (cfiCond320) Function ZDP_DeviceAnnce
          CFI (cfiCond320) Conditional ??CrossCallReturnLabel_117, ??CrossCallReturnLabel_21
          CFI (cfiCond320) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond320) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond320) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond320) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond320) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond320) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond320) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond320) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond320) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond320) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond320) CFA_SP SP+-4
          CFI (cfiCond320) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond321 Using cfiCommon0
          CFI (cfiCond321) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond321) Conditional ??CrossCallReturnLabel_117, ??CrossCallReturnLabel_22
          CFI (cfiCond321) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond321) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond321) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond321) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond321) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond321) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond321) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond321) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond321) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond321) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond321) CFA_SP SP+-4
          CFI (cfiCond321) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker322 Using cfiCommon1
          CFI (cfiPicker322) NoFunction
          CFI (cfiPicker322) Picker
        MOVX      @DPTR,A
        MOV       DPTR,#ZDP_TmpBuf
        LCALL     ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_194:
        INC       DPTR
        RET
          CFI EndBlock cfiCond316
          CFI EndBlock cfiCond317
          CFI EndBlock cfiCond318
          CFI EndBlock cfiCond319
          CFI EndBlock cfiCond320
          CFI EndBlock cfiCond321
          CFI EndBlock cfiPicker322
// 1270 
// 1271 /*********************************************************************
// 1272  * @fn          ZDP_MgmtLeaveReq
// 1273  *
// 1274  * @brief       This builds and send a Mgmt_Leave_req message.
// 1275  *
// 1276  * @param       dstAddr - destination address of the message
// 1277  *              IEEEAddr - IEEE adddress of device that is removed
// 1278  *              RemoveChildren - set to 1 to remove the children of the
// 1279  *                                device as well. 0 otherwise.
// 1280  *              Rejoin - set to 1 if the removed device should rejoin
// 1281                          afterwards. 0 otherwise.
// 1282  *
// 1283  * @return      afStatus_t
// 1284  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1285 afStatus_t ZDP_MgmtLeaveReq( zAddrType_t *dstAddr, uint8 *IEEEAddr, uint8 RemoveChildren,
ZDP_MgmtLeaveReq:
          CFI Block cfiBlock323 Using cfiCommon0
          CFI Function ZDP_MgmtLeaveReq
        CODE
// 1286                  uint8 Rejoin, uint8 SecurityEnable )
// 1287 
// 1288 {
        FUNCALL ZDP_MgmtLeaveReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLeaveReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        LCALL     ?Subroutine37 & 0xFFFF
// 1289   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1290 
// 1291   osal_cpyExtAddr( ZDP_TmpBuf, IEEEAddr );
// 1292   ZDP_TmpBuf[Z_EXTADDR_LEN] = 0;
??CrossCallReturnLabel_214:
        CLR       A
        MOVX      @DPTR,A
// 1293 
// 1294   if ( RemoveChildren == TRUE )
        INC       A
        XRL       A,?V0
        JNZ       ??ZDP_MgmtLeaveReq_0
// 1295   {
// 1296     ZDP_TmpBuf[Z_EXTADDR_LEN] |= ZDP_MGMT_LEAVE_REQ_RC;
        LCALL     ??Subroutine128_0 & 0xFFFF
// 1297   }
??CrossCallReturnLabel_215:
        MOV       A,#0x40
        MOVX      @DPTR,A
// 1298   if ( Rejoin == TRUE )
??ZDP_MgmtLeaveReq_0:
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        XRL       A,#0x1
        JNZ       ??ZDP_MgmtLeaveReq_1
// 1299   {
// 1300     ZDP_TmpBuf[Z_EXTADDR_LEN] |= ZDP_MGMT_LEAVE_REQ_REJOIN;
        LCALL     ??Subroutine128_0 & 0xFFFF
// 1301   }
??CrossCallReturnLabel_216:
        MOVX      A,@DPTR
        SETB      0xE0 /* A   */.7
        MOVX      @DPTR,A
// 1302 
// 1303   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_Leave_req, (Z_EXTADDR_LEN + 1) );
??ZDP_MgmtLeaveReq_1:
        ; Setup parameters for call to function fillAndSend
        MOV       ?V2,#0x34
        LJMP      ?Subroutine1 & 0xFFFF
// 1304 }
          CFI EndBlock cfiBlock323
// 1305 
// 1306 /*********************************************************************
// 1307  * @fn          ZDP_MgmtNwkUpdateReq
// 1308  *
// 1309  * @brief       This builds and send a Mgmt_NWK_Update_req message. This
// 1310  *              function sends a unicast or broadcast message.
// 1311  *
// 1312  * @param       dstAddr - destination address of the message
// 1313  * @param       ChannelMask - 32 bit address bit map
// 1314  * @param       ScanDuration - length of time to spend scanning each channel
// 1315  * @param       ScanCount - number of energy scans to be conducted
// 1316  * @param       NwkUpdateId - NWk Update Id value
// 1317  * @param       NwkManagerAddr - NWK address for device with Network Manager
// 1318  *                               bit set in its Node Descriptor
// 1319  *
// 1320  * @return      afStatus_t
// 1321  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1322 afStatus_t ZDP_MgmtNwkUpdateReq( zAddrType_t *dstAddr,
ZDP_MgmtNwkUpdateReq:
          CFI Block cfiBlock324 Using cfiCommon0
          CFI Function ZDP_MgmtNwkUpdateReq
        CODE
// 1323                                  uint32 ChannelMask,
// 1324                                  uint8 ScanDuration,
// 1325                                  uint8 ScanCount,
// 1326                                  uint8 NwkUpdateId,
// 1327                                  uint16 NwkManagerAddr )
// 1328 {
        FUNCALL ZDP_MgmtNwkUpdateReq, osal_buffer_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       A,R1
        MOV       R7,A
        MOV       ?V2,R4
        MOV       ?V3,R5
// 1329   uint8 *pBuf = ZDP_TmpBuf;
// 1330   byte len = sizeof( uint32 ) + 1;  // ChannelMask + ScanDuration
        MOV       R6,#0x5
// 1331 
// 1332   pBuf = osal_buffer_uint32( pBuf, ChannelMask );
        ; Setup parameters for call to function osal_buffer_uint32
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 18)
        LCALL     ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_77:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
// 1333 
// 1334   *pBuf++ = ScanDuration;
        MOV       A,R7
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      @DPTR,A
// 1335 
// 1336   if ( ScanDuration <= 0x05 )
        CLR       C
        SUBB      A,#0x6
        JNC       ??ZDP_MgmtNwkUpdateReq_0
// 1337   {
// 1338     // Request is to scan over channelMask
// 1339     len += sizeof( uint8 );
        MOV       R6,#0x6
// 1340 
// 1341     *pBuf++ = ScanCount;
        INC       DPTR
        MOV       A,?V2
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x2
        JNC       ??ZDP_MgmtNwkUpdateReq_1
        SJMP      ??ZDP_MgmtNwkUpdateReq_1
// 1342   }
// 1343   else if ( ( ScanDuration == 0xFE ) || ( ScanDuration == 0xFF ) )
??ZDP_MgmtNwkUpdateReq_0:
        MOV       A,#-0x2
        XRL       A,R7
        JZ        ??ZDP_MgmtNwkUpdateReq_2
        MOV       A,#-0x1
        XRL       A,R7
        JNZ       ??ZDP_MgmtNwkUpdateReq_1
// 1344   {
// 1345     // Request is to change Channel (0xFE) or apsChannelMask and NwkManagerAddr (0xFF)
// 1346     len += sizeof( uint8 );
??ZDP_MgmtNwkUpdateReq_2:
        MOV       R6,#0x6
// 1347 
// 1348     *pBuf++ = NwkUpdateId;
        INC       DPTR
        MOV       A,?V3
        MOVX      @DPTR,A
// 1349 
// 1350     if ( ScanDuration == 0xFF )
        MOV       A,#-0x1
        XRL       A,R7
        JNZ       ??ZDP_MgmtNwkUpdateReq_1
// 1351     {
// 1352       len += sizeof( uint16 );
        MOV       R6,#0x8
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine28 & 0xFFFF
// 1353 
// 1354       *pBuf++  = LO_UINT16( NwkManagerAddr );
// 1355       *pBuf++  = HI_UINT16( NwkManagerAddr );
// 1356     }
// 1357   }
??CrossCallReturnLabel_29:
        MOV       A,R2
        ADD       A,#0x4
// 1358 
// 1359   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_NWK_Update_req, len );
??ZDP_MgmtNwkUpdateReq_1:
        ; Setup parameters for call to function fillAndSend
        MOV       ?V4,#0x38
        MOV       ?V5,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,R6
        MOV       R1,A
        MOV       R4,?V0
        MOV       R5,?V1
        LCALL     ??Subroutine136_0 & 0xFFFF
??CrossCallReturnLabel_260:
        LJMP      ?Subroutine0 & 0xFFFF
// 1360 }
          CFI EndBlock cfiBlock324

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine54:
          CFI Block cfiCond325 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_76
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond326 Using cfiCommon0
          CFI (cfiCond326) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond326) Conditional ??CrossCallReturnLabel_77
          CFI (cfiCond326) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond326) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond326) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond326) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond326) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond326) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond326) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond326) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond326) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond326) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond326) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond326) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond326) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond326) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond326) CFA_SP SP+-2
          CFI (cfiCond326) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker327 Using cfiCommon1
          CFI (cfiPicker327) NoFunction
          CFI (cfiPicker327) Picker
        LCALL     ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_201:
        LCALL     `??osal_buffer_uint32::?relay`; Banked call to: osal_buffer_uint32
        MOV       A,#0x4
        RET
          CFI EndBlock cfiCond325
          CFI EndBlock cfiCond326
          CFI EndBlock cfiPicker327
// 1361 
// 1362 
// 1363 /*********************************************************************
// 1364  * Network Management Responses
// 1365  */
// 1366 
// 1367 /*********************************************************************
// 1368  * @fn          ZDP_MgmtNwkDiscRsp
// 1369  *
// 1370  * @brief       This builds and send a Mgmt_NWK_Disc_rsp message. This
// 1371  *              function sends a unicast message.
// 1372  *
// 1373  * @param       dstAddr - destination address of the message
// 1374  * @param       Status - message status (ZDP_SUCCESS or other)
// 1375  * @param       NetworkCount - Total number of networks found
// 1376  * @param       StartIndex - Starting index within the reporting network
// 1377  *                           list
// 1378  * @param       NetworkListCount - number of network lists included
// 1379  *                                 in this message
// 1380  * @param       NetworkList - List of network descriptors
// 1381  * @param       SecurityEnable - Security Options
// 1382  *
// 1383  * @return      afStatus_t
// 1384  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1385 afStatus_t ZDP_MgmtNwkDiscRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtNwkDiscRsp:
          CFI Block cfiBlock328 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
        CODE
// 1386                             byte Status,
// 1387                             byte NetworkCount,
// 1388                             byte StartIndex,
// 1389                             byte NetworkListCount,
// 1390                             networkDesc_t *NetworkList,
// 1391                             byte SecurityEnable )
// 1392 {
        FUNCALL ZDP_MgmtNwkDiscRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkDiscRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkDiscRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkDiscRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V10
        REQUIRE ?V11
        MOV       A,#-0x14
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       ?V10,R2
        MOV       ?V11,R3
        MOV       ?V8,R4
        MOV       ?V6,R5
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V4,A
// 1393   uint8 *buf;
// 1394   uint8 *pBuf;
// 1395   byte len = 1+1+1+1;  // Status + NetworkCount + StartIndex + NetworkCountList.
// 1396   byte idx;
// 1397 
// 1398   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1399 
// 1400   len += (NetworkListCount * ( ZDP_NETWORK_EXTENDED_DISCRIPTOR_SIZE - 2 ));
        MOV       B,#0xc
        MUL       AB
        ADD       A,#0x4
        MOV       ?V5,A
// 1401 
// 1402   buf = osal_mem_alloc( len+1 );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_93:
        MOV       ?V0,R2
        MOV       ?V1,R3
// 1403   if ( buf == NULL )
        MOV       A,R2
        ORL       A,R3
        JNZ       ??ZDP_MgmtNwkDiscRsp_0
// 1404   {
// 1405     return afStatus_MEM_FAIL;
        MOV       R1,#0x10
        LJMP      ??CrossCallReturnLabel_234 & 0xFFFF
// 1406   }
// 1407 
// 1408   pBuf = buf+1;
??ZDP_MgmtNwkDiscRsp_0:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        MOV       R6,DPL
        MOV       R7,DPH
// 1409 
// 1410   *pBuf++ = Status;
        MOV       A,?V8
        MOVX      @DPTR,A
// 1411   *pBuf++ = NetworkCount;
        INC       DPTR
        MOV       A,?V6
        MOVX      @DPTR,A
// 1412   *pBuf++ = StartIndex;
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine33 & 0xFFFF
// 1413   *pBuf++ = NetworkListCount;
??CrossCallReturnLabel_42:
        MOV       A,?V4
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x4
        MOV       R6,A
        JNC       ??ZDP_MgmtNwkDiscRsp_1
        INC       R7
// 1414 
// 1415   for ( idx = 0; idx < NetworkListCount; idx++ )
??ZDP_MgmtNwkDiscRsp_1:
        MOV       ?V7,#0x0
        MOV       A,#0x17
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine117_0 & 0xFFFF
??CrossCallReturnLabel_163:
        SJMP      ??ZDP_MgmtNwkDiscRsp_2
// 1416   {
// 1417     osal_cpyExtAddr( pBuf, NetworkList->extendedPANID);
// 1418     pBuf += Z_EXTADDR_LEN;
// 1419 
// 1420     *pBuf++  = NetworkList->logicalChannel;                // LogicalChannel
// 1421     *pBuf    = NetworkList->stackProfile;                  // Stack profile
// 1422     *pBuf++ |= (byte)(NetworkList->version << 4);          // ZigBee Version
// 1423     *pBuf    = BEACON_ORDER_NO_BEACONS;                    // Beacon Order
// 1424     *pBuf++ |= (uint8)(BEACON_ORDER_NO_BEACONS << 4);      // Superframe Order
// 1425 
// 1426     if ( NetworkList->chosenRouter != INVALID_NODE_ADDR )
// 1427     {
// 1428       *pBuf++ = TRUE;                         // Permit Joining
// 1429     }
// 1430     else
// 1431     {
// 1432       *pBuf++ = FALSE;
??ZDP_MgmtNwkDiscRsp_3:
        LCALL     ?Subroutine75 & 0xFFFF
// 1433     }
??CrossCallReturnLabel_108:
        CLR       A
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0xc
        MOV       R6,A
        JNC       ??ZDP_MgmtNwkDiscRsp_4
        INC       R7
// 1434 
// 1435     NetworkList = NetworkList->nextDesc;    // Move to next list entry
??ZDP_MgmtNwkDiscRsp_4:
        MOV       A,?V2
        ADD       A,#0x14
        MOV       DPL,A
        CLR       A
        ADDC      A,?V3
        MOV       DPH,A
        LCALL     ??Subroutine117_0 & 0xFFFF
??CrossCallReturnLabel_164:
        INC       ?V7
??ZDP_MgmtNwkDiscRsp_2:
        MOV       A,?V7
        CLR       C
        SUBB      A,?V4
        JNC       ??ZDP_MgmtNwkDiscRsp_5
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,?V2
        ADD       A,#0xb
        MOV       R4,A
        CLR       A
        ADDC      A,?V3
        MOV       R5,A
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       DPL,?V2
        MOV       DPH,?V3
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_65:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine35 & 0xFFFF
??CrossCallReturnLabel_45:
        MOV       DPL,?V2
        MOV       DPH,?V3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_240:
        LCALL     ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_25:
        MOVX      A,@DPTR
        SWAP      A
        ANL       A,#0xf0
        MOV       R2,A
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        ORL       A,R2
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_20:
        INC       DPTR
        INC       DPTR
        MOV       A,#-0x1
        LCALL     ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_26:
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,#0xfe
        JNZ       ??ZDP_MgmtNwkDiscRsp_6
        INC       DPTR
        MOVX      A,@DPTR
        CPL       A
??ZDP_MgmtNwkDiscRsp_6:
        JZ        ??ZDP_MgmtNwkDiscRsp_3
        LCALL     ?Subroutine75 & 0xFFFF
// 1436   }
??CrossCallReturnLabel_109:
        MOV       A,#0x1
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0xc
        MOV       R6,A
        JNC       ??ZDP_MgmtNwkDiscRsp_4
        INC       R7
??ZDP_MgmtNwkDiscRsp_7:
        SJMP      ??ZDP_MgmtNwkDiscRsp_4
// 1437 
// 1438   FillAndSendBuffer( &TransSeq, dstAddr, Mgmt_NWK_Disc_rsp, len, buf );
??ZDP_MgmtNwkDiscRsp_5:
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ??Subroutine130_0 & 0xFFFF
??CrossCallReturnLabel_227:
        ; Setup parameters for call to function fillAndSend
        MOV       ?V2,#0x30
        MOV       ?V3,#-0x80
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       R1,?V5
        MOV       R4,?V10
        MOV       R5,?V11
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_269:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R1
        MOV       R6,A
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     ??Subroutine132_0 & 0xFFFF
??CrossCallReturnLabel_234:
          CFI EndBlock cfiBlock328
        REQUIRE ?Subroutine7
        ; // Fall through to label ?Subroutine7
// 1439 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine7:
          CFI Block cfiBlock329 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0x1
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       R7,#0xc
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock329

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine75:
          CFI Block cfiCond330 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_107
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond331 Using cfiCommon0
          CFI (cfiCond331) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond331) Conditional ??CrossCallReturnLabel_108
          CFI (cfiCond331) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond331) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond331) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond331) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond331) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond331) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond331) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond331) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond331) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond331) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond331) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond331) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond331) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond331) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond331) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond331) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond331) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond331) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond331) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond331) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond331) CFA_SP SP+-2
          CFI (cfiCond331) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond332 Using cfiCommon0
          CFI (cfiCond332) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond332) Conditional ??CrossCallReturnLabel_109
          CFI (cfiCond332) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond332) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond332) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond332) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond332) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond332) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond332) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond332) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond332) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond332) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond332) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond332) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond332) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond332) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond332) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond332) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond332) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond332) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond332) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond332) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond332) CFA_SP SP+-2
          CFI (cfiCond332) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker333 Using cfiCommon1
          CFI (cfiPicker333) NoFunction
          CFI (cfiPicker333) Picker
        MOV       A,R6
        ADD       A,#0xb
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond330
          CFI EndBlock cfiCond331
          CFI EndBlock cfiCond332
          CFI EndBlock cfiPicker333

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine47:
          CFI Block cfiCond334 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_62
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond335 Using cfiCommon0
          CFI (cfiCond335) Function ZDP_NodeDescMsg
          CFI (cfiCond335) Conditional ??CrossCallReturnLabel_63
          CFI (cfiCond335) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond335) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond335) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond335) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond335) CFA_SP SP+-2
          CFI (cfiCond335) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond336 Using cfiCommon0
          CFI (cfiCond336) Function ZDP_NodeDescMsg
          CFI (cfiCond336) Conditional ??CrossCallReturnLabel_64
          CFI (cfiCond336) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond336) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond336) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond336) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond336) CFA_SP SP+-2
          CFI (cfiCond336) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond337 Using cfiCommon0
          CFI (cfiCond337) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond337) Conditional ??CrossCallReturnLabel_65
          CFI (cfiCond337) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond337) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond337) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond337) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond337) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond337) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond337) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond337) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond337) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond337) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond337) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond337) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond337) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond337) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond337) CFA_SP SP+-2
          CFI (cfiCond337) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker338 Using cfiCommon1
          CFI (cfiPicker338) NoFunction
          CFI (cfiPicker338) Picker
        LCALL     ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_121:
        RET
          CFI EndBlock cfiCond334
          CFI EndBlock cfiCond335
          CFI EndBlock cfiCond336
          CFI EndBlock cfiCond337
          CFI EndBlock cfiPicker338

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine80:
          CFI Block cfiCond339 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_56
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond340 Using cfiCommon0
          CFI (cfiCond340) Function ZDP_NodeDescMsg
          CFI (cfiCond340) Conditional ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_57
          CFI (cfiCond340) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond340) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond340) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond340) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond340) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond340) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond340) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond340) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond340) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond340) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond340) CFA_SP SP+-4
          CFI (cfiCond340) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond341 Using cfiCommon0
          CFI (cfiCond341) Function ZDP_EndDeviceBindReq
          CFI (cfiCond341) Conditional ??CrossCallReturnLabel_118, ??CrossCallReturnLabel_6
          CFI (cfiCond341) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond341) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond341) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond341) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond341) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond341) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond341) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond341) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond341) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond341) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond341) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond341) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond341) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond341) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond341) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond341) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond341) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond341) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond341) CFA_SP SP+-4
          CFI (cfiCond341) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond342 Using cfiCommon0
          CFI (cfiCond342) Function ZDP_EndDeviceBindReq
          CFI (cfiCond342) Conditional ??CrossCallReturnLabel_118, ??CrossCallReturnLabel_7
          CFI (cfiCond342) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond342) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond342) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond342) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond342) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond342) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond342) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond342) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond342) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond342) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond342) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond342) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond342) CFA_SP SP+-4
          CFI (cfiCond342) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond343 Using cfiCommon0
          CFI (cfiCond343) Function ZDP_NodeDescMsg
          CFI (cfiCond343) Conditional ??CrossCallReturnLabel_121, ??CrossCallReturnLabel_62
          CFI (cfiCond343) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond343) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond343) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond343) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond343) CFA_SP SP+-4
          CFI (cfiCond343) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond344 Using cfiCommon0
          CFI (cfiCond344) Function ZDP_NodeDescMsg
          CFI (cfiCond344) Conditional ??CrossCallReturnLabel_121, ??CrossCallReturnLabel_63
          CFI (cfiCond344) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond344) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond344) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond344) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond344) CFA_SP SP+-4
          CFI (cfiCond344) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond345 Using cfiCommon0
          CFI (cfiCond345) Function ZDP_NodeDescMsg
          CFI (cfiCond345) Conditional ??CrossCallReturnLabel_121, ??CrossCallReturnLabel_64
          CFI (cfiCond345) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond345) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond345) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond345) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond345) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond345) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond345) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond345) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond345) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond345) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond345) CFA_SP SP+-4
          CFI (cfiCond345) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond346 Using cfiCommon0
          CFI (cfiCond346) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond346) Conditional ??CrossCallReturnLabel_121, ??CrossCallReturnLabel_65
          CFI (cfiCond346) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond346) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond346) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond346) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond346) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond346) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond346) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond346) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond346) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond346) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond346) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond346) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond346) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond346) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond346) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond346) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond346) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond346) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond346) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond346) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond346) CFA_SP SP+-4
          CFI (cfiCond346) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond347 Using cfiCommon0
          CFI (cfiCond347) Function zdpProcessAddrReq
          CFI (cfiCond347) Conditional ??CrossCallReturnLabel_119, ??CrossCallReturnLabel_41
          CFI (cfiCond347) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond347) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond347) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond347) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond347) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond347) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond347) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond347) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond347) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond347) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond347) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond347) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond347) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond347) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond347) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond347) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond347) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond347) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond347) CFA_SP SP+-4
          CFI (cfiCond347) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond348 Using cfiCommon0
          CFI (cfiCond348) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond348) Conditional ??CrossCallReturnLabel_119, ??CrossCallReturnLabel_42
          CFI (cfiCond348) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond348) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond348) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond348) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond348) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond348) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond348) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond348) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond348) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond348) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond348) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond348) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond348) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond348) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond348) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond348) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond348) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond348) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond348) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond348) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond348) CFA_SP SP+-4
          CFI (cfiCond348) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker349 Using cfiCommon1
          CFI (cfiPicker349) NoFunction
          CFI (cfiPicker349) Picker
        LCALL     ??Subroutine129_0 & 0xFFFF
??CrossCallReturnLabel_218:
        INC       DPTR
        RET
          CFI EndBlock cfiCond339
          CFI EndBlock cfiCond340
          CFI EndBlock cfiCond341
          CFI EndBlock cfiCond342
          CFI EndBlock cfiCond343
          CFI EndBlock cfiCond344
          CFI EndBlock cfiCond345
          CFI EndBlock cfiCond346
          CFI EndBlock cfiCond347
          CFI EndBlock cfiCond348
          CFI EndBlock cfiPicker349

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine104:
          CFI Block cfiCond350 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_219
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond351 Using cfiCommon0
          CFI (cfiCond351) Function ZDP_NodeDescMsg
          CFI (cfiCond351) Conditional ??CrossCallReturnLabel_220
          CFI (cfiCond351) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond351) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond351) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond351) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond351) CFA_SP SP+-2
          CFI (cfiCond351) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker352 Using cfiCommon1
          CFI (cfiPicker352) NoFunction
          CFI (cfiPicker352) Picker
        INC       DPTR
          CFI EndBlock cfiCond350
          CFI EndBlock cfiCond351
          CFI EndBlock cfiPicker352
        REQUIRE ??Subroutine129_0
        ; // Fall through to label ??Subroutine129_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine129_0:
          CFI Block cfiCond353 Using cfiCommon0
          CFI Function ZDP_EndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_6
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond354 Using cfiCommon0
          CFI (cfiCond354) Function ZDP_EndDeviceBindReq
          CFI (cfiCond354) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_7
          CFI (cfiCond354) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond354) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond354) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond354) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond354) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond354) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond354) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond354) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond354) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond354) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond354) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond354) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond354) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond354) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond354) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond354) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond354) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond354) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond354) CFA_SP SP+-4
          CFI (cfiCond354) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond355 Using cfiCommon0
          CFI (cfiCond355) Function ZDP_NodeDescMsg
          CFI (cfiCond355) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_56
          CFI (cfiCond355) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond355) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond355) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond355) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond355) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond355) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond355) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond355) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond355) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond355) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond355) CFA_SP SP+-6
          CFI (cfiCond355) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond356 Using cfiCommon0
          CFI (cfiCond356) Function ZDP_NodeDescMsg
          CFI (cfiCond356) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_57
          CFI (cfiCond356) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond356) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond356) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond356) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond356) CFA_SP SP+-6
          CFI (cfiCond356) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond357 Using cfiCommon0
          CFI (cfiCond357) Function ZDP_EndDeviceBindReq
          CFI (cfiCond357) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_118, ??CrossCallReturnLabel_6
          CFI (cfiCond357) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond357) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond357) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond357) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond357) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond357) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond357) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond357) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond357) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond357) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond357) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond357) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond357) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond357) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond357) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond357) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond357) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond357) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond357) CFA_SP SP+-6
          CFI (cfiCond357) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond358 Using cfiCommon0
          CFI (cfiCond358) Function ZDP_EndDeviceBindReq
          CFI (cfiCond358) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_118, ??CrossCallReturnLabel_7
          CFI (cfiCond358) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond358) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond358) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond358) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond358) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond358) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond358) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond358) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond358) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond358) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond358) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond358) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond358) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond358) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond358) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond358) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond358) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond358) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond358) CFA_SP SP+-6
          CFI (cfiCond358) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond359 Using cfiCommon0
          CFI (cfiCond359) Function ZDP_NodeDescMsg
          CFI (cfiCond359) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_121, ??CrossCallReturnLabel_62
          CFI (cfiCond359) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond359) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond359) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond359) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond359) CFA_SP SP+-6
          CFI (cfiCond359) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond360 Using cfiCommon0
          CFI (cfiCond360) Function ZDP_NodeDescMsg
          CFI (cfiCond360) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_121, ??CrossCallReturnLabel_63
          CFI (cfiCond360) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond360) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond360) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond360) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond360) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond360) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond360) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond360) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond360) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond360) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond360) CFA_SP SP+-6
          CFI (cfiCond360) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond361 Using cfiCommon0
          CFI (cfiCond361) Function ZDP_NodeDescMsg
          CFI (cfiCond361) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_121, ??CrossCallReturnLabel_64
          CFI (cfiCond361) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond361) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond361) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond361) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond361) CFA_SP SP+-6
          CFI (cfiCond361) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond362 Using cfiCommon0
          CFI (cfiCond362) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond362) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_121, ??CrossCallReturnLabel_65
          CFI (cfiCond362) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond362) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond362) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond362) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond362) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond362) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond362) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond362) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond362) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond362) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond362) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond362) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond362) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond362) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond362) CFA_SP SP+-6
          CFI (cfiCond362) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond363 Using cfiCommon0
          CFI (cfiCond363) Function zdpProcessAddrReq
          CFI (cfiCond363) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_119, ??CrossCallReturnLabel_41
          CFI (cfiCond363) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond363) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond363) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond363) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond363) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond363) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond363) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond363) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond363) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond363) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond363) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond363) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond363) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond363) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond363) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond363) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond363) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond363) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond363) CFA_SP SP+-6
          CFI (cfiCond363) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond364 Using cfiCommon0
          CFI (cfiCond364) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond364) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_119, ??CrossCallReturnLabel_42
          CFI (cfiCond364) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond364) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond364) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond364) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond364) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond364) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond364) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond364) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond364) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond364) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond364) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond364) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond364) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond364) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond364) CFA_SP SP+-6
          CFI (cfiCond364) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond365 Using cfiCommon0
          CFI (cfiCond365) Function ZDP_NodeDescMsg
          CFI (cfiCond365) Conditional ??CrossCallReturnLabel_219
          CFI (cfiCond365) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond365) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond365) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond365) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond365) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond365) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond365) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond365) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond365) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond365) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond365) CFA_SP SP+-2
          CFI (cfiCond365) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond366 Using cfiCommon0
          CFI (cfiCond366) Function ZDP_NodeDescMsg
          CFI (cfiCond366) Conditional ??CrossCallReturnLabel_220
          CFI (cfiCond366) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond366) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond366) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond366) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond366) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond366) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond366) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond366) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond366) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond366) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond366) CFA_SP SP+-2
          CFI (cfiCond366) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker367 Using cfiCommon1
          CFI (cfiPicker367) NoFunction
          CFI (cfiPicker367) Picker
        MOVX      A,@DPTR
        MOV       DPL,R6
        MOV       DPH,R7
        RET
          CFI EndBlock cfiCond353
          CFI EndBlock cfiCond354
          CFI EndBlock cfiCond355
          CFI EndBlock cfiCond356
          CFI EndBlock cfiCond357
          CFI EndBlock cfiCond358
          CFI EndBlock cfiCond359
          CFI EndBlock cfiCond360
          CFI EndBlock cfiCond361
          CFI EndBlock cfiCond362
          CFI EndBlock cfiCond363
          CFI EndBlock cfiCond364
          CFI EndBlock cfiCond365
          CFI EndBlock cfiCond366
          CFI EndBlock cfiPicker367

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine33:
          CFI Block cfiCond368 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_41
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond369 Using cfiCommon0
          CFI (cfiCond369) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond369) Conditional ??CrossCallReturnLabel_42
          CFI (cfiCond369) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond369) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond369) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond369) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond369) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond369) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond369) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond369) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond369) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond369) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond369) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond369) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond369) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond369) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond369) CFA_SP SP+-2
          CFI (cfiCond369) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker370 Using cfiCommon1
          CFI (cfiPicker370) NoFunction
          CFI (cfiPicker370) Picker
        LCALL     ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_119:
        INC       DPTR
        LCALL     ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_136:
        RET
          CFI EndBlock cfiCond368
          CFI EndBlock cfiCond369
          CFI EndBlock cfiPicker370

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine93:
          CFI Block cfiCond371 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_41
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond372 Using cfiCommon0
          CFI (cfiCond372) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond372) Conditional ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_42
          CFI (cfiCond372) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond372) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond372) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond372) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond372) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond372) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond372) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond372) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond372) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond372) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond372) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond372) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond372) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond372) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond372) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond372) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond372) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond372) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond372) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond372) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond372) CFA_SP SP+-4
          CFI (cfiCond372) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond373 Using cfiCommon0
          CFI (cfiCond373) Function fillAndSend
          CFI (cfiCond373) Conditional ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_19
          CFI (cfiCond373) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond373) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond373) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond373) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond373) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond373) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond373) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond373) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond373) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond373) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond373) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond373) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond373) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond373) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond373) CFA_SP SP+-4
          CFI (cfiCond373) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond374 Using cfiCommon0
          CFI (cfiCond374) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond374) Conditional ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_20
          CFI (cfiCond374) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond374) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond374) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond374) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond374) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond374) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond374) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond374) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond374) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond374) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond374) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond374) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond374) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond374) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond374) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond374) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond374) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond374) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond374) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond374) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond374) CFA_SP SP+-4
          CFI (cfiCond374) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker375 Using cfiCommon1
          CFI (cfiPicker375) NoFunction
          CFI (cfiPicker375) Picker
        MOVX      @DPTR,A
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond371
          CFI EndBlock cfiCond372
          CFI EndBlock cfiCond373
          CFI EndBlock cfiCond374
          CFI EndBlock cfiPicker375

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine23:
          CFI Block cfiCond376 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_25
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond377 Using cfiCommon0
          CFI (cfiCond377) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond377) Conditional ??CrossCallReturnLabel_26
          CFI (cfiCond377) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond377) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond377) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond377) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond377) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond377) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond377) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond377) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond377) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond377) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond377) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond377) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond377) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond377) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond377) CFA_SP SP+-2
          CFI (cfiCond377) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker378 Using cfiCommon1
          CFI (cfiPicker378) NoFunction
          CFI (cfiPicker378) Picker
        LCALL     ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_143:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond376
          CFI EndBlock cfiCond377
          CFI EndBlock cfiPicker378

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine96:
          CFI Block cfiCond379 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_142, ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond380 Using cfiCommon0
          CFI (cfiCond380) Function ZDP_SimpleDescMsg
          CFI (cfiCond380) Conditional ??CrossCallReturnLabel_142, ??CrossCallReturnLabel_5
          CFI (cfiCond380) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond380) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond380) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond380) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond380) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond380) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond380) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond380) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond380) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond380) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond380) CFA_SP SP+-4
          CFI (cfiCond380) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond381 Using cfiCommon0
          CFI (cfiCond381) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond381) Conditional ??CrossCallReturnLabel_143, ??CrossCallReturnLabel_25
          CFI (cfiCond381) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond381) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond381) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond381) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond381) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond381) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond381) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond381) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond381) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond381) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond381) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond381) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond381) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond381) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond381) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond381) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond381) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond381) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond381) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond381) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond381) CFA_SP SP+-4
          CFI (cfiCond381) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond382 Using cfiCommon0
          CFI (cfiCond382) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond382) Conditional ??CrossCallReturnLabel_143, ??CrossCallReturnLabel_26
          CFI (cfiCond382) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond382) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond382) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond382) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond382) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond382) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond382) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond382) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond382) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond382) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond382) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond382) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond382) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond382) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond382) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond382) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond382) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond382) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond382) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond382) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond382) CFA_SP SP+-4
          CFI (cfiCond382) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker383 Using cfiCommon1
          CFI (cfiPicker383) NoFunction
          CFI (cfiPicker383) Picker
        MOVX      @DPTR,A
        MOV       DPL,?V2
        MOV       DPH,?V3
        INC       DPTR
        RET
          CFI EndBlock cfiCond379
          CFI EndBlock cfiCond380
          CFI EndBlock cfiCond381
          CFI EndBlock cfiCond382
          CFI EndBlock cfiPicker383
// 1440 
// 1441 /*********************************************************************
// 1442  * @fn          ZDP_MgmtLqiRsp
// 1443  *
// 1444  * @brief       This builds and send a Mgmt_Lqi_rsp message. This
// 1445  *              function sends a unicast message.
// 1446  *
// 1447  * @param       dstAddr - destination address of the message
// 1448  * @param       Status - message status (ZDP_SUCCESS or other)
// 1449  * @param       NeighborLqiEntries - Total number of entries found
// 1450  * @param       StartIndex - Starting index within the reporting list
// 1451  * @param       NeighborLqiCount - number of lists included
// 1452  *                                 in this message
// 1453  * @param       NeighborLqiList - List of NeighborLqiItems.  This list
// 1454  *                is the list to be sent, not the entire list
// 1455  * @param       SecurityEnable - true if secure
// 1456  *
// 1457  * @return      ZStatus_t
// 1458  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine19:
          CFI Block cfiCond384 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_230
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond385 Using cfiCommon0
          CFI (cfiCond385) Function ZDP_MgmtBindRsp
          CFI (cfiCond385) Conditional ??CrossCallReturnLabel_231
          CFI (cfiCond385) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond385) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond385) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond385) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond385) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond385) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond385) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond385) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond385) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond385) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond385) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond385) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond385) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond385) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond385) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond385) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond385) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond385) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond385) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond385) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond385) CFA_SP SP+-2
          CFI (cfiCond385) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker386 Using cfiCommon1
          CFI (cfiPicker386) NoFunction
          CFI (cfiPicker386) Picker
        MOV       DPL,?V2
        MOV       DPH,?V3
          CFI EndBlock cfiCond384
          CFI EndBlock cfiCond385
          CFI EndBlock cfiPicker386
        REQUIRE ??Subroutine130_0
        ; // Fall through to label ??Subroutine130_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine130_0:
          CFI Block cfiCond387 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_227
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond388 Using cfiCommon0
          CFI (cfiCond388) Function ZDP_MgmtRtgRsp
          CFI (cfiCond388) Conditional ??CrossCallReturnLabel_228
          CFI (cfiCond388) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond388) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond388) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond388) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond388) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond388) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond388) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond388) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond388) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond388) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond388) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond388) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond388) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond388) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond388) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond388) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond388) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond388) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond388) CFA_SP SP+-2
          CFI (cfiCond388) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond389 Using cfiCommon0
          CFI (cfiCond389) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond389) Conditional ??CrossCallReturnLabel_229
          CFI (cfiCond389) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond389) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond389) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond389) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond389) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond389) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond389) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond389) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond389) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond389) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond389) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond389) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond389) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond389) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond389) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond389) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond389) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond389) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond389) CFA_SP SP+-2
          CFI (cfiCond389) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond390 Using cfiCommon0
          CFI (cfiCond390) Function ZDP_MgmtLqiRsp
          CFI (cfiCond390) Conditional ??CrossCallReturnLabel_230
          CFI (cfiCond390) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond390) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond390) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond390) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond390) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond390) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond390) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond390) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond390) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond390) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond390) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond390) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond390) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond390) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond390) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond390) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond390) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond390) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond390) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond390) CFA_SP SP+-2
          CFI (cfiCond390) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond391 Using cfiCommon0
          CFI (cfiCond391) Function ZDP_MgmtBindRsp
          CFI (cfiCond391) Conditional ??CrossCallReturnLabel_231
          CFI (cfiCond391) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond391) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond391) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond391) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond391) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond391) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond391) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond391) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond391) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond391) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond391) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond391) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond391) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond391) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond391) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond391) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond391) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond391) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond391) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond391) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond391) CFA_SP SP+-2
          CFI (cfiCond391) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker392 Using cfiCommon1
          CFI (cfiPicker392) NoFunction
          CFI (cfiPicker392) Picker
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
        MOV       DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond387
          CFI EndBlock cfiCond388
          CFI EndBlock cfiCond389
          CFI EndBlock cfiCond390
          CFI EndBlock cfiCond391
          CFI EndBlock cfiPicker392
        REQUIRE ??Subroutine131_0
        ; // Fall through to label ??Subroutine131_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine131_0:
          CFI Block cfiCond393 Using cfiCommon0
          CFI Function fillAndSend
          CFI Conditional ??CrossCallReturnLabel_221
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond394 Using cfiCommon0
          CFI (cfiCond394) Function zdpProcessAddrReq
          CFI (cfiCond394) Conditional ??CrossCallReturnLabel_222
          CFI (cfiCond394) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond394) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond394) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond394) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond394) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond394) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond394) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond394) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond394) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond394) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond394) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond394) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond394) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond394) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond394) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond394) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond394) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond394) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond394) CFA_SP SP+-2
          CFI (cfiCond394) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond395 Using cfiCommon0
          CFI (cfiCond395) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond395) Conditional ??CrossCallReturnLabel_223
          CFI (cfiCond395) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond395) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond395) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond395) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond395) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond395) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond395) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond395) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond395) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond395) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond395) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond395) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond395) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond395) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond395) CFA_SP SP+-2
          CFI (cfiCond395) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond396 Using cfiCommon0
          CFI (cfiCond396) Function ZDP_IncomingData
          CFI (cfiCond396) Conditional ??CrossCallReturnLabel_224
          CFI (cfiCond396) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond396) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond396) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond396) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond396) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond396) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond396) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond396) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond396) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond396) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond396) CFA_SP SP+-2
          CFI (cfiCond396) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond397 Using cfiCommon0
          CFI (cfiCond397) Function ZDP_IncomingData
          CFI (cfiCond397) Conditional ??CrossCallReturnLabel_225
          CFI (cfiCond397) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond397) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond397) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond397) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond397) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond397) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond397) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond397) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond397) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond397) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond397) CFA_SP SP+-2
          CFI (cfiCond397) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond398 Using cfiCommon0
          CFI (cfiCond398) Function ZDP_IncomingData
          CFI (cfiCond398) Conditional ??CrossCallReturnLabel_226
          CFI (cfiCond398) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond398) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond398) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond398) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond398) CFA_SP SP+-2
          CFI (cfiCond398) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond399 Using cfiCommon0
          CFI (cfiCond399) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond399) Conditional ??CrossCallReturnLabel_227
          CFI (cfiCond399) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond399) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond399) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond399) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond399) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond399) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond399) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond399) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond399) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond399) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond399) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond399) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond399) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond399) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond399) CFA_SP SP+-2
          CFI (cfiCond399) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond400 Using cfiCommon0
          CFI (cfiCond400) Function ZDP_MgmtRtgRsp
          CFI (cfiCond400) Conditional ??CrossCallReturnLabel_228
          CFI (cfiCond400) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond400) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond400) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond400) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond400) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond400) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond400) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond400) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond400) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond400) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond400) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond400) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond400) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond400) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond400) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond400) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond400) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond400) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond400) CFA_SP SP+-2
          CFI (cfiCond400) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond401 Using cfiCommon0
          CFI (cfiCond401) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond401) Conditional ??CrossCallReturnLabel_229
          CFI (cfiCond401) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond401) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond401) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond401) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond401) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond401) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond401) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond401) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond401) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond401) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond401) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond401) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond401) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond401) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond401) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond401) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond401) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond401) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond401) CFA_SP SP+-2
          CFI (cfiCond401) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond402 Using cfiCommon0
          CFI (cfiCond402) Function ZDP_MgmtLqiRsp
          CFI (cfiCond402) Conditional ??CrossCallReturnLabel_230
          CFI (cfiCond402) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond402) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond402) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond402) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond402) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond402) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond402) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond402) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond402) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond402) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond402) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond402) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond402) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond402) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond402) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond402) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond402) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond402) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond402) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond402) CFA_SP SP+-2
          CFI (cfiCond402) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond403 Using cfiCommon0
          CFI (cfiCond403) Function ZDP_MgmtBindRsp
          CFI (cfiCond403) Conditional ??CrossCallReturnLabel_231
          CFI (cfiCond403) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond403) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond403) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond403) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond403) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond403) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond403) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond403) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond403) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond403) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond403) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond403) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond403) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond403) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond403) CFA_SP SP+-2
          CFI (cfiCond403) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker404 Using cfiCommon1
          CFI (cfiPicker404) NoFunction
          CFI (cfiPicker404) Picker
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond393
          CFI EndBlock cfiCond394
          CFI EndBlock cfiCond395
          CFI EndBlock cfiCond396
          CFI EndBlock cfiCond397
          CFI EndBlock cfiCond398
          CFI EndBlock cfiCond399
          CFI EndBlock cfiCond400
          CFI EndBlock cfiCond401
          CFI EndBlock cfiCond402
          CFI EndBlock cfiCond403
          CFI EndBlock cfiPicker404

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine18:
          CFI Block cfiCond405 Using cfiCommon0
          CFI Function fillAndSend
          CFI Conditional ??CrossCallReturnLabel_19
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond406 Using cfiCommon0
          CFI (cfiCond406) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond406) Conditional ??CrossCallReturnLabel_20
          CFI (cfiCond406) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond406) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond406) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond406) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond406) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond406) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond406) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond406) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond406) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond406) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond406) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond406) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond406) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond406) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond406) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond406) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond406) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond406) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond406) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond406) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond406) CFA_SP SP+-2
          CFI (cfiCond406) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker407 Using cfiCommon1
          CFI (cfiPicker407) NoFunction
          CFI (cfiPicker407) Picker
        LCALL     ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_137:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond405
          CFI EndBlock cfiCond406
          CFI EndBlock cfiPicker407

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1459 ZStatus_t ZDP_MgmtLqiRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtLqiRsp:
          CFI Block cfiBlock408 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
        CODE
// 1460                           byte Status,
// 1461                           byte NeighborLqiEntries,
// 1462                           byte StartIndex,
// 1463                           byte NeighborLqiCount,
// 1464                           ZDP_MgmtLqiItem_t* NeighborList,
// 1465                           byte SecurityEnable )
// 1466 {
        FUNCALL ZDP_MgmtLqiRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        MOV       A,#-0x13
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
        ; Saved register size: 19
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       ?V8,R2
        MOV       ?V9,R3
        MOV       ?V10,R5
// 1467   ZDP_MgmtLqiItem_t* list = NeighborList;
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine142_0 & 0xFFFF
// 1468   uint8 *buf, *pBuf;
// 1469   byte len, x;
// 1470 
// 1471   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1472 
// 1473   if ( ZSuccess != Status )
??CrossCallReturnLabel_288:
        MOV       A,R4
        JZ        ??ZDP_MgmtLqiRsp_0
// 1474   {
// 1475     ZDP_TmpBuf[0] = Status;
        LCALL     ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_191:
        MOV       A,R4
        MOVX      @DPTR,A
// 1476     return fillAndSend( &TransSeq, dstAddr, Mgmt_Lqi_rsp, 1 );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x31
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       R1,#0x1
        MOV       R4,?V8
        MOV       R5,?V9
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine137_0 & 0xFFFF
// 1477   }
??CrossCallReturnLabel_270:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        LJMP      ??CrossCallReturnLabel_232 & 0xFFFF
??ZDP_MgmtLqiRsp_0:
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V5,A
// 1478 
// 1479   // (Status + NeighborLqiEntries + StartIndex + NeighborLqiCount) +
// 1480   //  neighbor LQI data.
// 1481   len = (1 + 1 + 1 + 1) + (NeighborLqiCount * ZDP_MGMTLQI_EXTENDED_SIZE);
        MOV       B,#0x16
        MUL       AB
        ADD       A,#0x4
        MOV       ?V6,A
// 1482 
// 1483   buf = osal_mem_alloc( len+1 );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine65 & 0xFFFF
// 1484   if ( buf == NULL )
??CrossCallReturnLabel_91:
        JNZ       ??ZDP_MgmtLqiRsp_1
// 1485   {
// 1486     return afStatus_MEM_FAIL;
        MOV       R1,#0x10
        LJMP      ??CrossCallReturnLabel_232 & 0xFFFF
// 1487   }
// 1488 
// 1489   pBuf = buf+1;
??ZDP_MgmtLqiRsp_1:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        MOV       ?V0,DPL
        MOV       ?V1,DPH
// 1490 
// 1491   *pBuf++ = Status;
        CLR       A
        MOVX      @DPTR,A
// 1492   *pBuf++ = NeighborLqiEntries;
        INC       DPTR
        MOV       A,?V10
        MOVX      @DPTR,A
// 1493   *pBuf++ = StartIndex;
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_90:
        LCALL     ?Subroutine32 & 0xFFFF
// 1494   *pBuf++ = NeighborLqiCount;
??CrossCallReturnLabel_40:
        INC       DPTR
        MOV       A,?V5
        MOVX      @DPTR,A
        MOV       A,?V0
        ADD       A,#0x4
        MOV       ?V0,A
        JNC       ??ZDP_MgmtLqiRsp_2
        INC       ?V1
// 1495 
// 1496   for ( x = 0; x < NeighborLqiCount; x++ )
??ZDP_MgmtLqiRsp_2:
        MOV       ?V4,#0x0
        LJMP      ??ZDP_MgmtLqiRsp_3 & 0xFFFF
// 1497   {
// 1498     osal_cpyExtAddr( pBuf, list->extPanID);         // Extended PanID
??ZDP_MgmtLqiRsp_4:
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        ADD       A,#0x2
        MOV       R4,A
        CLR       A
        ADDC      A,R7
        MOV       R5,A
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 1499     pBuf += Z_EXTADDR_LEN;
// 1500 
// 1501     // EXTADDR
// 1502     pBuf = osal_cpyExtAddr( pBuf, list->extAddr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        ADD       A,#0xa
        MOV       R4,A
        CLR       A
        ADDC      A,R7
        MOV       R5,A
        MOV       A,?V0
        ADD       A,#0x8
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 1503 
// 1504     // NWKADDR
// 1505     *pBuf++ = LO_UINT16( list->nwkAddr );
        MOV       A,R6
        ADD       A,#0x12
        LCALL     ?Subroutine14 & 0xFFFF
// 1506     *pBuf++ = HI_UINT16( list->nwkAddr );
// 1507 
// 1508     // DEVICETYPE
// 1509     *pBuf = list->devType;
??CrossCallReturnLabel_10:
        MOV       R0,A
        CLR       A
        ADDC      A,R3
        MOV       R1,A
        MOV       A,R6
        ADD       A,#0x14
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        LCALL     ?Subroutine46 & 0xFFFF
// 1510 
// 1511     // RXONIDLE
// 1512     *pBuf |= (uint8)(list->rxOnIdle << 2);
??CrossCallReturnLabel_182:
        MOV       A,R6
        ADD       A,#0x15
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOVX      A,@DPTR
        RLC       A
        RLC       A
        ANL       A,#0xfc
        MOV       R4,A
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        ORL       A,R4
        MOVX      @DPTR,A
// 1513 
// 1514     // RELATIONSHIP
// 1515     *pBuf++ |= (uint8)(list->relation << 4);
        MOV       A,R6
        ADD       A,#0x16
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOVX      A,@DPTR
        SWAP      A
        ANL       A,#0xf0
        MOV       R4,A
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        ORL       A,R4
        MOVX      @DPTR,A
// 1516 
// 1517     // PERMITJOINING
// 1518     *pBuf++ = (uint8)(list->permit);
        MOV       A,R6
        ADD       A,#0x17
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        LCALL     ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_84:
        INC       DPTR
        MOVX      @DPTR,A
// 1519 
// 1520     // DEPTH
// 1521     *pBuf++ = list->depth;
        MOV       A,R6
        ADD       A,#0x18
        LCALL     ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_82:
        MOVX      @DPTR,A
// 1522 
// 1523     // LQI
// 1524     *pBuf++ = list->lqi;
        MOV       A,R6
        ADD       A,#0x19
        LCALL     ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_83:
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x6
        MOV       ?V0,A
        CLR       A
        ADDC      A,R3
        MOV       ?V1,A
// 1525 
// 1526     list++; // next list entry
        MOV       A,R6
        ADD       A,#0x1a
        MOV       R6,A
        JNC       ??ZDP_MgmtLqiRsp_5
        INC       R7
// 1527   }
??ZDP_MgmtLqiRsp_5:
        INC       ?V4
??ZDP_MgmtLqiRsp_3:
        MOV       A,?V4
        CLR       C
        SUBB      A,?V5
        JNC       $+5
        LJMP      ??ZDP_MgmtLqiRsp_4 & 0xFFFF
// 1528 
// 1529   FillAndSendBuffer( &TransSeq, dstAddr, Mgmt_Lqi_rsp, len, buf );
        LCALL     ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_230:
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x31
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       R1,?V6
        MOV       R4,?V8
        MOV       R5,?V9
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_271:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        LCALL     ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_232:
        MOV       A,#0x1
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       R7,#0xb
        LJMP      ?BANKED_LEAVE_XDATA
// 1530 }
          CFI EndBlock cfiBlock408

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine63:
          CFI Block cfiCond409 Using cfiCommon0
          CFI Function ZDP_UserDescRsp
          CFI Conditional ??CrossCallReturnLabel_89
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond410 Using cfiCommon0
          CFI (cfiCond410) Function ZDP_MgmtLqiRsp
          CFI (cfiCond410) Conditional ??CrossCallReturnLabel_90
          CFI (cfiCond410) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond410) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond410) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond410) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond410) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond410) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond410) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond410) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond410) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond410) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond410) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond410) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond410) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond410) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond410) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond410) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond410) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond410) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond410) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond410) CFA_SP SP+-2
          CFI (cfiCond410) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker411 Using cfiCommon1
          CFI (cfiPicker411) NoFunction
          CFI (cfiPicker411) Picker
        MOVX      A,@DPTR
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        RET
          CFI EndBlock cfiCond409
          CFI EndBlock cfiCond410
          CFI EndBlock cfiPicker411

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine59:
          CFI Block cfiCond412 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_82
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond413 Using cfiCommon0
          CFI (cfiCond413) Function ZDP_MgmtLqiRsp
          CFI (cfiCond413) Conditional ??CrossCallReturnLabel_83
          CFI (cfiCond413) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond413) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond413) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond413) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond413) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond413) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond413) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond413) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond413) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond413) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond413) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond413) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond413) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond413) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond413) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond413) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond413) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond413) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond413) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond413) CFA_SP SP+-2
          CFI (cfiCond413) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker414 Using cfiCommon1
          CFI (cfiPicker414) NoFunction
          CFI (cfiPicker414) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        LCALL     ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_131:
        INC       DPTR
        RET
          CFI EndBlock cfiCond412
          CFI EndBlock cfiCond413
          CFI EndBlock cfiPicker414

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine32:
          CFI Block cfiCond415 Using cfiCommon0
          CFI Function ZDP_UserDescSet
          CFI Conditional ??CrossCallReturnLabel_39
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond416 Using cfiCommon0
          CFI (cfiCond416) Function ZDP_MgmtLqiRsp
          CFI (cfiCond416) Conditional ??CrossCallReturnLabel_40
          CFI (cfiCond416) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond416) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond416) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond416) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond416) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond416) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond416) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond416) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond416) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond416) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond416) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond416) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond416) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond416) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond416) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond416) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond416) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond416) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond416) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond416) CFA_SP SP+-2
          CFI (cfiCond416) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker417 Using cfiCommon1
          CFI (cfiPicker417) NoFunction
          CFI (cfiPicker417) Picker
        INC       DPTR
        LCALL     ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_145:
        INC       DPTR
        RET
          CFI EndBlock cfiCond415
          CFI EndBlock cfiCond416
          CFI EndBlock cfiPicker417

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine97:
          CFI Block cfiCond418 Using cfiCommon0
          CFI Function ZDP_BindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_144
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond419 Using cfiCommon0
          CFI (cfiCond419) Function ZDP_UserDescSet
          CFI (cfiCond419) Conditional ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_39
          CFI (cfiCond419) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond419) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond419) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond419) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond419) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond419) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond419) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond419) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond419) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond419) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond419) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond419) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond419) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond419) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond419) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond419) CFA_SP SP+-4
          CFI (cfiCond419) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond420 Using cfiCommon0
          CFI (cfiCond420) Function ZDP_MgmtLqiRsp
          CFI (cfiCond420) Conditional ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_40
          CFI (cfiCond420) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond420) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond420) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond420) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond420) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond420) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond420) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond420) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond420) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond420) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond420) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond420) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond420) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond420) CFA_SP SP+-4
          CFI (cfiCond420) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker421 Using cfiCommon1
          CFI (cfiPicker421) NoFunction
          CFI (cfiPicker421) Picker
        MOVX      @DPTR,A
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        RET
          CFI EndBlock cfiCond418
          CFI EndBlock cfiCond419
          CFI EndBlock cfiCond420
          CFI EndBlock cfiPicker421

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine24:
          CFI Block cfiCond422 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_232
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond423 Using cfiCommon0
          CFI (cfiCond423) Function ZDP_MgmtBindRsp
          CFI (cfiCond423) Conditional ??CrossCallReturnLabel_233
          CFI (cfiCond423) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond423) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond423) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond423) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond423) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond423) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond423) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond423) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond423) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond423) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond423) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond423) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond423) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond423) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond423) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond423) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond423) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond423) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond423) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond423) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond423) CFA_SP SP+-2
          CFI (cfiCond423) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker424 Using cfiCommon1
          CFI (cfiPicker424) NoFunction
          CFI (cfiPicker424) Picker
        MOV       A,R1
        MOV       R6,A
        ; Setup parameters for call to function osal_mem_free
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V2
        MOV       R3,?V3
          CFI EndBlock cfiCond422
          CFI EndBlock cfiCond423
          CFI EndBlock cfiPicker424
        REQUIRE ??Subroutine132_0
        ; // Fall through to label ??Subroutine132_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine132_0:
          CFI Block cfiCond425 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_234
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond426 Using cfiCommon0
          CFI (cfiCond426) Function ZDP_MgmtLqiRsp
          CFI (cfiCond426) Conditional ??CrossCallReturnLabel_232
          CFI (cfiCond426) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond426) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond426) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond426) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond426) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond426) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond426) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond426) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond426) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond426) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond426) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond426) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond426) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond426) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond426) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond426) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond426) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond426) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond426) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond426) CFA_SP SP+-2
          CFI (cfiCond426) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond427 Using cfiCommon0
          CFI (cfiCond427) Function ZDP_MgmtBindRsp
          CFI (cfiCond427) Conditional ??CrossCallReturnLabel_233
          CFI (cfiCond427) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond427) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond427) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond427) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond427) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond427) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond427) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond427) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond427) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond427) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond427) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond427) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond427) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond427) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond427) CFA_SP SP+-2
          CFI (cfiCond427) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker428 Using cfiCommon1
          CFI (cfiPicker428) NoFunction
          CFI (cfiPicker428) Picker
        LCALL     ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_235:
        MOV       A,R6
        MOV       R1,A
        RET
          CFI EndBlock cfiCond425
          CFI EndBlock cfiCond426
          CFI EndBlock cfiCond427
          CFI EndBlock cfiPicker428
// 1531 
// 1532 /*********************************************************************
// 1533  * @fn          ZDP_MgmtRtgRsp
// 1534  *
// 1535  * @brief       This builds and send a Mgmt_Rtg_rsp message. This
// 1536  *              function sends a unicast message.
// 1537  *
// 1538  * @param       dstAddr - destination address of the message
// 1539  * @param       Status - message status (ZDP_SUCCESS or other)
// 1540  * @param       RoutingTableEntries - Total number of entries
// 1541  * @param       StartIndex - Starting index within the reporting list
// 1542  * @param       RoutingTableListCount - number of entries included
// 1543  *                                      in this message
// 1544  * @param       RoutingTableList - List of Routing Table entries
// 1545  * @param       SecurityEnable - true to enable security for this message
// 1546  *
// 1547  * @return      ZStatus_t
// 1548  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1549 ZStatus_t ZDP_MgmtRtgRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtRtgRsp:
          CFI Block cfiBlock429 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
        CODE
// 1550                             byte Status,
// 1551                             byte RoutingTableEntries,
// 1552                             byte StartIndex,
// 1553                             byte RoutingListCount,
// 1554                             rtgItem_t *RoutingTableList,
// 1555                             byte SecurityEnable )
// 1556 {
        FUNCALL ZDP_MgmtRtgRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtRtgRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtRtgRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV       A,#-0x12
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       ?V1,R4
        MOV       ?V0,R5
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V5,A
// 1557   uint8 *buf;
// 1558   uint8 *pBuf;
// 1559   // Status + RoutingTableEntries + StartIndex + RoutingListCount.
// 1560   byte len = 1 + 1 + 1 + 1;
// 1561   byte x;
// 1562 
// 1563   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1564 
// 1565   // Add an array for Routing List data
// 1566   len += (RoutingListCount * ZDP_ROUTINGENTRY_SIZE);
        MOV       B,#0x5
        MUL       AB
        ADD       A,#0x4
        MOV       ?V4,A
// 1567 
// 1568   buf = osal_mem_alloc( (short)(len+1) );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_94:
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       R6,?V6
        MOV       R7,?V7
// 1569   if ( buf == NULL )
        MOV       A,R2
        ORL       A,R7
        JNZ       ??ZDP_MgmtRtgRsp_0
// 1570   {
// 1571     return afStatus_MEM_FAIL;
        MOV       R1,#0x10
        LJMP      ??ZDP_MgmtRtgRsp_1 & 0xFFFF
// 1572   }
// 1573 
// 1574   pBuf = buf+1;
??ZDP_MgmtRtgRsp_0:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
// 1575 
// 1576   *pBuf++ = Status;
        MOV       A,?V1
        MOVX      @DPTR,A
// 1577   *pBuf++ = RoutingTableEntries;
        INC       DPTR
        MOV       A,?V0
        MOVX      @DPTR,A
// 1578   *pBuf++ = StartIndex;
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine133_0 & 0xFFFF
??CrossCallReturnLabel_239:
        LCALL     ??Subroutine118_0 & 0xFFFF
// 1579   *pBuf++ = RoutingListCount;
??CrossCallReturnLabel_169:
        MOV       A,?V5
        MOVX      @DPTR,A
        MOV       A,R0
        ADD       A,#0x4
        MOV       R0,A
        JNC       ??ZDP_MgmtRtgRsp_2
        INC       R1
// 1580 
// 1581   for ( x = 0; x < RoutingListCount; x++ )
??ZDP_MgmtRtgRsp_2:
        MOV       R4,#0x0
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_196:
        SJMP      ??ZDP_MgmtRtgRsp_3
// 1582   {
// 1583     *pBuf++ = LO_UINT16( RoutingTableList->dstAddress );  // Destination Address
??ZDP_MgmtRtgRsp_4:
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ??Subroutine121_0 & 0xFFFF
// 1584     *pBuf++ = HI_UINT16( RoutingTableList->dstAddress );
??CrossCallReturnLabel_180:
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_241:
        INC       DPTR
        LCALL     ?Subroutine29 & 0xFFFF
// 1585     *pBuf++ = RoutingTableList->status;
??CrossCallReturnLabel_31:
        LCALL     ?Subroutine55 & 0xFFFF
// 1586     *pBuf++ = LO_UINT16( RoutingTableList->nextHopAddress );  // Next hop
??CrossCallReturnLabel_79:
        ADD       A,#0x2
        MOV       ?V6,A
        CLR       A
        ADDC      A,R3
        MOV       ?V7,A
        MOV       DPL,?V6
        LCALL     ?Subroutine57 & 0xFFFF
??CrossCallReturnLabel_244:
        INC       DPTR
        MOVX      @DPTR,A
// 1587     *pBuf++ = HI_UINT16( RoutingTableList->nextHopAddress );
        MOV       DPL,?V6
        MOV       DPH,?V7
        INC       DPTR
        LCALL     ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_81:
        MOVX      @DPTR,A
        MOV       A,R0
        ADD       A,#0x5
        MOV       R0,A
        JNC       ??ZDP_MgmtRtgRsp_5
        INC       R1
// 1588     RoutingTableList++;    // Move to next list entry
??ZDP_MgmtRtgRsp_5:
        MOV       A,R2
        ADD       A,#0x7
        MOV       R2,A
        JNC       ??ZDP_MgmtRtgRsp_6
        INC       R3
// 1589   }
??ZDP_MgmtRtgRsp_6:
        INC       R4
??ZDP_MgmtRtgRsp_3:
        MOV       A,R4
        CLR       C
        SUBB      A,?V5
        JC        ??ZDP_MgmtRtgRsp_4
// 1590 
// 1591   FillAndSendBuffer( &TransSeq, dstAddr, Mgmt_Rtg_rsp, len, buf );
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine130_0 & 0xFFFF
??CrossCallReturnLabel_228:
        ; Setup parameters for call to function fillAndSend
        MOV       ?V6,#0x32
        MOV       ?V7,#-0x80
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       R1,?V4
        MOV       R4,?V2
        MOV       R5,?V3
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_272:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R1
        MOV       ?V2,A
        ; Setup parameters for call to function osal_mem_free
        LCALL     ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_110:
        MOV       R1,?V2
??ZDP_MgmtRtgRsp_1:
        LJMP      ?Subroutine4 & 0xFFFF
// 1592 }
          CFI EndBlock cfiBlock429

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine66:
          CFI Block cfiCond430 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_93
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond431 Using cfiCommon0
          CFI (cfiCond431) Function ZDP_MgmtRtgRsp
          CFI (cfiCond431) Conditional ??CrossCallReturnLabel_94
          CFI (cfiCond431) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond431) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond431) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond431) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond431) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond431) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond431) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond431) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond431) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond431) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond431) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond431) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond431) CFA_SP SP+-2
          CFI (cfiCond431) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond432 Using cfiCommon0
          CFI (cfiCond432) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond432) Conditional ??CrossCallReturnLabel_95
          CFI (cfiCond432) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond432) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond432) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond432) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond432) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond432) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond432) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond432) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond432) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond432) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond432) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond432) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond432) CFA_SP SP+-2
          CFI (cfiCond432) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker433 Using cfiCommon1
          CFI (cfiPicker433) NoFunction
          CFI (cfiPicker433) Picker
        LCALL     ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_146:
        RET
          CFI EndBlock cfiCond430
          CFI EndBlock cfiCond431
          CFI EndBlock cfiCond432
          CFI EndBlock cfiPicker433

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine98:
          CFI Block cfiCond434 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_146, ??CrossCallReturnLabel_93
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond435 Using cfiCommon0
          CFI (cfiCond435) Function ZDP_MgmtRtgRsp
          CFI (cfiCond435) Conditional ??CrossCallReturnLabel_146, ??CrossCallReturnLabel_94
          CFI (cfiCond435) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond435) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond435) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond435) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond435) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond435) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond435) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond435) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond435) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond435) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond435) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond435) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond435) CFA_SP SP+-4
          CFI (cfiCond435) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond436 Using cfiCommon0
          CFI (cfiCond436) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond436) Conditional ??CrossCallReturnLabel_146, ??CrossCallReturnLabel_95
          CFI (cfiCond436) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond436) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond436) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond436) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond436) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond436) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond436) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond436) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond436) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond436) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond436) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond436) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond436) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond436) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond436) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond436) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond436) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond436) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond436) CFA_SP SP+-4
          CFI (cfiCond436) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond437 Using cfiCommon0
          CFI (cfiCond437) Function ZDP_MgmtLqiRsp
          CFI (cfiCond437) Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_91
          CFI (cfiCond437) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond437) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond437) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond437) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond437) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond437) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond437) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond437) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond437) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond437) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond437) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond437) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond437) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond437) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond437) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond437) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond437) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond437) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond437) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond437) CFA_SP SP+-4
          CFI (cfiCond437) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond438 Using cfiCommon0
          CFI (cfiCond438) Function ZDP_MgmtBindRsp
          CFI (cfiCond438) Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_92
          CFI (cfiCond438) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond438) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond438) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond438) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond438) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond438) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond438) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond438) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond438) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond438) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond438) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond438) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond438) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond438) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond438) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond438) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond438) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond438) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond438) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond438) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond438) CFA_SP SP+-4
          CFI (cfiCond438) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker439 Using cfiCommon1
          CFI (cfiPicker439) NoFunction
          CFI (cfiPicker439) Picker
        ADD       A,#0x1
        MOV       R2,A
        CLR       A
        ADDC      A,#0x0
        MOV       R3,A
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        RET
          CFI EndBlock cfiCond434
          CFI EndBlock cfiCond435
          CFI EndBlock cfiCond436
          CFI EndBlock cfiCond437
          CFI EndBlock cfiCond438
          CFI EndBlock cfiPicker439

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine58:
          CFI Block cfiCond440 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_240
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond441 Using cfiCommon0
          CFI (cfiCond441) Function ZDP_MgmtRtgRsp
          CFI (cfiCond441) Conditional ??CrossCallReturnLabel_241
          CFI (cfiCond441) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond441) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond441) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond441) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond441) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond441) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond441) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond441) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond441) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond441) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond441) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond441) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond441) CFA_SP SP+-2
          CFI (cfiCond441) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker442 Using cfiCommon1
          CFI (cfiPicker442) NoFunction
          CFI (cfiPicker442) Picker
        INC       DPTR
          CFI EndBlock cfiCond440
          CFI EndBlock cfiCond441
          CFI EndBlock cfiPicker442
        REQUIRE ??Subroutine133_0
        ; // Fall through to label ??Subroutine133_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine133_0:
          CFI Block cfiCond443 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_237
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond444 Using cfiCommon0
          CFI (cfiCond444) Function ZDP_SimpleDescMsg
          CFI (cfiCond444) Conditional ??CrossCallReturnLabel_238
          CFI (cfiCond444) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond444) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond444) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond444) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond444) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond444) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond444) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond444) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond444) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond444) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond444) CFA_SP SP+-2
          CFI (cfiCond444) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond445 Using cfiCommon0
          CFI (cfiCond445) Function ZDP_MgmtRtgRsp
          CFI (cfiCond445) Conditional ??CrossCallReturnLabel_239
          CFI (cfiCond445) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond445) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond445) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond445) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond445) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond445) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond445) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond445) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond445) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond445) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond445) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond445) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond445) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond445) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond445) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond445) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond445) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond445) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond445) CFA_SP SP+-2
          CFI (cfiCond445) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond446 Using cfiCommon0
          CFI (cfiCond446) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond446) Conditional ??CrossCallReturnLabel_240
          CFI (cfiCond446) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond446) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond446) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond446) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond446) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond446) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond446) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond446) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond446) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond446) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond446) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond446) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond446) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond446) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond446) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond446) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond446) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond446) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond446) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond446) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond446) CFA_SP SP+-2
          CFI (cfiCond446) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond447 Using cfiCommon0
          CFI (cfiCond447) Function ZDP_MgmtRtgRsp
          CFI (cfiCond447) Conditional ??CrossCallReturnLabel_241
          CFI (cfiCond447) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond447) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond447) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond447) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond447) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond447) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond447) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond447) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond447) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond447) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond447) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond447) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond447) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond447) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond447) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond447) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond447) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond447) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond447) CFA_SP SP+-2
          CFI (cfiCond447) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker448 Using cfiCommon1
          CFI (cfiPicker448) NoFunction
          CFI (cfiPicker448) Picker
        LCALL     ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_250:
        RET
          CFI EndBlock cfiCond443
          CFI EndBlock cfiCond444
          CFI EndBlock cfiCond445
          CFI EndBlock cfiCond446
          CFI EndBlock cfiCond447
          CFI EndBlock cfiPicker448

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine108:
          CFI Block cfiCond449 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_2
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond450 Using cfiCommon0
          CFI (cfiCond450) Function ZDP_MatchDescReq
          CFI (cfiCond450) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_3
          CFI (cfiCond450) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond450) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond450) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond450) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond450) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond450) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond450) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond450) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond450) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond450) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond450) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond450) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond450) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond450) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond450) CFA_SP SP+-6
          CFI (cfiCond450) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond451 Using cfiCommon0
          CFI (cfiCond451) Function ZDP_SimpleDescMsg
          CFI (cfiCond451) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_181
          CFI (cfiCond451) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond451) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond451) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond451) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond451) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond451) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond451) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond451) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond451) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond451) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond451) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond451) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond451) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond451) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond451) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond451) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond451) CFA_SP SP+-6
          CFI (cfiCond451) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond452 Using cfiCommon0
          CFI (cfiCond452) Function ZDP_MgmtLqiRsp
          CFI (cfiCond452) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_182
          CFI (cfiCond452) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond452) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond452) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond452) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond452) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond452) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond452) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond452) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond452) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond452) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond452) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond452) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond452) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond452) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond452) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond452) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond452) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond452) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond452) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond452) CFA_SP SP+-6
          CFI (cfiCond452) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond453 Using cfiCommon0
          CFI (cfiCond453) Function ZDP_EPRsp
          CFI (cfiCond453) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_179
          CFI (cfiCond453) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond453) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond453) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond453) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond453) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond453) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond453) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond453) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond453) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond453) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond453) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond453) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond453) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond453) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond453) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond453) CFA_SP SP+-6
          CFI (cfiCond453) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond454 Using cfiCommon0
          CFI (cfiCond454) Function ZDP_MgmtRtgRsp
          CFI (cfiCond454) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_180
          CFI (cfiCond454) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond454) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond454) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond454) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond454) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond454) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond454) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond454) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond454) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond454) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond454) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond454) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond454) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond454) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond454) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond454) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond454) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond454) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond454) CFA_SP SP+-6
          CFI (cfiCond454) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond455 Using cfiCommon0
          CFI (cfiCond455) Function ZDP_SimpleDescMsg
          CFI (cfiCond455) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_0
          CFI (cfiCond455) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond455) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond455) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond455) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond455) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond455) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond455) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond455) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond455) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond455) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond455) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond455) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond455) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond455) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond455) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond455) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond455) CFA_SP SP+-6
          CFI (cfiCond455) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond456 Using cfiCommon0
          CFI (cfiCond456) Function ZDP_SimpleDescMsg
          CFI (cfiCond456) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_1
          CFI (cfiCond456) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond456) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond456) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond456) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond456) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond456) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond456) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond456) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond456) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond456) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond456) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond456) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond456) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond456) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond456) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond456) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond456) CFA_SP SP+-6
          CFI (cfiCond456) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond457 Using cfiCommon0
          CFI (cfiCond457) Function ZDP_MatchDescReq
          CFI (cfiCond457) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_127, ??CrossCallReturnLabel_2
          CFI (cfiCond457) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond457) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond457) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond457) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond457) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond457) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond457) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond457) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond457) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond457) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond457) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond457) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond457) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond457) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond457) CFA_SP SP+-6
          CFI (cfiCond457) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond458 Using cfiCommon0
          CFI (cfiCond458) Function ZDP_MatchDescReq
          CFI (cfiCond458) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_127, ??CrossCallReturnLabel_3
          CFI (cfiCond458) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond458) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond458) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond458) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond458) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond458) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond458) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond458) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond458) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond458) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond458) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond458) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond458) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond458) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond458) CFA_SP SP+-6
          CFI (cfiCond458) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond459 Using cfiCommon0
          CFI (cfiCond459) Function ZDP_SimpleDescMsg
          CFI (cfiCond459) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_126, ??CrossCallReturnLabel_0
          CFI (cfiCond459) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond459) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond459) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond459) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond459) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond459) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond459) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond459) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond459) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond459) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond459) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond459) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond459) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond459) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond459) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond459) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond459) CFA_SP SP+-6
          CFI (cfiCond459) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond460 Using cfiCommon0
          CFI (cfiCond460) Function ZDP_SimpleDescMsg
          CFI (cfiCond460) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_126, ??CrossCallReturnLabel_1
          CFI (cfiCond460) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond460) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond460) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond460) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond460) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond460) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond460) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond460) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond460) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond460) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond460) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond460) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond460) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond460) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond460) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond460) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond460) CFA_SP SP+-6
          CFI (cfiCond460) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond461 Using cfiCommon0
          CFI (cfiCond461) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond461) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_240
          CFI (cfiCond461) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond461) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond461) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond461) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond461) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond461) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond461) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond461) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond461) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond461) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond461) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond461) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond461) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond461) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond461) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond461) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond461) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond461) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond461) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond461) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond461) CFA_SP SP+-4
          CFI (cfiCond461) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond462 Using cfiCommon0
          CFI (cfiCond462) Function ZDP_MgmtRtgRsp
          CFI (cfiCond462) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_241
          CFI (cfiCond462) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond462) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond462) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond462) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond462) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond462) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond462) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond462) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond462) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond462) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond462) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond462) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond462) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond462) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond462) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond462) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond462) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond462) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond462) CFA_SP SP+-4
          CFI (cfiCond462) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond463 Using cfiCommon0
          CFI (cfiCond463) Function ZDP_SimpleDescMsg
          CFI (cfiCond463) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_237
          CFI (cfiCond463) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond463) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond463) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond463) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond463) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond463) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond463) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond463) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond463) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond463) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond463) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond463) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond463) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond463) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond463) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond463) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond463) CFA_SP SP+-4
          CFI (cfiCond463) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond464 Using cfiCommon0
          CFI (cfiCond464) Function ZDP_SimpleDescMsg
          CFI (cfiCond464) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_238
          CFI (cfiCond464) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond464) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond464) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond464) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond464) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond464) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond464) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond464) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond464) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond464) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond464) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond464) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond464) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond464) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond464) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond464) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond464) CFA_SP SP+-4
          CFI (cfiCond464) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond465 Using cfiCommon0
          CFI (cfiCond465) Function ZDP_MgmtRtgRsp
          CFI (cfiCond465) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_239
          CFI (cfiCond465) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond465) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond465) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond465) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond465) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond465) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond465) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond465) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond465) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond465) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond465) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond465) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond465) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond465) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond465) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond465) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond465) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond465) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond465) CFA_SP SP+-4
          CFI (cfiCond465) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond466 Using cfiCommon0
          CFI (cfiCond466) Function ZDP_SimpleDescMsg
          CFI (cfiCond466) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_243
          CFI (cfiCond466) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond466) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond466) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond466) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond466) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond466) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond466) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond466) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond466) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond466) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond466) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond466) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond466) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond466) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond466) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond466) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond466) CFA_SP SP+-6
          CFI (cfiCond466) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond467 Using cfiCommon0
          CFI (cfiCond467) Function ZDP_MgmtRtgRsp
          CFI (cfiCond467) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_244
          CFI (cfiCond467) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond467) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond467) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond467) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond467) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond467) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond467) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond467) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond467) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond467) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond467) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond467) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond467) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond467) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond467) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond467) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond467) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond467) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond467) CFA_SP SP+-6
          CFI (cfiCond467) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond468 Using cfiCommon0
          CFI (cfiCond468) Function ZDP_SimpleDescMsg
          CFI (cfiCond468) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_242
          CFI (cfiCond468) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond468) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond468) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond468) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond468) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond468) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond468) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond468) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond468) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond468) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond468) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond468) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond468) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond468) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond468) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond468) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond468) CFA_SP SP+-6
          CFI (cfiCond468) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond469 Using cfiCommon0
          CFI (cfiCond469) Function ZDP_SimpleDescMsg
          CFI (cfiCond469) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_4
          CFI (cfiCond469) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond469) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond469) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond469) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond469) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond469) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond469) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond469) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond469) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond469) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond469) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond469) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond469) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond469) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond469) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond469) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond469) CFA_SP SP+-8
          CFI (cfiCond469) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond470 Using cfiCommon0
          CFI (cfiCond470) Function ZDP_SimpleDescMsg
          CFI (cfiCond470) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_5
          CFI (cfiCond470) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond470) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond470) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond470) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond470) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond470) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond470) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond470) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond470) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond470) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond470) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond470) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond470) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond470) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond470) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond470) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond470) CFA_SP SP+-8
          CFI (cfiCond470) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond471 Using cfiCommon0
          CFI (cfiCond471) Function ZDP_SimpleDescMsg
          CFI (cfiCond471) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_80
          CFI (cfiCond471) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond471) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond471) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond471) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond471) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond471) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond471) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond471) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond471) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond471) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond471) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond471) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond471) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond471) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond471) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond471) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond471) CFA_SP SP+-8
          CFI (cfiCond471) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond472 Using cfiCommon0
          CFI (cfiCond472) Function ZDP_MgmtRtgRsp
          CFI (cfiCond472) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_81
          CFI (cfiCond472) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond472) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond472) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond472) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond472) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond472) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond472) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond472) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond472) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond472) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond472) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond472) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond472) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond472) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond472) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond472) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond472) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond472) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond472) CFA_SP SP+-8
          CFI (cfiCond472) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond473 Using cfiCommon0
          CFI (cfiCond473) Function ZDP_SimpleDescMsg
          CFI (cfiCond473) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_78
          CFI (cfiCond473) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond473) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond473) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond473) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond473) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond473) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond473) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond473) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond473) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond473) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond473) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond473) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond473) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond473) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond473) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond473) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond473) CFA_SP SP+-6
          CFI (cfiCond473) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond474 Using cfiCommon0
          CFI (cfiCond474) Function ZDP_MgmtRtgRsp
          CFI (cfiCond474) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_79
          CFI (cfiCond474) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond474) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond474) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond474) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond474) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond474) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond474) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond474) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond474) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond474) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond474) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond474) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond474) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond474) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond474) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond474) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond474) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond474) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond474) CFA_SP SP+-6
          CFI (cfiCond474) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker475 Using cfiCommon1
          CFI (cfiPicker475) NoFunction
          CFI (cfiPicker475) Picker
        MOVX      A,@DPTR
        MOV       DPL,R0
        MOV       DPH,R1
        RET
          CFI EndBlock cfiCond449
          CFI EndBlock cfiCond450
          CFI EndBlock cfiCond451
          CFI EndBlock cfiCond452
          CFI EndBlock cfiCond453
          CFI EndBlock cfiCond454
          CFI EndBlock cfiCond455
          CFI EndBlock cfiCond456
          CFI EndBlock cfiCond457
          CFI EndBlock cfiCond458
          CFI EndBlock cfiCond459
          CFI EndBlock cfiCond460
          CFI EndBlock cfiCond461
          CFI EndBlock cfiCond462
          CFI EndBlock cfiCond463
          CFI EndBlock cfiCond464
          CFI EndBlock cfiCond465
          CFI EndBlock cfiCond466
          CFI EndBlock cfiCond467
          CFI EndBlock cfiCond468
          CFI EndBlock cfiCond469
          CFI EndBlock cfiCond470
          CFI EndBlock cfiCond471
          CFI EndBlock cfiCond472
          CFI EndBlock cfiCond473
          CFI EndBlock cfiCond474
          CFI EndBlock cfiPicker475

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine57:
          CFI Block cfiCond476 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_243
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond477 Using cfiCommon0
          CFI (cfiCond477) Function ZDP_MgmtRtgRsp
          CFI (cfiCond477) Conditional ??CrossCallReturnLabel_244
          CFI (cfiCond477) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond477) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond477) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond477) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond477) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond477) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond477) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond477) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond477) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond477) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond477) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond477) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond477) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond477) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond477) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond477) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond477) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond477) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond477) CFA_SP SP+-2
          CFI (cfiCond477) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker478 Using cfiCommon1
          CFI (cfiPicker478) NoFunction
          CFI (cfiPicker478) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond476
          CFI EndBlock cfiCond477
          CFI EndBlock cfiPicker478
        REQUIRE ??Subroutine134_0
        ; // Fall through to label ??Subroutine134_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine134_0:
          CFI Block cfiCond479 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_242
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond480 Using cfiCommon0
          CFI (cfiCond480) Function ZDP_SimpleDescMsg
          CFI (cfiCond480) Conditional ??CrossCallReturnLabel_243
          CFI (cfiCond480) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond480) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond480) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond480) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond480) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond480) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond480) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond480) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond480) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond480) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond480) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond480) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond480) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond480) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond480) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond480) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond480) CFA_SP SP+-2
          CFI (cfiCond480) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond481 Using cfiCommon0
          CFI (cfiCond481) Function ZDP_MgmtRtgRsp
          CFI (cfiCond481) Conditional ??CrossCallReturnLabel_244
          CFI (cfiCond481) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond481) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond481) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond481) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond481) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond481) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond481) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond481) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond481) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond481) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond481) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond481) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond481) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond481) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond481) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond481) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond481) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond481) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond481) CFA_SP SP+-2
          CFI (cfiCond481) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker482 Using cfiCommon1
          CFI (cfiPicker482) NoFunction
          CFI (cfiPicker482) Picker
        LCALL     ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_247:
        RET
          CFI EndBlock cfiCond479
          CFI EndBlock cfiCond480
          CFI EndBlock cfiCond481
          CFI EndBlock cfiPicker482

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine103:
          CFI Block cfiCond483 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_243
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond484 Using cfiCommon0
          CFI (cfiCond484) Function ZDP_MgmtRtgRsp
          CFI (cfiCond484) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_244
          CFI (cfiCond484) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond484) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond484) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond484) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond484) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond484) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond484) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond484) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond484) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond484) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond484) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond484) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond484) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond484) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond484) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond484) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond484) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond484) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond484) CFA_SP SP+-4
          CFI (cfiCond484) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond485 Using cfiCommon0
          CFI (cfiCond485) Function ZDP_SimpleDescMsg
          CFI (cfiCond485) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_242
          CFI (cfiCond485) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond485) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond485) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond485) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond485) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond485) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond485) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond485) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond485) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond485) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond485) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond485) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond485) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond485) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond485) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond485) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond485) CFA_SP SP+-4
          CFI (cfiCond485) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond486 Using cfiCommon0
          CFI (cfiCond486) Function ZDP_SimpleDescMsg
          CFI (cfiCond486) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_4
          CFI (cfiCond486) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond486) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond486) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond486) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond486) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond486) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond486) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond486) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond486) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond486) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond486) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond486) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond486) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond486) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond486) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond486) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond486) CFA_SP SP+-6
          CFI (cfiCond486) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond487 Using cfiCommon0
          CFI (cfiCond487) Function ZDP_SimpleDescMsg
          CFI (cfiCond487) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_5
          CFI (cfiCond487) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond487) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond487) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond487) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond487) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond487) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond487) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond487) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond487) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond487) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond487) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond487) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond487) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond487) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond487) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond487) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond487) CFA_SP SP+-6
          CFI (cfiCond487) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond488 Using cfiCommon0
          CFI (cfiCond488) Function ZDP_SimpleDescMsg
          CFI (cfiCond488) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_80
          CFI (cfiCond488) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond488) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond488) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond488) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond488) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond488) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond488) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond488) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond488) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond488) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond488) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond488) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond488) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond488) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond488) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond488) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond488) CFA_SP SP+-6
          CFI (cfiCond488) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond489 Using cfiCommon0
          CFI (cfiCond489) Function ZDP_MgmtRtgRsp
          CFI (cfiCond489) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_81
          CFI (cfiCond489) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond489) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond489) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond489) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond489) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond489) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond489) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond489) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond489) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond489) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond489) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond489) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond489) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond489) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond489) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond489) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond489) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond489) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond489) CFA_SP SP+-6
          CFI (cfiCond489) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond490 Using cfiCommon0
          CFI (cfiCond490) Function ZDP_SimpleDescMsg
          CFI (cfiCond490) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_78
          CFI (cfiCond490) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond490) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond490) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond490) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond490) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond490) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond490) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond490) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond490) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond490) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond490) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond490) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond490) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond490) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond490) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond490) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond490) CFA_SP SP+-4
          CFI (cfiCond490) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond491 Using cfiCommon0
          CFI (cfiCond491) Function ZDP_MgmtRtgRsp
          CFI (cfiCond491) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_79
          CFI (cfiCond491) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond491) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond491) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond491) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond491) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond491) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond491) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond491) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond491) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond491) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond491) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond491) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond491) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond491) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond491) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond491) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond491) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond491) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond491) CFA_SP SP+-4
          CFI (cfiCond491) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker492 Using cfiCommon1
          CFI (cfiPicker492) NoFunction
          CFI (cfiPicker492) Picker
        LCALL     ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_251:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond483
          CFI EndBlock cfiCond484
          CFI EndBlock cfiCond485
          CFI EndBlock cfiCond486
          CFI EndBlock cfiCond487
          CFI EndBlock cfiCond488
          CFI EndBlock cfiCond489
          CFI EndBlock cfiCond490
          CFI EndBlock cfiCond491
          CFI EndBlock cfiPicker492

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine56:
          CFI Block cfiCond493 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_80
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond494 Using cfiCommon0
          CFI (cfiCond494) Function ZDP_MgmtRtgRsp
          CFI (cfiCond494) Conditional ??CrossCallReturnLabel_81
          CFI (cfiCond494) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond494) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond494) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond494) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond494) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond494) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond494) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond494) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond494) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond494) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond494) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond494) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond494) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond494) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond494) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond494) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond494) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond494) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond494) CFA_SP SP+-2
          CFI (cfiCond494) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker495 Using cfiCommon1
          CFI (cfiPicker495) NoFunction
          CFI (cfiPicker495) Picker
        LCALL     ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_129:
        RET
          CFI EndBlock cfiCond493
          CFI EndBlock cfiCond494
          CFI EndBlock cfiPicker495

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine86:
          CFI Block cfiCond496 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond497 Using cfiCommon0
          CFI (cfiCond497) Function ZDP_SimpleDescMsg
          CFI (cfiCond497) Conditional ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_5
          CFI (cfiCond497) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond497) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond497) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond497) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond497) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond497) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond497) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond497) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond497) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond497) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond497) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond497) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond497) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond497) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond497) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond497) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond497) CFA_SP SP+-4
          CFI (cfiCond497) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond498 Using cfiCommon0
          CFI (cfiCond498) Function ZDP_SimpleDescMsg
          CFI (cfiCond498) Conditional ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_80
          CFI (cfiCond498) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond498) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond498) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond498) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond498) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond498) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond498) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond498) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond498) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond498) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond498) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond498) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond498) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond498) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond498) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond498) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond498) CFA_SP SP+-4
          CFI (cfiCond498) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond499 Using cfiCommon0
          CFI (cfiCond499) Function ZDP_MgmtRtgRsp
          CFI (cfiCond499) Conditional ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_81
          CFI (cfiCond499) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond499) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond499) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond499) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond499) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond499) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond499) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond499) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond499) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond499) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond499) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond499) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond499) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond499) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond499) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond499) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond499) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond499) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond499) CFA_SP SP+-4
          CFI (cfiCond499) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker500 Using cfiCommon1
          CFI (cfiPicker500) NoFunction
          CFI (cfiPicker500) Picker
        LCALL     ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_246:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond496
          CFI EndBlock cfiCond497
          CFI EndBlock cfiCond498
          CFI EndBlock cfiCond499
          CFI EndBlock cfiPicker500

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine55:
          CFI Block cfiCond501 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_78
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond502 Using cfiCommon0
          CFI (cfiCond502) Function ZDP_MgmtRtgRsp
          CFI (cfiCond502) Conditional ??CrossCallReturnLabel_79
          CFI (cfiCond502) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond502) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond502) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond502) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond502) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond502) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond502) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond502) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond502) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond502) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond502) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond502) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond502) CFA_SP SP+-2
          CFI (cfiCond502) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker503 Using cfiCommon1
          CFI (cfiPicker503) NoFunction
          CFI (cfiPicker503) Picker
        LCALL     ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_245:
        MOVX      @DPTR,A
        MOV       A,R2
        RET
          CFI EndBlock cfiCond501
          CFI EndBlock cfiCond502
          CFI EndBlock cfiPicker503
// 1593 
// 1594 /*********************************************************************
// 1595  * @fn          ZDP_MgmtBindRsp
// 1596  *
// 1597  * @brief       This builds and send a Mgmt_Bind_rsp message. This
// 1598  *              function sends a unicast message.
// 1599  *
// 1600  * @param       dstAddr - destination address of the message
// 1601  * @param       Status - message status (ZDP_SUCCESS or other)
// 1602  * @param       BindingTableEntries - Total number of entries
// 1603  * @param       StartIndex - Starting index within the reporting list
// 1604  * @param       BindingTableListCount - number of entries included
// 1605  *                                 in this message
// 1606  * @param       BindingTableList - List of Binding Table entries
// 1607  * @param       SecurityEnable - Security Options
// 1608  *
// 1609  * @return      ZStatus_t
// 1610  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1611 ZStatus_t ZDP_MgmtBindRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtBindRsp:
          CFI Block cfiBlock504 Using cfiCommon0
          CFI Function ZDP_MgmtBindRsp
        CODE
// 1612                             byte Status,
// 1613                             byte BindingTableEntries,
// 1614                             byte StartIndex,
// 1615                             byte BindingTableListCount,
// 1616                             apsBindingItem_t *BindingTableList,
// 1617                             byte SecurityEnable )
// 1618 {
        FUNCALL ZDP_MgmtBindRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtBindRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtBindRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV       A,#-0x14
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       ?V10,R2
        MOV       ?V11,R3
        MOV       ?V6,R4
        MOV       ?V5,R5
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V4,A
// 1619   uint8 *buf;
// 1620   uint8 *pBuf;
// 1621   uint8 maxLen; // maxLen is the maximum packet length to allocate enough memory space
// 1622   uint8 len;    // Actual length varies due to different addrMode
// 1623   uint8 x;
// 1624   byte extZdpBindEntrySize = ZDP_BINDINGENTRY_SIZE + 1 + 1; // One more byte for cluserID and DstAddrMode
// 1625   byte shortZdpBindEntrySize = ZDP_BINDINGENTRY_SIZE + 1 + 1 + 2 - 8 - 1; // clusterID + DstAddrMode + shortAddr - ExtAddr - DstEndpoint
// 1626 
// 1627   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1628 
// 1629   // Status + BindingTableEntries + StartIndex + BindingTableListCount.
// 1630   maxLen = 1 + 1 + 1 + 1;
// 1631   maxLen += (BindingTableListCount * extZdpBindEntrySize );  //max length
// 1632   buf = osal_mem_alloc( maxLen + 1 );  // +1 for transaction ID
        ; Setup parameters for call to function osal_mem_alloc
        MOV       B,#0x15
        MUL       AB
        ADD       A,#0x4
        LCALL     ?Subroutine65 & 0xFFFF
// 1633 
// 1634   if ( buf == NULL )
??CrossCallReturnLabel_92:
        JNZ       ??ZDP_MgmtBindRsp_0
// 1635   {
// 1636     return afStatus_MEM_FAIL;
        MOV       R1,#0x10
        LJMP      ??CrossCallReturnLabel_233 & 0xFFFF
// 1637   }
// 1638 
// 1639   pBuf = buf+1;
??ZDP_MgmtBindRsp_0:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        MOV       R2,DPL
        MOV       R3,DPH
// 1640 
// 1641   *pBuf++ = Status;
        MOV       A,?V6
        MOVX      @DPTR,A
// 1642   *pBuf++ = BindingTableEntries;
        INC       DPTR
        MOV       A,?V5
        MOVX      @DPTR,A
// 1643   *pBuf++ = StartIndex;
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_85:
        LCALL     ?Subroutine30 & 0xFFFF
// 1644   *pBuf++ = BindingTableListCount;
??CrossCallReturnLabel_33:
        MOV       A,?V4
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x4
        MOV       R2,A
        JNC       ??ZDP_MgmtBindRsp_1
        INC       R3
// 1645 
// 1646   // Initial length = Status + BindingTableEntries + StartIndex + BindingTableListCount.
// 1647   // length += ZDP_BINDINGENTRY_SIZE   -- Version 1.0
// 1648   //           extZdpBindEntrySize     -- Version 1.1 extended address mode
// 1649   //           shortZdpBindEntrySize   -- Version 1.1 group address mode
// 1650 
// 1651   len = 1 + 1 + 1 + 1;
??ZDP_MgmtBindRsp_1:
        MOV       ?V0,#0x4
// 1652   for ( x = 0; x < BindingTableListCount; x++ )
        MOV       ?V1,#0x0
        MOV       A,#0x17
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine142_0 & 0xFFFF
??CrossCallReturnLabel_289:
        SJMP      ??ZDP_MgmtBindRsp_2
// 1653   {
// 1654     pBuf = osal_cpyExtAddr( pBuf, BindingTableList->srcAddr );
// 1655     *pBuf++ = BindingTableList->srcEP;
// 1656 
// 1657     // Cluster ID
// 1658     *pBuf++ = LO_UINT16( BindingTableList->clusterID );
// 1659     *pBuf++ = HI_UINT16( BindingTableList->clusterID );
// 1660 
// 1661     *pBuf++ = BindingTableList->dstAddr.addrMode;
// 1662     if ( BindingTableList->dstAddr.addrMode == Addr64Bit )
// 1663     {
// 1664       len += extZdpBindEntrySize;
// 1665       pBuf = osal_cpyExtAddr( pBuf, BindingTableList->dstAddr.addr.extAddr );
// 1666       *pBuf++ = BindingTableList->dstEP;
// 1667     }
// 1668     else
// 1669     {
// 1670       len += shortZdpBindEntrySize;
??ZDP_MgmtBindRsp_3:
        MOV       A,#0xe
        ADD       A,?V0
        MOV       ?V0,A
// 1671       *pBuf++ = LO_UINT16( BindingTableList->dstAddr.addr.shortAddr );
        MOV       A,R6
        ADD       A,#0xb
        LCALL     ?Subroutine14 & 0xFFFF
// 1672       *pBuf++ = HI_UINT16( BindingTableList->dstAddr.addr.shortAddr );
// 1673     }
??CrossCallReturnLabel_11:
        MOV       R2,A
        JNC       ??ZDP_MgmtBindRsp_4
        INC       R3
// 1674     BindingTableList++;    // Move to next list entry
??ZDP_MgmtBindRsp_4:
        MOV       A,R6
        ADD       A,#0x15
        MOV       R6,A
        JNC       ??ZDP_MgmtBindRsp_5
        INC       R7
??ZDP_MgmtBindRsp_5:
        INC       ?V1
??ZDP_MgmtBindRsp_2:
        MOV       A,?V1
        CLR       C
        SUBB      A,?V4
        JNC       ??ZDP_MgmtBindRsp_6
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine124_0 & 0xFFFF
??CrossCallReturnLabel_206:
        LCALL     ?Subroutine35 & 0xFFFF
??CrossCallReturnLabel_46:
        MOV       DPL,R0
        LCALL     ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_207:
        LCALL     ??Subroutine138_0 & 0xFFFF
??CrossCallReturnLabel_277:
        LCALL     ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_86:
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x13
        MOV       R0,A
        CLR       A
        ADDC      A,R7
        LCALL     ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_59:
        JNC       ??ZDP_MgmtBindRsp_7
        INC       R3
??ZDP_MgmtBindRsp_7:
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        XRL       A,#0x3
        JNZ       ??ZDP_MgmtBindRsp_3
        MOV       A,#0x15
        ADD       A,?V0
        MOV       ?V0,A
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        ADD       A,#0xb
        MOV       R4,A
        CLR       A
        ADDC      A,R7
        MOV       R5,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       A,R6
        ADD       A,#0x14
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        LCALL     ?Subroutine61 & 0xFFFF
// 1675   }
??CrossCallReturnLabel_208:
        LCALL     ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_37:
        SJMP      ??ZDP_MgmtBindRsp_4
// 1676 
// 1677   FillAndSendBuffer( &TransSeq, dstAddr, Mgmt_Bind_rsp, len, buf );
??ZDP_MgmtBindRsp_6:
        LCALL     ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_231:
        ; Setup parameters for call to function fillAndSend
        MOV       ?V8,#0x33
        MOV       ?V9,#-0x80
        MOV       R0,#?V8
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       R1,?V0
        MOV       R4,?V10
        MOV       R5,?V11
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_273:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        LCALL     ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_233:
        LJMP      ?Subroutine7 & 0xFFFF
// 1678 }
          CFI EndBlock cfiBlock504

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine65:
          CFI Block cfiCond505 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_91
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond506 Using cfiCommon0
          CFI (cfiCond506) Function ZDP_MgmtBindRsp
          CFI (cfiCond506) Conditional ??CrossCallReturnLabel_92
          CFI (cfiCond506) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond506) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond506) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond506) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond506) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond506) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond506) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond506) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond506) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond506) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond506) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond506) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond506) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond506) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond506) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond506) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond506) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond506) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond506) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond506) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond506) CFA_SP SP+-2
          CFI (cfiCond506) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker507 Using cfiCommon1
          CFI (cfiPicker507) NoFunction
          CFI (cfiPicker507) Picker
        LCALL     ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_147:
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       A,R2
        ORL       A,R3
        RET
          CFI EndBlock cfiCond505
          CFI EndBlock cfiCond506
          CFI EndBlock cfiPicker507

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine64:
          CFI Block cfiCond508 Using cfiCommon0
          CFI Function ZDP_UserDescSet
          CFI Conditional ??CrossCallReturnLabel_252
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond509 Using cfiCommon0
          CFI (cfiCond509) Function ZDP_MgmtDirectJoinReq
          CFI (cfiCond509) Conditional ??CrossCallReturnLabel_253
          CFI (cfiCond509) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond509) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond509) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond509) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond509) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond509) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond509) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond509) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond509) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond509) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond509) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond509) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond509) CFA_SP SP+-2
          CFI (cfiCond509) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond510 Using cfiCommon0
          CFI (cfiCond510) Function ZDP_MgmtLeaveReq
          CFI (cfiCond510) Conditional ??CrossCallReturnLabel_253
          CFI (cfiCond510) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond510) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond510) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond510) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond510) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond510) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond510) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond510) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond510) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond510) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond510) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond510) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond510) CFA_SP SP+-2
          CFI (cfiCond510) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond511 Using cfiCommon0
          CFI (cfiCond511) Function ZDP_MgmtNwkDiscReq
          CFI (cfiCond511) Conditional ??CrossCallReturnLabel_253
          CFI (cfiCond511) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond511) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond511) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond511) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond511) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond511) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond511) CFA_SP SP+-2
          CFI (cfiCond511) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker512 Using cfiCommon1
          CFI (cfiPicker512) NoFunction
          CFI (cfiPicker512) Picker
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
          CFI EndBlock cfiCond508
          CFI EndBlock cfiCond509
          CFI EndBlock cfiCond510
          CFI EndBlock cfiCond511
          CFI EndBlock cfiPicker512
        REQUIRE ??Subroutine135_0
        ; // Fall through to label ??Subroutine135_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine135_0:
          CFI Block cfiCond513 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_254
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond514 Using cfiCommon0
          CFI (cfiCond514) Function ZDP_UserDescSet
          CFI (cfiCond514) Conditional ??CrossCallReturnLabel_252
          CFI (cfiCond514) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond514) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond514) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond514) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond514) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond514) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond514) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond514) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond514) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond514) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond514) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond514) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond514) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond514) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond514) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond514) CFA_SP SP+-2
          CFI (cfiCond514) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond515 Using cfiCommon0
          CFI (cfiCond515) Function ZDP_MgmtDirectJoinReq
          CFI (cfiCond515) Conditional ??CrossCallReturnLabel_253
          CFI (cfiCond515) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond515) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond515) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond515) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond515) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond515) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond515) CFA_SP SP+-2
          CFI (cfiCond515) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond516 Using cfiCommon0
          CFI (cfiCond516) Function ZDP_MgmtLeaveReq
          CFI (cfiCond516) Conditional ??CrossCallReturnLabel_253
          CFI (cfiCond516) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond516) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond516) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond516) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond516) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond516) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond516) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond516) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond516) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond516) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond516) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond516) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond516) CFA_SP SP+-2
          CFI (cfiCond516) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond517 Using cfiCommon0
          CFI (cfiCond517) Function ZDP_MgmtNwkDiscReq
          CFI (cfiCond517) Conditional ??CrossCallReturnLabel_253
          CFI (cfiCond517) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond517) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond517) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond517) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond517) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond517) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond517) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond517) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond517) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond517) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond517) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond517) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond517) CFA_SP SP+-2
          CFI (cfiCond517) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker518 Using cfiCommon1
          CFI (cfiPicker518) NoFunction
          CFI (cfiPicker518) Picker
        MOV       R5,A
          CFI EndBlock cfiCond513
          CFI EndBlock cfiCond514
          CFI EndBlock cfiCond515
          CFI EndBlock cfiCond516
          CFI EndBlock cfiCond517
          CFI EndBlock cfiPicker518
        REQUIRE ??Subroutine136_0
        ; // Fall through to label ??Subroutine136_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine136_0:
          CFI Block cfiCond519 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
          CFI Conditional ??CrossCallReturnLabel_255
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond520 Using cfiCommon0
          CFI (cfiCond520) Function ZDP_IEEEAddrReq
          CFI (cfiCond520) Conditional ??CrossCallReturnLabel_256
          CFI (cfiCond520) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond520) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond520) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond520) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond520) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond520) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond520) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond520) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond520) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond520) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond520) CFA_SP SP+-2
          CFI (cfiCond520) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond521 Using cfiCommon0
          CFI (cfiCond521) Function ZDP_DeviceAnnce
          CFI (cfiCond521) Conditional ??CrossCallReturnLabel_256
          CFI (cfiCond521) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond521) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond521) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond521) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond521) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond521) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond521) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond521) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond521) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond521) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond521) CFA_SP SP+-2
          CFI (cfiCond521) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond522 Using cfiCommon0
          CFI (cfiCond522) Function ZDP_ServerDiscReq
          CFI (cfiCond522) Conditional ??CrossCallReturnLabel_257
          CFI (cfiCond522) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond522) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond522) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond522) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond522) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond522) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond522) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond522) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond522) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond522) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond522) CFA_SP SP+-2
          CFI (cfiCond522) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond523 Using cfiCommon0
          CFI (cfiCond523) Function ZDP_EndDeviceBindReq
          CFI (cfiCond523) Conditional ??CrossCallReturnLabel_258
          CFI (cfiCond523) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond523) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond523) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond523) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond523) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond523) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond523) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond523) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond523) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond523) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond523) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond523) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond523) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond523) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond523) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond523) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond523) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond523) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond523) CFA_SP SP+-2
          CFI (cfiCond523) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond524 Using cfiCommon0
          CFI (cfiCond524) Function ZDP_BindUnbindReq
          CFI (cfiCond524) Conditional ??CrossCallReturnLabel_259
          CFI (cfiCond524) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond524) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond524) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond524) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond524) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond524) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond524) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond524) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond524) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond524) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond524) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond524) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond524) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond524) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond524) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond524) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond524) CFA_SP SP+-2
          CFI (cfiCond524) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond525 Using cfiCommon0
          CFI (cfiCond525) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond525) Conditional ??CrossCallReturnLabel_260
          CFI (cfiCond525) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond525) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond525) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond525) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond525) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond525) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond525) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond525) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond525) CFA_SP SP+-2
          CFI (cfiCond525) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond526 Using cfiCommon0
          CFI (cfiCond526) Function ZDP_MatchDescReq
          CFI (cfiCond526) Conditional ??CrossCallReturnLabel_254
          CFI (cfiCond526) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond526) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond526) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond526) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond526) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond526) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond526) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond526) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond526) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond526) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond526) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond526) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond526) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond526) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond526) CFA_SP SP+-2
          CFI (cfiCond526) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond527 Using cfiCommon0
          CFI (cfiCond527) Function ZDP_UserDescSet
          CFI (cfiCond527) Conditional ??CrossCallReturnLabel_252
          CFI (cfiCond527) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond527) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond527) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond527) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond527) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond527) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond527) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond527) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond527) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond527) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond527) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond527) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond527) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond527) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond527) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond527) CFA_SP SP+-2
          CFI (cfiCond527) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond528 Using cfiCommon0
          CFI (cfiCond528) Function ZDP_MgmtDirectJoinReq
          CFI (cfiCond528) Conditional ??CrossCallReturnLabel_253
          CFI (cfiCond528) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond528) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond528) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond528) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond528) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond528) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond528) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond528) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond528) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond528) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond528) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond528) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond528) CFA_SP SP+-2
          CFI (cfiCond528) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond529 Using cfiCommon0
          CFI (cfiCond529) Function ZDP_MgmtLeaveReq
          CFI (cfiCond529) Conditional ??CrossCallReturnLabel_253
          CFI (cfiCond529) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond529) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond529) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond529) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond529) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond529) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond529) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond529) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond529) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond529) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond529) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond529) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond529) CFA_SP SP+-2
          CFI (cfiCond529) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond530 Using cfiCommon0
          CFI (cfiCond530) Function ZDP_MgmtNwkDiscReq
          CFI (cfiCond530) Conditional ??CrossCallReturnLabel_253
          CFI (cfiCond530) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond530) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond530) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond530) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond530) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond530) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond530) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond530) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond530) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond530) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond530) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond530) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond530) CFA_SP SP+-2
          CFI (cfiCond530) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker531 Using cfiCommon1
          CFI (cfiPicker531) NoFunction
          CFI (cfiPicker531) Picker
        MOV       R2,#ZDP_TransID & 0xff
        MOV       R3,#(ZDP_TransID >> 8) & 0xff
          CFI EndBlock cfiCond519
          CFI EndBlock cfiCond520
          CFI EndBlock cfiCond521
          CFI EndBlock cfiCond522
          CFI EndBlock cfiCond523
          CFI EndBlock cfiCond524
          CFI EndBlock cfiCond525
          CFI EndBlock cfiCond526
          CFI EndBlock cfiCond527
          CFI EndBlock cfiCond528
          CFI EndBlock cfiCond529
          CFI EndBlock cfiCond530
          CFI EndBlock cfiPicker531
        REQUIRE ??Subroutine137_0
        ; // Fall through to label ??Subroutine137_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine137_0:
          CFI Block cfiCond532 Using cfiCommon0
          CFI Function ZDP_SendData
          CFI Conditional ??CrossCallReturnLabel_261
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond533 Using cfiCommon0
          CFI (cfiCond533) Function ZDP_NWKAddrOfInterestReq
          CFI (cfiCond533) Conditional ??CrossCallReturnLabel_262
          CFI (cfiCond533) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond533) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond533) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond533) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond533) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond533) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond533) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond533) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond533) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond533) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond533) CFA_SP SP+-2
          CFI (cfiCond533) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond534 Using cfiCommon0
          CFI (cfiCond534) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond534) Conditional ??CrossCallReturnLabel_262
          CFI (cfiCond534) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond534) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond534) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond534) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond534) CFA_SP SP+-2
          CFI (cfiCond534) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond535 Using cfiCommon0
          CFI (cfiCond535) Function ZDP_SimpleDescReq
          CFI (cfiCond535) Conditional ??CrossCallReturnLabel_262
          CFI (cfiCond535) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond535) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond535) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond535) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond535) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond535) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond535) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond535) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond535) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond535) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond535) CFA_SP SP+-2
          CFI (cfiCond535) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond536 Using cfiCommon0
          CFI (cfiCond536) Function ZDP_NodeDescMsg
          CFI (cfiCond536) Conditional ??CrossCallReturnLabel_262
          CFI (cfiCond536) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond536) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond536) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond536) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond536) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond536) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond536) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond536) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond536) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond536) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond536) CFA_SP SP+-2
          CFI (cfiCond536) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond537 Using cfiCommon0
          CFI (cfiCond537) Function ZDP_PowerDescMsg
          CFI (cfiCond537) Conditional ??CrossCallReturnLabel_262
          CFI (cfiCond537) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond537) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond537) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond537) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond537) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond537) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond537) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond537) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond537) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond537) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond537) CFA_SP SP+-2
          CFI (cfiCond537) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond538 Using cfiCommon0
          CFI (cfiCond538) Function zdpProcessAddrReq
          CFI (cfiCond538) Conditional ??CrossCallReturnLabel_263
          CFI (cfiCond538) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond538) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond538) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond538) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond538) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond538) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond538) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond538) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond538) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond538) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond538) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond538) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond538) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond538) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond538) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond538) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond538) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond538) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond538) CFA_SP SP+-2
          CFI (cfiCond538) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond539 Using cfiCommon0
          CFI (cfiCond539) Function ZDP_SimpleDescMsg
          CFI (cfiCond539) Conditional ??CrossCallReturnLabel_264
          CFI (cfiCond539) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond539) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond539) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond539) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond539) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond539) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond539) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond539) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond539) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond539) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond539) CFA_SP SP+-2
          CFI (cfiCond539) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond540 Using cfiCommon0
          CFI (cfiCond540) Function ZDP_EPRsp
          CFI (cfiCond540) Conditional ??CrossCallReturnLabel_265
          CFI (cfiCond540) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond540) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond540) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond540) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond540) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond540) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond540) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond540) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond540) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond540) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond540) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond540) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond540) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond540) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond540) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond540) CFA_SP SP+-2
          CFI (cfiCond540) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond541 Using cfiCommon0
          CFI (cfiCond541) Function ZDP_UserDescRsp
          CFI (cfiCond541) Conditional ??CrossCallReturnLabel_266
          CFI (cfiCond541) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond541) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond541) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond541) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond541) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond541) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond541) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond541) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond541) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond541) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond541) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond541) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond541) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond541) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond541) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond541) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond541) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond541) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond541) CFA_SP SP+-2
          CFI (cfiCond541) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond542 Using cfiCommon0
          CFI (cfiCond542) Function ZDP_ServerDiscRsp
          CFI (cfiCond542) Conditional ??CrossCallReturnLabel_267
          CFI (cfiCond542) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond542) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond542) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond542) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond542) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond542) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond542) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond542) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond542) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond542) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond542) CFA_SP SP+-2
          CFI (cfiCond542) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond543 Using cfiCommon0
          CFI (cfiCond543) Function ZDP_GenericRsp
          CFI (cfiCond543) Conditional ??CrossCallReturnLabel_268
          CFI (cfiCond543) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond543) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond543) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond543) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond543) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond543) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond543) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond543) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond543) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond543) CFA_SP SP+-2
          CFI (cfiCond543) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond544 Using cfiCommon0
          CFI (cfiCond544) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond544) Conditional ??CrossCallReturnLabel_269
          CFI (cfiCond544) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond544) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond544) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond544) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond544) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond544) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond544) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond544) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond544) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond544) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond544) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond544) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond544) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond544) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond544) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond544) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond544) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond544) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond544) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond544) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond544) CFA_SP SP+-2
          CFI (cfiCond544) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond545 Using cfiCommon0
          CFI (cfiCond545) Function ZDP_MgmtLqiRsp
          CFI (cfiCond545) Conditional ??CrossCallReturnLabel_270
          CFI (cfiCond545) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond545) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond545) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond545) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond545) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond545) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond545) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond545) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond545) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond545) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond545) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond545) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond545) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond545) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond545) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond545) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond545) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond545) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond545) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond545) CFA_SP SP+-2
          CFI (cfiCond545) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond546 Using cfiCommon0
          CFI (cfiCond546) Function ZDP_MgmtLqiRsp
          CFI (cfiCond546) Conditional ??CrossCallReturnLabel_271
          CFI (cfiCond546) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond546) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond546) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond546) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond546) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond546) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond546) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond546) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond546) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond546) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond546) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond546) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond546) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond546) CFA_SP SP+-2
          CFI (cfiCond546) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond547 Using cfiCommon0
          CFI (cfiCond547) Function ZDP_MgmtRtgRsp
          CFI (cfiCond547) Conditional ??CrossCallReturnLabel_272
          CFI (cfiCond547) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond547) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond547) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond547) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond547) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond547) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond547) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond547) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond547) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond547) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond547) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond547) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond547) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond547) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond547) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond547) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond547) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond547) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond547) CFA_SP SP+-2
          CFI (cfiCond547) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond548 Using cfiCommon0
          CFI (cfiCond548) Function ZDP_MgmtBindRsp
          CFI (cfiCond548) Conditional ??CrossCallReturnLabel_273
          CFI (cfiCond548) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond548) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond548) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond548) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond548) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond548) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond548) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond548) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond548) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond548) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond548) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond548) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond548) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond548) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond548) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond548) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond548) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond548) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond548) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond548) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond548) CFA_SP SP+-2
          CFI (cfiCond548) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond549 Using cfiCommon0
          CFI (cfiCond549) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond549) Conditional ??CrossCallReturnLabel_274
          CFI (cfiCond549) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond549) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond549) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond549) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond549) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond549) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond549) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond549) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond549) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond549) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond549) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond549) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond549) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond549) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond549) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond549) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond549) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond549) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond549) CFA_SP SP+-2
          CFI (cfiCond549) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond550 Using cfiCommon0
          CFI (cfiCond550) Function ZDP_NwkAddrReq
          CFI (cfiCond550) Conditional ??CrossCallReturnLabel_255
          CFI (cfiCond550) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond550) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond550) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond550) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond550) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond550) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond550) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond550) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond550) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond550) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond550) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond550) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond550) CFA_SP SP+-2
          CFI (cfiCond550) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond551 Using cfiCommon0
          CFI (cfiCond551) Function ZDP_IEEEAddrReq
          CFI (cfiCond551) Conditional ??CrossCallReturnLabel_256
          CFI (cfiCond551) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond551) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond551) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond551) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond551) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond551) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond551) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond551) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond551) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond551) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond551) CFA_SP SP+-2
          CFI (cfiCond551) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond552 Using cfiCommon0
          CFI (cfiCond552) Function ZDP_DeviceAnnce
          CFI (cfiCond552) Conditional ??CrossCallReturnLabel_256
          CFI (cfiCond552) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond552) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond552) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond552) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond552) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond552) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond552) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond552) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond552) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond552) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond552) CFA_SP SP+-2
          CFI (cfiCond552) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond553 Using cfiCommon0
          CFI (cfiCond553) Function ZDP_ServerDiscReq
          CFI (cfiCond553) Conditional ??CrossCallReturnLabel_257
          CFI (cfiCond553) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond553) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond553) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond553) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond553) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond553) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond553) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond553) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond553) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond553) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond553) CFA_SP SP+-2
          CFI (cfiCond553) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond554 Using cfiCommon0
          CFI (cfiCond554) Function ZDP_EndDeviceBindReq
          CFI (cfiCond554) Conditional ??CrossCallReturnLabel_258
          CFI (cfiCond554) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond554) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond554) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond554) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond554) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond554) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond554) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond554) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond554) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond554) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond554) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond554) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond554) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond554) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond554) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond554) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond554) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond554) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond554) CFA_SP SP+-2
          CFI (cfiCond554) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond555 Using cfiCommon0
          CFI (cfiCond555) Function ZDP_BindUnbindReq
          CFI (cfiCond555) Conditional ??CrossCallReturnLabel_259
          CFI (cfiCond555) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond555) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond555) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond555) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond555) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond555) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond555) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond555) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond555) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond555) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond555) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond555) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond555) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond555) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond555) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond555) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond555) CFA_SP SP+-2
          CFI (cfiCond555) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond556 Using cfiCommon0
          CFI (cfiCond556) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond556) Conditional ??CrossCallReturnLabel_260
          CFI (cfiCond556) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond556) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond556) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond556) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond556) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond556) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond556) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond556) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond556) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond556) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond556) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond556) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond556) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond556) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond556) CFA_SP SP+-2
          CFI (cfiCond556) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond557 Using cfiCommon0
          CFI (cfiCond557) Function ZDP_MatchDescReq
          CFI (cfiCond557) Conditional ??CrossCallReturnLabel_254
          CFI (cfiCond557) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond557) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond557) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond557) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond557) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond557) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond557) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond557) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond557) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond557) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond557) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond557) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond557) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond557) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond557) CFA_SP SP+-2
          CFI (cfiCond557) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond558 Using cfiCommon0
          CFI (cfiCond558) Function ZDP_UserDescSet
          CFI (cfiCond558) Conditional ??CrossCallReturnLabel_252
          CFI (cfiCond558) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond558) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond558) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond558) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond558) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond558) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond558) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond558) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond558) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond558) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond558) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond558) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond558) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond558) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond558) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond558) CFA_SP SP+-2
          CFI (cfiCond558) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond559 Using cfiCommon0
          CFI (cfiCond559) Function ZDP_MgmtDirectJoinReq
          CFI (cfiCond559) Conditional ??CrossCallReturnLabel_253
          CFI (cfiCond559) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond559) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond559) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond559) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond559) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond559) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond559) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond559) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond559) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond559) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond559) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond559) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond559) CFA_SP SP+-2
          CFI (cfiCond559) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond560 Using cfiCommon0
          CFI (cfiCond560) Function ZDP_MgmtLeaveReq
          CFI (cfiCond560) Conditional ??CrossCallReturnLabel_253
          CFI (cfiCond560) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond560) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond560) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond560) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond560) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond560) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond560) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond560) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond560) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond560) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond560) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond560) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond560) CFA_SP SP+-2
          CFI (cfiCond560) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond561 Using cfiCommon0
          CFI (cfiCond561) Function ZDP_MgmtNwkDiscReq
          CFI (cfiCond561) Conditional ??CrossCallReturnLabel_253
          CFI (cfiCond561) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond561) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond561) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond561) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond561) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond561) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond561) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond561) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond561) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond561) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond561) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond561) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond561) CFA_SP SP+-2
          CFI (cfiCond561) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker562 Using cfiCommon1
          CFI (cfiPicker562) NoFunction
          CFI (cfiPicker562) Picker
        LCALL     `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV       A,#0x2
        RET
          CFI EndBlock cfiCond532
          CFI EndBlock cfiCond533
          CFI EndBlock cfiCond534
          CFI EndBlock cfiCond535
          CFI EndBlock cfiCond536
          CFI EndBlock cfiCond537
          CFI EndBlock cfiCond538
          CFI EndBlock cfiCond539
          CFI EndBlock cfiCond540
          CFI EndBlock cfiCond541
          CFI EndBlock cfiCond542
          CFI EndBlock cfiCond543
          CFI EndBlock cfiCond544
          CFI EndBlock cfiCond545
          CFI EndBlock cfiCond546
          CFI EndBlock cfiCond547
          CFI EndBlock cfiCond548
          CFI EndBlock cfiCond549
          CFI EndBlock cfiCond550
          CFI EndBlock cfiCond551
          CFI EndBlock cfiCond552
          CFI EndBlock cfiCond553
          CFI EndBlock cfiCond554
          CFI EndBlock cfiCond555
          CFI EndBlock cfiCond556
          CFI EndBlock cfiCond557
          CFI EndBlock cfiCond558
          CFI EndBlock cfiCond559
          CFI EndBlock cfiCond560
          CFI EndBlock cfiCond561
          CFI EndBlock cfiPicker562

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine60:
          CFI Block cfiCond563 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_84
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond564 Using cfiCommon0
          CFI (cfiCond564) Function ZDP_MgmtBindRsp
          CFI (cfiCond564) Conditional ??CrossCallReturnLabel_85
          CFI (cfiCond564) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond564) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond564) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond564) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond564) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond564) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond564) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond564) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond564) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond564) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond564) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond564) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond564) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond564) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond564) CFA_SP SP+-2
          CFI (cfiCond564) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond565 Using cfiCommon0
          CFI (cfiCond565) Function ZDP_MgmtBindRsp
          CFI (cfiCond565) Conditional ??CrossCallReturnLabel_86
          CFI (cfiCond565) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond565) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond565) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond565) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond565) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond565) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond565) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond565) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond565) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond565) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond565) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond565) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond565) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond565) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond565) CFA_SP SP+-2
          CFI (cfiCond565) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker566 Using cfiCommon1
          CFI (cfiPicker566) NoFunction
          CFI (cfiPicker566) Picker
        LCALL     ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_211:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond563
          CFI EndBlock cfiCond564
          CFI EndBlock cfiCond565
          CFI EndBlock cfiPicker566

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine44:
          CFI Block cfiCond567 Using cfiCommon0
          CFI Function ZDP_BindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_58
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond568 Using cfiCommon0
          CFI (cfiCond568) Function ZDP_MgmtBindRsp
          CFI (cfiCond568) Conditional ??CrossCallReturnLabel_59
          CFI (cfiCond568) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond568) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond568) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond568) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond568) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond568) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond568) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond568) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond568) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond568) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond568) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond568) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond568) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond568) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond568) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond568) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond568) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond568) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond568) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond568) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond568) CFA_SP SP+-2
          CFI (cfiCond568) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker569 Using cfiCommon1
          CFI (cfiPicker569) NoFunction
          CFI (cfiPicker569) Picker
        MOV       R1,A
        MOV       DPL,R0
        LCALL     ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_130:
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x4
        MOV       R2,A
        RET
          CFI EndBlock cfiCond567
          CFI EndBlock cfiCond568
          CFI EndBlock cfiPicker569

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine88:
          CFI Block cfiCond570 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_82
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond571 Using cfiCommon0
          CFI (cfiCond571) Function ZDP_MgmtLqiRsp
          CFI (cfiCond571) Conditional ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_83
          CFI (cfiCond571) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond571) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond571) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond571) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond571) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond571) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond571) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond571) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond571) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond571) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond571) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond571) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond571) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond571) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond571) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond571) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond571) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond571) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond571) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond571) CFA_SP SP+-4
          CFI (cfiCond571) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond572 Using cfiCommon0
          CFI (cfiCond572) Function ZDP_BindUnbindReq
          CFI (cfiCond572) Conditional ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_58
          CFI (cfiCond572) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond572) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond572) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond572) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond572) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond572) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond572) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond572) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond572) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond572) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond572) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond572) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond572) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond572) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond572) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond572) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond572) CFA_SP SP+-4
          CFI (cfiCond572) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond573 Using cfiCommon0
          CFI (cfiCond573) Function ZDP_MgmtBindRsp
          CFI (cfiCond573) Conditional ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_59
          CFI (cfiCond573) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond573) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond573) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond573) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond573) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond573) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond573) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond573) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond573) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond573) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond573) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond573) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond573) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond573) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond573) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond573) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond573) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond573) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond573) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond573) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond573) CFA_SP SP+-4
          CFI (cfiCond573) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker574 Using cfiCommon1
          CFI (cfiPicker574) NoFunction
          CFI (cfiPicker574) Picker
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond570
          CFI EndBlock cfiCond571
          CFI EndBlock cfiCond572
          CFI EndBlock cfiCond573
          CFI EndBlock cfiPicker574

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine35:
          CFI Block cfiCond575 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_45
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond576 Using cfiCommon0
          CFI (cfiCond576) Function ZDP_MgmtBindRsp
          CFI (cfiCond576) Conditional ??CrossCallReturnLabel_46
          CFI (cfiCond576) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond576) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond576) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond576) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond576) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond576) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond576) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond576) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond576) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond576) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond576) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond576) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond576) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond576) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond576) CFA_SP SP+-2
          CFI (cfiCond576) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker577 Using cfiCommon1
          CFI (cfiPicker577) NoFunction
          CFI (cfiPicker577) Picker
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x9
        MOV       R0,A
        CLR       A
        ADDC      A,R7
        MOV       R1,A
        RET
          CFI EndBlock cfiCond575
          CFI EndBlock cfiCond576
          CFI EndBlock cfiPicker577

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine31:
          CFI Block cfiCond578 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_36
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond579 Using cfiCommon0
          CFI (cfiCond579) Function ZDP_MgmtBindRsp
          CFI (cfiCond579) Conditional ??CrossCallReturnLabel_37
          CFI (cfiCond579) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond579) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond579) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond579) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond579) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond579) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond579) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond579) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond579) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond579) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond579) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond579) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond579) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond579) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond579) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond579) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond579) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond579) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond579) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond579) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond579) CFA_SP SP+-2
          CFI (cfiCond579) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond580 Using cfiCommon0
          CFI (cfiCond580) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond580) Conditional ??CrossCallReturnLabel_38
          CFI (cfiCond580) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond580) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond580) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond580) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond580) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond580) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond580) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond580) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond580) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond580) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond580) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond580) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond580) CFA_SP SP+-2
          CFI (cfiCond580) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker581 Using cfiCommon1
          CFI (cfiPicker581) NoFunction
          CFI (cfiPicker581) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       R2,DPL
        MOV       R3,DPH
        RET
          CFI EndBlock cfiCond578
          CFI EndBlock cfiCond579
          CFI EndBlock cfiCond580
          CFI EndBlock cfiPicker581

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine27:
          CFI Block cfiCond582 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_275
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond583 Using cfiCommon0
          CFI (cfiCond583) Function ZDP_NodeDescMsg
          CFI (cfiCond583) Conditional ??CrossCallReturnLabel_276
          CFI (cfiCond583) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond583) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond583) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond583) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond583) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond583) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond583) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond583) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond583) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond583) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond583) CFA_SP SP+-2
          CFI (cfiCond583) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker584 Using cfiCommon1
          CFI (cfiPicker584) NoFunction
          CFI (cfiPicker584) Picker
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond582
          CFI EndBlock cfiCond583
          CFI EndBlock cfiPicker584
        REQUIRE ??Subroutine138_0
        ; // Fall through to label ??Subroutine138_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine138_0:
          CFI Block cfiCond585 Using cfiCommon0
          CFI Function ZDP_MgmtBindRsp
          CFI Conditional ??CrossCallReturnLabel_277
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond586 Using cfiCommon0
          CFI (cfiCond586) Function ZDP_NodeDescMsg
          CFI (cfiCond586) Conditional ??CrossCallReturnLabel_275
          CFI (cfiCond586) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond586) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond586) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond586) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond586) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond586) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond586) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond586) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond586) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond586) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond586) CFA_SP SP+-2
          CFI (cfiCond586) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond587 Using cfiCommon0
          CFI (cfiCond587) Function ZDP_NodeDescMsg
          CFI (cfiCond587) Conditional ??CrossCallReturnLabel_276
          CFI (cfiCond587) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond587) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond587) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond587) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond587) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond587) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond587) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond587) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond587) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond587) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond587) CFA_SP SP+-2
          CFI (cfiCond587) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker588 Using cfiCommon1
          CFI (cfiPicker588) NoFunction
          CFI (cfiPicker588) Picker
        INC       DPTR
          CFI EndBlock cfiCond585
          CFI EndBlock cfiCond586
          CFI EndBlock cfiCond587
          CFI EndBlock cfiPicker588
        REQUIRE ??Subroutine139_0
        ; // Fall through to label ??Subroutine139_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine139_0:
          CFI Block cfiCond589 Using cfiCommon0
          CFI Function ZDP_SendData
          CFI Conditional ??CrossCallReturnLabel_279
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond590 Using cfiCommon0
          CFI (cfiCond590) Function ZDP_UserDescSet
          CFI (cfiCond590) Conditional ??CrossCallReturnLabel_278
          CFI (cfiCond590) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond590) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond590) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond590) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond590) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond590) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond590) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond590) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond590) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond590) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond590) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond590) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond590) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond590) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond590) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond590) CFA_SP SP+-2
          CFI (cfiCond590) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond591 Using cfiCommon0
          CFI (cfiCond591) Function ZDP_MgmtBindRsp
          CFI (cfiCond591) Conditional ??CrossCallReturnLabel_277
          CFI (cfiCond591) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond591) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond591) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond591) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond591) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond591) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond591) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond591) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond591) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond591) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond591) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond591) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond591) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond591) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond591) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond591) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond591) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond591) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond591) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond591) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond591) CFA_SP SP+-2
          CFI (cfiCond591) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond592 Using cfiCommon0
          CFI (cfiCond592) Function ZDP_NodeDescMsg
          CFI (cfiCond592) Conditional ??CrossCallReturnLabel_275
          CFI (cfiCond592) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond592) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond592) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond592) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond592) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond592) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond592) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond592) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond592) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond592) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond592) CFA_SP SP+-2
          CFI (cfiCond592) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond593 Using cfiCommon0
          CFI (cfiCond593) Function ZDP_NodeDescMsg
          CFI (cfiCond593) Conditional ??CrossCallReturnLabel_276
          CFI (cfiCond593) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond593) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond593) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond593) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond593) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond593) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond593) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond593) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond593) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond593) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond593) CFA_SP SP+-2
          CFI (cfiCond593) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker594 Using cfiCommon1
          CFI (cfiPicker594) NoFunction
          CFI (cfiPicker594) Picker
        LCALL     ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_281:
        RET
          CFI EndBlock cfiCond589
          CFI EndBlock cfiCond590
          CFI EndBlock cfiCond591
          CFI EndBlock cfiCond592
          CFI EndBlock cfiCond593
          CFI EndBlock cfiPicker594

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine92:
          CFI Block cfiCond595 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_167
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond596 Using cfiCommon0
          CFI (cfiCond596) Function ZDP_NodeDescMsg
          CFI (cfiCond596) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_168
          CFI (cfiCond596) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond596) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond596) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond596) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond596) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond596) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond596) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond596) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond596) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond596) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond596) CFA_SP SP+-4
          CFI (cfiCond596) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond597 Using cfiCommon0
          CFI (cfiCond597) Function ZDP_MgmtRtgRsp
          CFI (cfiCond597) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_169
          CFI (cfiCond597) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond597) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond597) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond597) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond597) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond597) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond597) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond597) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond597) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond597) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond597) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond597) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond597) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond597) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond597) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond597) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond597) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond597) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond597) CFA_SP SP+-4
          CFI (cfiCond597) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond598 Using cfiCommon0
          CFI (cfiCond598) Function ZDP_NodeDescMsg
          CFI (cfiCond598) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_275
          CFI (cfiCond598) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond598) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond598) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond598) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond598) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond598) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond598) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond598) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond598) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond598) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond598) CFA_SP SP+-4
          CFI (cfiCond598) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond599 Using cfiCommon0
          CFI (cfiCond599) Function ZDP_NodeDescMsg
          CFI (cfiCond599) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_276
          CFI (cfiCond599) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond599) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond599) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond599) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond599) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond599) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond599) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond599) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond599) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond599) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond599) CFA_SP SP+-4
          CFI (cfiCond599) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond600 Using cfiCommon0
          CFI (cfiCond600) Function ZDP_MgmtBindRsp
          CFI (cfiCond600) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_277
          CFI (cfiCond600) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond600) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond600) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond600) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond600) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond600) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond600) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond600) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond600) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond600) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond600) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond600) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond600) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond600) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond600) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond600) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond600) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond600) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond600) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond600) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond600) CFA_SP SP+-4
          CFI (cfiCond600) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond601 Using cfiCommon0
          CFI (cfiCond601) Function ZDP_SendData
          CFI (cfiCond601) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_279
          CFI (cfiCond601) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond601) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond601) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond601) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond601) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond601) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond601) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond601) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond601) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond601) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond601) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond601) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond601) CFA_SP SP+-4
          CFI (cfiCond601) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond602 Using cfiCommon0
          CFI (cfiCond602) Function ZDP_UserDescSet
          CFI (cfiCond602) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_278
          CFI (cfiCond602) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond602) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond602) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond602) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond602) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond602) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond602) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond602) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond602) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond602) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond602) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond602) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond602) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond602) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond602) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond602) CFA_SP SP+-4
          CFI (cfiCond602) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond603 Using cfiCommon0
          CFI (cfiCond603) Function ZDP_MgmtLqiRsp
          CFI (cfiCond603) Conditional ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_10
          CFI (cfiCond603) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond603) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond603) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond603) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond603) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond603) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond603) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond603) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond603) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond603) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond603) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond603) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond603) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond603) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond603) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond603) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond603) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond603) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond603) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond603) CFA_SP SP+-4
          CFI (cfiCond603) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond604 Using cfiCommon0
          CFI (cfiCond604) Function ZDP_MgmtBindRsp
          CFI (cfiCond604) Conditional ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_11
          CFI (cfiCond604) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond604) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond604) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond604) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond604) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond604) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond604) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond604) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond604) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond604) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond604) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond604) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond604) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond604) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond604) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond604) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond604) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond604) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond604) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond604) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond604) CFA_SP SP+-4
          CFI (cfiCond604) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker605 Using cfiCommon1
          CFI (cfiPicker605) NoFunction
          CFI (cfiPicker605) Picker
        LCALL     ?Subroutine107 & 0xFFFF
??CrossCallReturnLabel_285:
        INC       DPTR
        RET
          CFI EndBlock cfiCond595
          CFI EndBlock cfiCond596
          CFI EndBlock cfiCond597
          CFI EndBlock cfiCond598
          CFI EndBlock cfiCond599
          CFI EndBlock cfiCond600
          CFI EndBlock cfiCond601
          CFI EndBlock cfiCond602
          CFI EndBlock cfiCond603
          CFI EndBlock cfiCond604
          CFI EndBlock cfiPicker605

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine107:
          CFI Block cfiCond606 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_27
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond607 Using cfiCommon0
          CFI (cfiCond607) Function ZDP_NodeDescMsg
          CFI (cfiCond607) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_28
          CFI (cfiCond607) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond607) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond607) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond607) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond607) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond607) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond607) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond607) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond607) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond607) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond607) CFA_SP SP+-6
          CFI (cfiCond607) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond608 Using cfiCommon0
          CFI (cfiCond608) Function ZDP_NodeDescMsg
          CFI (cfiCond608) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_23
          CFI (cfiCond608) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond608) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond608) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond608) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond608) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond608) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond608) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond608) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond608) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond608) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond608) CFA_SP SP+-6
          CFI (cfiCond608) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond609 Using cfiCommon0
          CFI (cfiCond609) Function ZDP_NodeDescMsg
          CFI (cfiCond609) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_24
          CFI (cfiCond609) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond609) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond609) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond609) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond609) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond609) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond609) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond609) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond609) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond609) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond609) CFA_SP SP+-6
          CFI (cfiCond609) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond610 Using cfiCommon0
          CFI (cfiCond610) Function ZDP_PowerDescMsg
          CFI (cfiCond610) Conditional ??CrossCallReturnLabel_284
          CFI (cfiCond610) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond610) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond610) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond610) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond610) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond610) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond610) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond610) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond610) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond610) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond610) CFA_SP SP+-2
          CFI (cfiCond610) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond611 Using cfiCommon0
          CFI (cfiCond611) Function ZDP_NodeDescMsg
          CFI (cfiCond611) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_167
          CFI (cfiCond611) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond611) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond611) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond611) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond611) CFA_SP SP+-6
          CFI (cfiCond611) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond612 Using cfiCommon0
          CFI (cfiCond612) Function ZDP_NodeDescMsg
          CFI (cfiCond612) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_168
          CFI (cfiCond612) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond612) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond612) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond612) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond612) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond612) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond612) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond612) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond612) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond612) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond612) CFA_SP SP+-6
          CFI (cfiCond612) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond613 Using cfiCommon0
          CFI (cfiCond613) Function ZDP_MgmtRtgRsp
          CFI (cfiCond613) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_169
          CFI (cfiCond613) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond613) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond613) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond613) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond613) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond613) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond613) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond613) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond613) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond613) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond613) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond613) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond613) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond613) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond613) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond613) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond613) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond613) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond613) CFA_SP SP+-6
          CFI (cfiCond613) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond614 Using cfiCommon0
          CFI (cfiCond614) Function ZDP_NodeDescMsg
          CFI (cfiCond614) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_275
          CFI (cfiCond614) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond614) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond614) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond614) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond614) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond614) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond614) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond614) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond614) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond614) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond614) CFA_SP SP+-6
          CFI (cfiCond614) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond615 Using cfiCommon0
          CFI (cfiCond615) Function ZDP_NodeDescMsg
          CFI (cfiCond615) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_276
          CFI (cfiCond615) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond615) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond615) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond615) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond615) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond615) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond615) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond615) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond615) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond615) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond615) CFA_SP SP+-6
          CFI (cfiCond615) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond616 Using cfiCommon0
          CFI (cfiCond616) Function ZDP_MgmtBindRsp
          CFI (cfiCond616) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_277
          CFI (cfiCond616) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond616) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond616) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond616) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond616) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond616) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond616) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond616) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond616) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond616) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond616) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond616) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond616) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond616) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond616) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond616) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond616) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond616) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond616) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond616) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond616) CFA_SP SP+-6
          CFI (cfiCond616) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond617 Using cfiCommon0
          CFI (cfiCond617) Function ZDP_SendData
          CFI (cfiCond617) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_279
          CFI (cfiCond617) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond617) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond617) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond617) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond617) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond617) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond617) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond617) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond617) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond617) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond617) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond617) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond617) CFA_SP SP+-6
          CFI (cfiCond617) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond618 Using cfiCommon0
          CFI (cfiCond618) Function ZDP_UserDescSet
          CFI (cfiCond618) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_278
          CFI (cfiCond618) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond618) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond618) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond618) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond618) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond618) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond618) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond618) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond618) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond618) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond618) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond618) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond618) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond618) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond618) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond618) CFA_SP SP+-6
          CFI (cfiCond618) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond619 Using cfiCommon0
          CFI (cfiCond619) Function ZDP_MgmtLqiRsp
          CFI (cfiCond619) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_10
          CFI (cfiCond619) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond619) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond619) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond619) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond619) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond619) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond619) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond619) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond619) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond619) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond619) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond619) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond619) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond619) CFA_SP SP+-6
          CFI (cfiCond619) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond620 Using cfiCommon0
          CFI (cfiCond620) Function ZDP_MgmtBindRsp
          CFI (cfiCond620) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_11
          CFI (cfiCond620) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond620) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond620) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond620) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond620) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond620) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond620) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond620) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond620) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond620) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond620) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond620) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond620) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond620) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond620) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond620) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond620) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond620) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond620) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond620) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond620) CFA_SP SP+-6
          CFI (cfiCond620) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond621 Using cfiCommon0
          CFI (cfiCond621) Function ZDP_IncomingData
          CFI (cfiCond621) Conditional ??CrossCallReturnLabel_286
          CFI (cfiCond621) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond621) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond621) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond621) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond621) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond621) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond621) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond621) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond621) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond621) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond621) CFA_SP SP+-2
          CFI (cfiCond621) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiPicker622 Using cfiCommon1
          CFI (cfiPicker622) NoFunction
          CFI (cfiPicker622) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        MOV       DPL,R0
        MOV       DPH,R1
        RET
          CFI EndBlock cfiCond606
          CFI EndBlock cfiCond607
          CFI EndBlock cfiCond608
          CFI EndBlock cfiCond609
          CFI EndBlock cfiCond610
          CFI EndBlock cfiCond611
          CFI EndBlock cfiCond612
          CFI EndBlock cfiCond613
          CFI EndBlock cfiCond614
          CFI EndBlock cfiCond615
          CFI EndBlock cfiCond616
          CFI EndBlock cfiCond617
          CFI EndBlock cfiCond618
          CFI EndBlock cfiCond619
          CFI EndBlock cfiCond620
          CFI EndBlock cfiCond621
          CFI EndBlock cfiPicker622

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine14:
          CFI Block cfiCond623 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_10
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond624 Using cfiCommon0
          CFI (cfiCond624) Function ZDP_MgmtBindRsp
          CFI (cfiCond624) Conditional ??CrossCallReturnLabel_11
          CFI (cfiCond624) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond624) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond624) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond624) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond624) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond624) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond624) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond624) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond624) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond624) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond624) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond624) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond624) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond624) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond624) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond624) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond624) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond624) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond624) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond624) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond624) CFA_SP SP+-2
          CFI (cfiCond624) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker625 Using cfiCommon1
          CFI (cfiPicker625) NoFunction
          CFI (cfiPicker625) Picker
        MOV       R0,A
        CLR       A
        ADDC      A,R7
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,A
        LCALL     ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_209:
        LCALL     ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_282:
        LCALL     ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_210:
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x2
        RET
          CFI EndBlock cfiCond623
          CFI EndBlock cfiCond624
          CFI EndBlock cfiPicker625
// 1679 
// 1680 /*********************************************************************
// 1681  * @fn          ZDP_MgmtNwkUpdateNotify
// 1682  *
// 1683  * @brief       This builds and send a Mgmt_NWK_Update_notify message. This
// 1684  *              function sends a unicast message.
// 1685  *
// 1686  * @param       dstAddr - destination address of the message
// 1687  * @param       status - message status (ZDP_SUCCESS or other)
// 1688  * @param       scannedChannels - List of channels scanned by the request
// 1689  * @param       totalTransmissions - Total transmissions
// 1690  * @param       transmissionFailures - Sum of transmission failures
// 1691  * @param       listCount - Number of records contained in the energyValues list
// 1692  * @param       energyValues - List of descriptors, one for each of ListCount,
// 1693  *                             of the enegry detect descriptors
// 1694  * @param       txOptions - Transmit options
// 1695  * @param       securityEnable - Security options
// 1696  *
// 1697  * @return      afStatus_t
// 1698  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1699 afStatus_t ZDP_MgmtNwkUpdateNotify( uint8 TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtNwkUpdateNotify:
          CFI Block cfiBlock626 Using cfiCommon0
          CFI Function ZDP_MgmtNwkUpdateNotify
        CODE
// 1700                                     uint8 status, uint32 scannedChannels,
// 1701                                     uint16 totalTransmissions, uint16 transmissionFailures,
// 1702                                     uint8 listCount, uint8 *energyValues, uint8 txOptions,
// 1703                                     uint8 securityEnable )
// 1704 {
        FUNCALL ZDP_MgmtNwkUpdateNotify, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateNotify, osal_buffer_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateNotify, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateNotify, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateNotify, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V8
        REQUIRE ?V9
        MOV       A,#-0x12
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       ?V8,R2
        MOV       ?V9,R3
        MOV       ?V2,R4
        MOV       ?V0,R5
// 1705   uint8 *buf;
// 1706   uint8 *pBuf;
// 1707   uint8 len;
// 1708 
// 1709   (void)securityEnable;  // Intentionally unreferenced parameter
// 1710 
// 1711   // Status + ScannedChannels + totalTransmissions + transmissionFailures + ListCount + energyValues
// 1712   len = 1 + 4 + 2 + 2 + 1 + listCount;
        MOV       A,#0xa
        ADD       A,R5
        MOV       ?V1,A
// 1713 
// 1714   buf = osal_mem_alloc( len+1 ); // +1 for transaction ID
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_95:
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       R6,?V4
        MOV       R7,?V5
// 1715   if ( buf == NULL )
        MOV       A,R2
        ORL       A,R7
        JNZ       ??ZDP_MgmtNwkUpdateNotify_0
// 1716   {
// 1717     return afStatus_MEM_FAIL;
        MOV       R1,#0x10
        LJMP      ??ZDP_MgmtNwkUpdateNotify_1 & 0xFFFF
// 1718   }
// 1719 
// 1720   pBuf = buf+1;
??ZDP_MgmtNwkUpdateNotify_0:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
// 1721 
// 1722   *pBuf++ = status;
        MOV       A,?V2
        LCALL     ?Subroutine31 & 0xFFFF
// 1723 
// 1724   pBuf = osal_buffer_uint32( pBuf, scannedChannels );
??CrossCallReturnLabel_38:
        ; Setup parameters for call to function osal_buffer_uint32
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 23)
        LCALL     `??osal_buffer_uint32::?relay`; Banked call to: osal_buffer_uint32
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,#0x17
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine120_0 & 0xFFFF
// 1725 
// 1726   *pBuf++ = LO_UINT16( totalTransmissions );
??CrossCallReturnLabel_175:
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      @DPTR,A
// 1727   *pBuf++ = HI_UINT16( totalTransmissions );
        MOV       A,R1
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,#0x19
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine28 & 0xFFFF
// 1728 
// 1729   *pBuf++ = LO_UINT16( transmissionFailures );
// 1730   *pBuf++ = HI_UINT16( transmissionFailures );
// 1731 
// 1732   *pBuf++ = listCount;
??CrossCallReturnLabel_30:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V0
        MOVX      @DPTR,A
// 1733 
// 1734   if ( listCount > 0 )
        JZ        ??ZDP_MgmtNwkUpdateNotify_2
// 1735     osal_memcpy( pBuf, energyValues, listCount );
        ; Setup parameters for call to function osal_memcpy
        MOV       A,#0x1b
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_61:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       R4,?V0
        MOV       R5,#0x0
        MOV       A,R2
        ADD       A,#0x5
        MOV       R2,A
        JNC       ??ZDP_MgmtNwkUpdateNotify_3
        INC       R3
??ZDP_MgmtNwkUpdateNotify_3:
        LCALL     ??Subroutine144_0 & 0xFFFF
??CrossCallReturnLabel_301:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
// 1736 
// 1737   FillAndSendBufferTxOptions( &TransSeq, dstAddr, Mgmt_NWK_Update_notify, len, buf, txOptions );
??ZDP_MgmtNwkUpdateNotify_2:
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine130_0 & 0xFFFF
??CrossCallReturnLabel_229:
        MOV       A,#0x1d
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       DPTR,#ZDP_TxOptions
        MOVX      @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV       ?V4,#0x38
        MOV       ?V5,#-0x80
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       R1,?V1
        MOV       R4,?V8
        MOV       R5,?V9
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine137_0 & 0xFFFF
??CrossCallReturnLabel_274:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R1
        MOV       ?V1,A
        ; Setup parameters for call to function osal_mem_free
        LCALL     ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_111:
        MOV       DPTR,#ZDP_TxOptions
        CLR       A
        MOVX      @DPTR,A
        MOV       R1,?V1
??ZDP_MgmtNwkUpdateNotify_1:
          CFI EndBlock cfiBlock626
        REQUIRE ?Subroutine4
        ; // Fall through to label ?Subroutine4
// 1738 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine4:
          CFI Block cfiBlock627 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0x1
          CFI EndBlock cfiBlock627
        REQUIRE ??Subroutine140_0
        ; // Fall through to label ??Subroutine140_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine140_0:
          CFI Block cfiBlock628 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 32)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock628
        REQUIRE ??Subroutine141_0
        ; // Fall through to label ??Subroutine141_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine141_0:
          CFI Block cfiBlock629 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0xa
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock629

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine76:
          CFI Block cfiCond630 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_110
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond631 Using cfiCommon0
          CFI (cfiCond631) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond631) Conditional ??CrossCallReturnLabel_111
          CFI (cfiCond631) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond631) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond631) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond631) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond631) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond631) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond631) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond631) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond631) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond631) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond631) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond631) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond631) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond631) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond631) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond631) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond631) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond631) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond631) CFA_SP SP+-2
          CFI (cfiCond631) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker632 Using cfiCommon1
          CFI (cfiPicker632) NoFunction
          CFI (cfiPicker632) Picker
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_236:
        RET
          CFI EndBlock cfiCond630
          CFI EndBlock cfiCond631
          CFI EndBlock cfiPicker632

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine102:
          CFI Block cfiCond633 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_232
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond634 Using cfiCommon0
          CFI (cfiCond634) Function ZDP_MgmtBindRsp
          CFI (cfiCond634) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_233
          CFI (cfiCond634) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond634) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond634) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond634) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond634) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond634) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond634) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond634) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond634) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond634) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond634) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond634) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond634) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond634) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond634) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond634) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond634) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond634) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond634) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond634) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond634) CFA_SP SP+-4
          CFI (cfiCond634) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond635 Using cfiCommon0
          CFI (cfiCond635) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond635) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_234
          CFI (cfiCond635) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond635) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond635) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond635) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond635) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond635) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond635) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond635) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond635) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond635) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond635) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond635) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond635) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond635) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond635) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond635) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond635) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond635) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond635) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond635) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond635) CFA_SP SP+-4
          CFI (cfiCond635) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond636 Using cfiCommon0
          CFI (cfiCond636) Function ZDP_MgmtRtgRsp
          CFI (cfiCond636) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_110
          CFI (cfiCond636) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond636) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond636) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond636) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond636) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond636) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond636) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond636) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond636) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond636) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond636) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond636) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond636) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond636) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond636) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond636) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond636) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond636) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond636) CFA_SP SP+-4
          CFI (cfiCond636) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond637 Using cfiCommon0
          CFI (cfiCond637) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond637) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_111
          CFI (cfiCond637) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond637) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond637) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond637) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond637) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond637) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond637) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond637) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond637) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond637) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond637) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond637) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond637) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond637) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond637) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond637) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond637) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond637) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond637) CFA_SP SP+-4
          CFI (cfiCond637) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker638 Using cfiCommon1
          CFI (cfiPicker638) NoFunction
          CFI (cfiPicker638) Picker
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        MOV       DPTR,#ZDP_TmpBuf
        MOV       A,#(ZDP_Buf + 1) & 0xff
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,#((ZDP_Buf + 1) >> 8) & 0xff
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond633
          CFI EndBlock cfiCond634
          CFI EndBlock cfiCond635
          CFI EndBlock cfiCond636
          CFI EndBlock cfiCond637
          CFI EndBlock cfiPicker638

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine45:
          CFI Block cfiCond639 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_60
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond640 Using cfiCommon0
          CFI (cfiCond640) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond640) Conditional ??CrossCallReturnLabel_61
          CFI (cfiCond640) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond640) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond640) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond640) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond640) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond640) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond640) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond640) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond640) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond640) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond640) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond640) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond640) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond640) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond640) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond640) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond640) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond640) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond640) CFA_SP SP+-2
          CFI (cfiCond640) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker641 Using cfiCommon1
          CFI (cfiPicker641) NoFunction
          CFI (cfiPicker641) Picker
        MOVX      A,@DPTR
        MOV       ?V4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V5,A
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        RET
          CFI EndBlock cfiCond639
          CFI EndBlock cfiCond640
          CFI EndBlock cfiPicker641

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine28:
          CFI Block cfiCond642 Using cfiCommon0
          CFI Function ZDP_MgmtNwkUpdateReq
          CFI Conditional ??CrossCallReturnLabel_29
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond643 Using cfiCommon0
          CFI (cfiCond643) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond643) Conditional ??CrossCallReturnLabel_30
          CFI (cfiCond643) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond643) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond643) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond643) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond643) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond643) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond643) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond643) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond643) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond643) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond643) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond643) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond643) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond643) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond643) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond643) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond643) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond643) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond643) CFA_SP SP+-2
          CFI (cfiCond643) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker644 Using cfiCommon1
          CFI (cfiPicker644) NoFunction
          CFI (cfiPicker644) Picker
        LCALL     ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_125:
        INC       DPTR
        LCALL     ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_139:
        INC       DPTR
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond642
          CFI EndBlock cfiCond643
          CFI EndBlock cfiPicker644

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine94:
          CFI Block cfiCond645 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_12
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond646 Using cfiCommon0
          CFI (cfiCond646) Function ZDP_EndDeviceBindReq
          CFI (cfiCond646) Conditional ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_13
          CFI (cfiCond646) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond646) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond646) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond646) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond646) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond646) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond646) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond646) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond646) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond646) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond646) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond646) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond646) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond646) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond646) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond646) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond646) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond646) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond646) CFA_SP SP+-4
          CFI (cfiCond646) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond647 Using cfiCommon0
          CFI (cfiCond647) Function ZDP_BindUnbindReq
          CFI (cfiCond647) Conditional ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_14
          CFI (cfiCond647) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond647) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond647) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond647) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond647) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond647) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond647) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond647) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond647) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond647) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond647) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond647) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond647) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond647) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond647) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond647) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond647) CFA_SP SP+-4
          CFI (cfiCond647) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond648 Using cfiCommon0
          CFI (cfiCond648) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond648) Conditional ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_29
          CFI (cfiCond648) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond648) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond648) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond648) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond648) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond648) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond648) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond648) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond648) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond648) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond648) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond648) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond648) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond648) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond648) CFA_SP SP+-4
          CFI (cfiCond648) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond649 Using cfiCommon0
          CFI (cfiCond649) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond649) Conditional ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_30
          CFI (cfiCond649) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond649) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond649) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond649) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond649) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond649) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond649) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond649) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond649) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond649) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond649) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond649) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond649) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond649) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond649) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond649) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond649) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond649) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond649) CFA_SP SP+-4
          CFI (cfiCond649) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker650 Using cfiCommon1
          CFI (cfiPicker650) NoFunction
          CFI (cfiPicker650) Picker
        MOVX      @DPTR,A
        MOV       A,R1
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond645
          CFI EndBlock cfiCond646
          CFI EndBlock cfiCond647
          CFI EndBlock cfiCond648
          CFI EndBlock cfiCond649
          CFI EndBlock cfiPicker650

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine82:
          CFI Block cfiCond651 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_12
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond652 Using cfiCommon0
          CFI (cfiCond652) Function ZDP_EndDeviceBindReq
          CFI (cfiCond652) Conditional ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_13
          CFI (cfiCond652) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond652) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond652) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond652) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond652) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond652) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond652) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond652) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond652) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond652) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond652) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond652) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond652) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond652) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond652) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond652) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond652) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond652) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond652) CFA_SP SP+-4
          CFI (cfiCond652) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond653 Using cfiCommon0
          CFI (cfiCond653) Function ZDP_BindUnbindReq
          CFI (cfiCond653) Conditional ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_14
          CFI (cfiCond653) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond653) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond653) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond653) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond653) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond653) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond653) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond653) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond653) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond653) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond653) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond653) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond653) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond653) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond653) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond653) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond653) CFA_SP SP+-4
          CFI (cfiCond653) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond654 Using cfiCommon0
          CFI (cfiCond654) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond654) Conditional ??CrossCallReturnLabel_125, ??CrossCallReturnLabel_29
          CFI (cfiCond654) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond654) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond654) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond654) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond654) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond654) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond654) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond654) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond654) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond654) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond654) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond654) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond654) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond654) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond654) CFA_SP SP+-4
          CFI (cfiCond654) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond655 Using cfiCommon0
          CFI (cfiCond655) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond655) Conditional ??CrossCallReturnLabel_125, ??CrossCallReturnLabel_30
          CFI (cfiCond655) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond655) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond655) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond655) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond655) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond655) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond655) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond655) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond655) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond655) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond655) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond655) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond655) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond655) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond655) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond655) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond655) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond655) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond655) CFA_SP SP+-4
          CFI (cfiCond655) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker656 Using cfiCommon1
          CFI (cfiPicker656) NoFunction
          CFI (cfiPicker656) Picker
        LCALL     ??Subroutine146_0 & 0xFFFF
??CrossCallReturnLabel_324:
        MOV       R1,A
        MOV       A,R0
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        RET
          CFI EndBlock cfiCond651
          CFI EndBlock cfiCond652
          CFI EndBlock cfiCond653
          CFI EndBlock cfiCond654
          CFI EndBlock cfiCond655
          CFI EndBlock cfiPicker656
// 1739 
// 1740 /*********************************************************************
// 1741  * Functions to register for ZDO Over-the-air messages
// 1742  */
// 1743 
// 1744 /*********************************************************************
// 1745  * @fn          ZDO_RegisterForZDOMsg
// 1746  *
// 1747  * @brief       Call this function to register of an incoming over
// 1748  *              the air ZDO message - probably a response message
// 1749  *              but requests can also be received.
// 1750  *              Messages are delivered to the task with ZDO_CB_MSG
// 1751  *              as the message ID.
// 1752  *
// 1753  * @param       taskID - Where you would like the message delivered
// 1754  * @param       clusterID - What message?
// 1755  *
// 1756  * @return      ZSuccess - successful, ZMemError if not
// 1757  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1758 ZStatus_t ZDO_RegisterForZDOMsg( uint8 taskID, uint16 clusterID )
ZDO_RegisterForZDOMsg:
          CFI Block cfiBlock657 Using cfiCommon0
          CFI Function ZDO_RegisterForZDOMsg
        CODE
// 1759 {
        FUNCALL ZDO_RegisterForZDOMsg, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV       ?V2,R1
        MOV       ?V0,R2
        MOV       ?V1,R3
// 1760   ZDO_MsgCB_t *pList;
// 1761   ZDO_MsgCB_t *pLast;
// 1762   ZDO_MsgCB_t *pNew;
// 1763 
// 1764   // Look for duplicate
// 1765   pList = pLast = zdoMsgCBs;
        MOV       DPTR,#zdoMsgCBs
        LCALL     ??Subroutine142_0 & 0xFFFF
??CrossCallReturnLabel_290:
        MOV       A,R6
        MOV       R0,A
        MOV       A,R7
        SJMP      ??CrossCallReturnLabel_323
// 1766   while ( pList )
// 1767   {
// 1768     if ( pList->taskID == taskID && pList->clusterID == clusterID )
??ZDO_RegisterForZDOMsg_0:
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,?V2
        JNZ       ??ZDO_RegisterForZDOMsg_1
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R2
        JNZ       ??ZDO_RegisterForZDOMsg_2
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R3
??ZDO_RegisterForZDOMsg_2:
        JZ        ??CrossCallReturnLabel_223
// 1769       return ( ZSuccess );
// 1770     pLast = pList;
??ZDO_RegisterForZDOMsg_1:
        MOV       A,R0
        MOV       R6,A
        MOV       A,R1
        MOV       R7,A
// 1771     pList = (ZDO_MsgCB_t *)pList->next;
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ??Subroutine146_0 & 0xFFFF
// 1772   }
??CrossCallReturnLabel_323:
        MOV       R1,A
        MOV       A,R0
        ORL       A,R1
        JNZ       ??ZDO_RegisterForZDOMsg_0
// 1773 
// 1774   // Add to the list
// 1775   pNew = (ZDO_MsgCB_t *)osal_mem_alloc( sizeof ( ZDO_MsgCB_t ) );
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,#0x5
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       R0,?V4
        MOV       R1,?V5
// 1776   if ( pNew )
        MOV       A,R2
        ORL       A,R1
        JZ        ??ZDO_RegisterForZDOMsg_3
// 1777   {
// 1778     pNew->taskID = taskID;
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOV       A,?V2
        LCALL     ?Subroutine30 & 0xFFFF
// 1779     pNew->clusterID = clusterID;
??CrossCallReturnLabel_34:
        MOV       A,?V0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V1
        MOVX      @DPTR,A
// 1780     pNew->next = NULL;
        MOV       DPL,R2
        MOV       DPH,R3
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 1781     if ( zdoMsgCBs )
        MOV       DPTR,#zdoMsgCBs
        LCALL     ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_75:
        JZ        ??ZDO_RegisterForZDOMsg_4
// 1782     {
// 1783       pLast->next = pNew;
        MOV       DPL,R6
        MOV       DPH,R7
        SJMP      ??ZDO_RegisterForZDOMsg_5
// 1784     }
// 1785     else
// 1786       zdoMsgCBs = pNew;
??ZDO_RegisterForZDOMsg_4:
        MOV       DPTR,#zdoMsgCBs
??ZDO_RegisterForZDOMsg_5:
        LCALL     ??Subroutine131_0 & 0xFFFF
// 1787     return ( ZSuccess );
??CrossCallReturnLabel_223:
        MOV       R1,#0x0
        SJMP      ??ZDO_RegisterForZDOMsg_6
// 1788   }
// 1789   else
// 1790     return ( ZMemError );
??ZDO_RegisterForZDOMsg_3:
        MOV       R1,#0x10
??ZDO_RegisterForZDOMsg_6:
        LJMP      ??Subroutine113_0 & 0xFFFF
// 1791 }
          CFI EndBlock cfiBlock657

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine53:
          CFI Block cfiCond658 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_74
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond659 Using cfiCommon0
          CFI (cfiCond659) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond659) Conditional ??CrossCallReturnLabel_75
          CFI (cfiCond659) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond659) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond659) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond659) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond659) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond659) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond659) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond659) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond659) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond659) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond659) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond659) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond659) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond659) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond659) CFA_SP SP+-2
          CFI (cfiCond659) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond660 Using cfiCommon0
          CFI (cfiCond660) Function ZDO_RemoveRegisteredCB
          CFI (cfiCond660) Conditional ??CrossCallReturnLabel_73
          CFI (cfiCond660) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond660) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond660) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond660) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond660) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond660) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond660) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond660) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond660) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond660) CFA_SP SP+-2
          CFI (cfiCond660) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker661 Using cfiCommon1
          CFI (cfiPicker661) NoFunction
          CFI (cfiPicker661) Picker
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_197:
        MOV       A,R2
        ORL       A,R3
        RET
          CFI EndBlock cfiCond658
          CFI EndBlock cfiCond659
          CFI EndBlock cfiCond660
          CFI EndBlock cfiPicker661

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine43:
          CFI Block cfiCond662 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_291
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond663 Using cfiCommon0
          CFI (cfiCond663) Function ZDP_EndDeviceBindReq
          CFI (cfiCond663) Conditional ??CrossCallReturnLabel_292
          CFI (cfiCond663) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond663) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond663) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond663) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond663) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond663) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond663) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond663) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond663) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond663) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond663) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond663) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond663) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond663) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond663) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond663) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond663) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond663) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond663) CFA_SP SP+-2
          CFI (cfiCond663) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker664 Using cfiCommon1
          CFI (cfiPicker664) NoFunction
          CFI (cfiPicker664) Picker
        MOV       DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond662
          CFI EndBlock cfiCond663
          CFI EndBlock cfiPicker664
        REQUIRE ??Subroutine142_0
        ; // Fall through to label ??Subroutine142_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine142_0:
          CFI Block cfiCond665 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_287
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond666 Using cfiCommon0
          CFI (cfiCond666) Function ZDP_MgmtLqiRsp
          CFI (cfiCond666) Conditional ??CrossCallReturnLabel_288
          CFI (cfiCond666) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond666) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond666) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond666) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond666) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond666) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond666) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond666) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond666) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond666) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond666) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond666) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond666) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond666) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond666) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond666) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond666) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond666) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond666) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond666) CFA_SP SP+-2
          CFI (cfiCond666) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond667 Using cfiCommon0
          CFI (cfiCond667) Function ZDP_MgmtBindRsp
          CFI (cfiCond667) Conditional ??CrossCallReturnLabel_289
          CFI (cfiCond667) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond667) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond667) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond667) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond667) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond667) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond667) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond667) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond667) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond667) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond667) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond667) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond667) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond667) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond667) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond667) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond667) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond667) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond667) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond667) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond667) CFA_SP SP+-2
          CFI (cfiCond667) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond668 Using cfiCommon0
          CFI (cfiCond668) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond668) Conditional ??CrossCallReturnLabel_290
          CFI (cfiCond668) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond668) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond668) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond668) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond668) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond668) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond668) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond668) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond668) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond668) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond668) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond668) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond668) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond668) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond668) CFA_SP SP+-2
          CFI (cfiCond668) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond669 Using cfiCommon0
          CFI (cfiCond669) Function ZDP_NodeDescMsg
          CFI (cfiCond669) Conditional ??CrossCallReturnLabel_291
          CFI (cfiCond669) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond669) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond669) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond669) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond669) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond669) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond669) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond669) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond669) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond669) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond669) CFA_SP SP+-2
          CFI (cfiCond669) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond670 Using cfiCommon0
          CFI (cfiCond670) Function ZDP_EndDeviceBindReq
          CFI (cfiCond670) Conditional ??CrossCallReturnLabel_292
          CFI (cfiCond670) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond670) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond670) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond670) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond670) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond670) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond670) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond670) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond670) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond670) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond670) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond670) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond670) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond670) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond670) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond670) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond670) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond670) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond670) CFA_SP SP+-2
          CFI (cfiCond670) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker671 Using cfiCommon1
          CFI (cfiPicker671) NoFunction
          CFI (cfiPicker671) Picker
        MOVX      A,@DPTR
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R7,A
        RET
          CFI EndBlock cfiCond665
          CFI EndBlock cfiCond666
          CFI EndBlock cfiCond667
          CFI EndBlock cfiCond668
          CFI EndBlock cfiCond669
          CFI EndBlock cfiCond670
          CFI EndBlock cfiPicker671

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine30:
          CFI Block cfiCond672 Using cfiCommon0
          CFI Function ZDP_MgmtBindRsp
          CFI Conditional ??CrossCallReturnLabel_33
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond673 Using cfiCommon0
          CFI (cfiCond673) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond673) Conditional ??CrossCallReturnLabel_34
          CFI (cfiCond673) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond673) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond673) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond673) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond673) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond673) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond673) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond673) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond673) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond673) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond673) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond673) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond673) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond673) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond673) CFA_SP SP+-2
          CFI (cfiCond673) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond674 Using cfiCommon0
          CFI (cfiCond674) Function ZDP_IncomingData
          CFI (cfiCond674) Conditional ??CrossCallReturnLabel_35
          CFI (cfiCond674) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond674) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond674) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond674) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond674) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond674) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond674) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond674) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond674) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond674) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond674) CFA_SP SP+-2
          CFI (cfiCond674) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiPicker675 Using cfiCommon1
          CFI (cfiPicker675) NoFunction
          CFI (cfiPicker675) Picker
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_140:
        RET
          CFI EndBlock cfiCond672
          CFI EndBlock cfiCond673
          CFI EndBlock cfiCond674
          CFI EndBlock cfiPicker675

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine95:
          CFI Block cfiCond676 Using cfiCommon0
          CFI Function ZDP_MgmtBindRsp
          CFI Conditional ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_33
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond677 Using cfiCommon0
          CFI (cfiCond677) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond677) Conditional ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_34
          CFI (cfiCond677) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond677) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond677) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond677) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond677) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond677) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond677) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond677) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond677) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond677) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond677) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond677) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond677) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond677) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond677) CFA_SP SP+-4
          CFI (cfiCond677) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond678 Using cfiCommon0
          CFI (cfiCond678) Function ZDP_IncomingData
          CFI (cfiCond678) Conditional ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_35
          CFI (cfiCond678) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond678) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond678) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond678) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond678) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond678) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond678) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond678) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond678) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond678) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond678) CFA_SP SP+-4
          CFI (cfiCond678) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond679 Using cfiCommon0
          CFI (cfiCond679) Function ZDP_MgmtRtgRsp
          CFI (cfiCond679) Conditional ??CrossCallReturnLabel_141, ??CrossCallReturnLabel_31
          CFI (cfiCond679) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond679) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond679) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond679) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond679) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond679) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond679) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond679) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond679) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond679) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond679) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond679) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond679) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond679) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond679) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond679) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond679) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond679) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond679) CFA_SP SP+-4
          CFI (cfiCond679) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond680 Using cfiCommon0
          CFI (cfiCond680) Function ZDP_IncomingData
          CFI (cfiCond680) Conditional ??CrossCallReturnLabel_141, ??CrossCallReturnLabel_32
          CFI (cfiCond680) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond680) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond680) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond680) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond680) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond680) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond680) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond680) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond680) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond680) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond680) CFA_SP SP+-4
          CFI (cfiCond680) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiPicker681 Using cfiCommon1
          CFI (cfiPicker681) NoFunction
          CFI (cfiPicker681) Picker
        MOVX      @DPTR,A
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond676
          CFI EndBlock cfiCond677
          CFI EndBlock cfiCond678
          CFI EndBlock cfiCond679
          CFI EndBlock cfiCond680
          CFI EndBlock cfiPicker681
// 1792 
// 1793 /*********************************************************************
// 1794  * @fn          ZDO_RemoveRegisteredCB
// 1795  *
// 1796  * @brief       Call this function if you don't want to receive the
// 1797  *              incoming message.
// 1798  *
// 1799  * @param       taskID - Where the messages are being delivered.
// 1800  * @param       clusterID - What message?
// 1801  *
// 1802  * @return      ZSuccess - successful, ZFailure if not found
// 1803  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1804 ZStatus_t ZDO_RemoveRegisteredCB( uint8 taskID, uint16 clusterID )
ZDO_RemoveRegisteredCB:
          CFI Block cfiBlock682 Using cfiCommon0
          CFI Function ZDO_RemoveRegisteredCB
        CODE
// 1805 {
        FUNCALL ZDO_RemoveRegisteredCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV       A,#-0x9
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV       A,R1
        MOV       R6,A
        MOV       A,R2
        MOV       R4,A
        MOV       A,R3
        MOV       R5,A
// 1806   ZDO_MsgCB_t *pList;
// 1807   ZDO_MsgCB_t *pLast = NULL;
        MOV       R0,#0x0
        MOV       R1,#0x0
// 1808 
// 1809   pList = zdoMsgCBs;
        MOV       DPTR,#zdoMsgCBs
        SJMP      ??ZDO_RemoveRegisteredCB_0
// 1810   while ( pList )
// 1811   {
// 1812     if ( pList->taskID == taskID && pList->clusterID == clusterID )
// 1813     {
// 1814       if ( pLast )
// 1815       {
// 1816         // remove this one from the linked list
// 1817         pLast->next = pList->next;
// 1818       }
// 1819       else if ( pList->next )
// 1820       {
// 1821         // remove the first one from the linked list
// 1822         zdoMsgCBs = pList->next;
// 1823       }
// 1824       else
// 1825       {
// 1826         // remove the only item from the list
// 1827         zdoMsgCBs = (ZDO_MsgCB_t *)NULL;
// 1828       }
// 1829       osal_mem_free( pList );
// 1830       return ( ZSuccess );
// 1831     }
// 1832     pLast = pList;
??ZDO_RemoveRegisteredCB_1:
        MOV       A,R2
        MOV       R0,A
        MOV       A,R3
        MOV       R1,A
// 1833     pList = pList->next;
        MOV       DPL,R2
        MOV       DPH,R3
??ZDO_RemoveRegisteredCB_0:
        LCALL     ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_73:
        JZ        ??ZDO_RemoveRegisteredCB_2
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R6
        JNZ       ??ZDO_RemoveRegisteredCB_1
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R4
        JNZ       ??ZDO_RemoveRegisteredCB_3
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R5
??ZDO_RemoveRegisteredCB_3:
        JNZ       ??ZDO_RemoveRegisteredCB_1
        MOV       A,R0
        ORL       A,R1
        MOV       DPL,R2
        MOV       DPH,R3
        JZ        ??ZDO_RemoveRegisteredCB_4
        LCALL     ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_72:
        MOV       DPL,R0
        MOV       DPH,R1
        MOV       A,R4
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R5
        SJMP      ??ZDO_RemoveRegisteredCB_5
??ZDO_RemoveRegisteredCB_4:
        LCALL     ??Subroutine116_0 & 0xFFFF
??CrossCallReturnLabel_158:
        MOV       DPTR,#zdoMsgCBs
        JZ        ??ZDO_RemoveRegisteredCB_6
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        SJMP      ??ZDO_RemoveRegisteredCB_5
??ZDO_RemoveRegisteredCB_6:
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
??ZDO_RemoveRegisteredCB_5:
        MOVX      @DPTR,A
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        MOV       R1,#0x0
        SJMP      ??ZDO_RemoveRegisteredCB_7
// 1834   }
// 1835 
// 1836   return ( ZFailure );
??ZDO_RemoveRegisteredCB_2:
        MOV       R1,#0x1
??ZDO_RemoveRegisteredCB_7:
        LJMP      ?Subroutine6 & 0xFFFF
// 1837 }
          CFI EndBlock cfiBlock682
// 1838 
// 1839 /*********************************************************************
// 1840  * @fn          ZDO_SendMsgCBs
// 1841  *
// 1842  * @brief       This function sends messages to registered tasks.
// 1843  *              Local to ZDO and shouldn't be called outside of ZDO.
// 1844  *
// 1845  * @param       inMsg - incoming message
// 1846  *
// 1847  * @return      TRUE if sent to at least 1 task, FALSE if not
// 1848  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1849 uint8 ZDO_SendMsgCBs( zdoIncomingMsg_t *inMsg )
ZDO_SendMsgCBs:
          CFI Block cfiBlock683 Using cfiCommon0
          CFI Function ZDO_SendMsgCBs
        CODE
// 1850 {
        FUNCALL ZDO_SendMsgCBs, osal_msg_allocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_SendMsgCBs, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_SendMsgCBs, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_SendMsgCBs, osal_msg_send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV       ?V2,R2
        MOV       ?V3,R3
// 1851   uint8 ret = FALSE;
        MOV       ?V4,#0x0
// 1852   ZDO_MsgCB_t *pList = zdoMsgCBs;
        MOV       DPTR,#zdoMsgCBs
        LJMP      ??ZDO_SendMsgCBs_0 & 0xFFFF
// 1853   while ( pList )
// 1854   {
// 1855     if ( pList->clusterID == inMsg->clusterID )
??ZDO_SendMsgCBs_1:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine145_0 & 0xFFFF
??CrossCallReturnLabel_313:
        MOV       A,?V2
        ADD       A,#0xc
        LCALL     ??Subroutine143_0 & 0xFFFF
??CrossCallReturnLabel_293:
        XRL       A,R0
        JNZ       ??ZDO_SendMsgCBs_2
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R1
??ZDO_SendMsgCBs_2:
        JZ        $+5
        LJMP      ??ZDO_SendMsgCBs_3 & 0xFFFF
// 1856     {
// 1857       zdoIncomingMsg_t *msgPtr;
// 1858 
// 1859       // Send the address to the task
// 1860       msgPtr = (zdoIncomingMsg_t *)osal_msg_allocate( sizeof( zdoIncomingMsg_t ) + inMsg->asduLen );
        ; Setup parameters for call to function osal_msg_allocate
        LCALL     ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_295:
        ADD       A,#0x15
        MOV       R2,A
        CLR       A
        ADDC      A,#0x0
        MOV       R3,A
        LCALL     `??osal_msg_allocate::?relay`; Banked call to: osal_msg_allocate
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       R6,?V6
        MOV       R7,?V7
// 1861       if ( msgPtr )
        MOV       A,R2
        ORL       A,R7
        JZ        ??ZDO_SendMsgCBs_3
// 1862       {
// 1863         // copy struct
// 1864         osal_memcpy( msgPtr, inMsg, sizeof( zdoIncomingMsg_t ));
        ; Setup parameters for call to function osal_memcpy
        MOV       ?V4,?V2
        MOV       ?V5,?V3
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       R4,#0x15
        MOV       R5,#0x0
        LCALL     ??Subroutine144_0 & 0xFFFF
??CrossCallReturnLabel_302:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
// 1865 
// 1866         if ( inMsg->asduLen )
        LCALL     ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_296:
        JZ        ??ZDO_SendMsgCBs_4
// 1867         {
// 1868           msgPtr->asdu = (byte*)(((byte*)msgPtr) + sizeof( zdoIncomingMsg_t ));
        MOV       A,R6
        ADD       A,#0x15
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       A,R6
        ADD       A,#0x13
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOV       A,R2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
// 1869           osal_memcpy( msgPtr->asdu, inMsg->asdu, inMsg->asduLen );
        ; Setup parameters for call to function osal_memcpy
        MOV       A,?V2
        ADD       A,#0x13
        LCALL     ??Subroutine143_0 & 0xFFFF
// 1870         }
??CrossCallReturnLabel_294:
        MOV       ?V4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V5,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 19)
        LCALL     ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_297:
        MOV       R4,A
        MOV       R5,#0x0
        LCALL     ??Subroutine144_0 & 0xFFFF
??CrossCallReturnLabel_303:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
// 1871 
// 1872         msgPtr->hdr.event = ZDO_CB_MSG;
??ZDO_SendMsgCBs_4:
        MOV       DPL,R6
        MOV       DPH,R7
        MOV       A,#-0x2d
        MOVX      @DPTR,A
// 1873         osal_msg_send( pList->taskID, (uint8 *)msgPtr );
        ; Setup parameters for call to function osal_msg_send
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??osal_msg_send::?relay`; Banked call to: osal_msg_send
// 1874         ret = TRUE;
        MOV       ?V4,#0x1
// 1875       }
// 1876     }
// 1877     pList = (ZDO_MsgCB_t *)pList->next;
??ZDO_SendMsgCBs_3:
        MOV       DPL,?V0
        MOV       DPH,?V1
// 1878   }
??ZDO_SendMsgCBs_0:
        LCALL     ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_55:
        MOV       A,?V0
        ORL       A,?V1
        JZ        $+5
        LJMP      ??ZDO_SendMsgCBs_1 & 0xFFFF
// 1879   return ( ret );
        MOV       R1,?V4
        LJMP      ?Subroutine5 & 0xFFFF
// 1880 }
          CFI EndBlock cfiBlock683

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine72:
          CFI Block cfiCond684 Using cfiCommon0
          CFI Function ZDO_SendMsgCBs
          CFI Conditional ??CrossCallReturnLabel_295
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond685 Using cfiCommon0
          CFI (cfiCond685) Function ZDO_SendMsgCBs
          CFI (cfiCond685) Conditional ??CrossCallReturnLabel_296
          CFI (cfiCond685) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond685) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond685) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond685) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond685) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond685) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond685) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond685) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond685) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond685) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond685) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond685) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond685) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond685) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond685) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond685) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond685) CFA_SP SP+-2
          CFI (cfiCond685) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond686 Using cfiCommon0
          CFI (cfiCond686) Function ZDO_SendMsgCBs
          CFI (cfiCond686) Conditional ??CrossCallReturnLabel_297
          CFI (cfiCond686) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond686) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond686) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond686) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond686) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond686) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond686) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond686) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond686) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond686) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond686) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond686) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond686) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond686) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond686) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond686) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond686) CFA_SP SP+-2
          CFI (cfiCond686) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker687 Using cfiCommon1
          CFI (cfiPicker687) NoFunction
          CFI (cfiPicker687) Picker
        MOV       A,?V2
        ADD       A,#0x10
          CFI EndBlock cfiCond684
          CFI EndBlock cfiCond685
          CFI EndBlock cfiCond686
          CFI EndBlock cfiPicker687
        REQUIRE ??Subroutine143_0
        ; // Fall through to label ??Subroutine143_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine143_0:
          CFI Block cfiCond688 Using cfiCommon0
          CFI Function ZDO_SendMsgCBs
          CFI Conditional ??CrossCallReturnLabel_293
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond689 Using cfiCommon0
          CFI (cfiCond689) Function ZDO_SendMsgCBs
          CFI (cfiCond689) Conditional ??CrossCallReturnLabel_294
          CFI (cfiCond689) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond689) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond689) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond689) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond689) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond689) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond689) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond689) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond689) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond689) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond689) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond689) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond689) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond689) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond689) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond689) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond689) CFA_SP SP+-2
          CFI (cfiCond689) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond690 Using cfiCommon0
          CFI (cfiCond690) Function ZDO_SendMsgCBs
          CFI (cfiCond690) Conditional ??CrossCallReturnLabel_295
          CFI (cfiCond690) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond690) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond690) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond690) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond690) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond690) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond690) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond690) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond690) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond690) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond690) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond690) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond690) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond690) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond690) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond690) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond690) CFA_SP SP+-2
          CFI (cfiCond690) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond691 Using cfiCommon0
          CFI (cfiCond691) Function ZDO_SendMsgCBs
          CFI (cfiCond691) Conditional ??CrossCallReturnLabel_296
          CFI (cfiCond691) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond691) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond691) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond691) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond691) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond691) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond691) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond691) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond691) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond691) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond691) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond691) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond691) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond691) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond691) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond691) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond691) CFA_SP SP+-2
          CFI (cfiCond691) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond692 Using cfiCommon0
          CFI (cfiCond692) Function ZDO_SendMsgCBs
          CFI (cfiCond692) Conditional ??CrossCallReturnLabel_297
          CFI (cfiCond692) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond692) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond692) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond692) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond692) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond692) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond692) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond692) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond692) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond692) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond692) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond692) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond692) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond692) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond692) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond692) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond692) CFA_SP SP+-2
          CFI (cfiCond692) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker693 Using cfiCommon1
          CFI (cfiPicker693) NoFunction
          CFI (cfiPicker693) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,?V3
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond688
          CFI EndBlock cfiCond689
          CFI EndBlock cfiCond690
          CFI EndBlock cfiCond691
          CFI EndBlock cfiCond692
          CFI EndBlock cfiPicker693

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine71:
          CFI Block cfiCond694 Using cfiCommon0
          CFI Function ZDP_UserDescSet
          CFI Conditional ??CrossCallReturnLabel_298
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond695 Using cfiCommon0
          CFI (cfiCond695) Function ZDP_UserDescRsp
          CFI (cfiCond695) Conditional ??CrossCallReturnLabel_299
          CFI (cfiCond695) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond695) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond695) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond695) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond695) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond695) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond695) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond695) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond695) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond695) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond695) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond695) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond695) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond695) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond695) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond695) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond695) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond695) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond695) CFA_SP SP+-2
          CFI (cfiCond695) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker696 Using cfiCommon1
          CFI (cfiPicker696) NoFunction
          CFI (cfiPicker696) Picker
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
          CFI EndBlock cfiCond694
          CFI EndBlock cfiCond695
          CFI EndBlock cfiPicker696
        REQUIRE ??Subroutine144_0
        ; // Fall through to label ??Subroutine144_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine144_0:
          CFI Block cfiCond697 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_300
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond698 Using cfiCommon0
          CFI (cfiCond698) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond698) Conditional ??CrossCallReturnLabel_301
          CFI (cfiCond698) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond698) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond698) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond698) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond698) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond698) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond698) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond698) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond698) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond698) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond698) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond698) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond698) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond698) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond698) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond698) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond698) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond698) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond698) CFA_SP SP+-2
          CFI (cfiCond698) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond699 Using cfiCommon0
          CFI (cfiCond699) Function ZDO_SendMsgCBs
          CFI (cfiCond699) Conditional ??CrossCallReturnLabel_302
          CFI (cfiCond699) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond699) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond699) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond699) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond699) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond699) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond699) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond699) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond699) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond699) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond699) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond699) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond699) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond699) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond699) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond699) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond699) CFA_SP SP+-2
          CFI (cfiCond699) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond700 Using cfiCommon0
          CFI (cfiCond700) Function ZDO_SendMsgCBs
          CFI (cfiCond700) Conditional ??CrossCallReturnLabel_303
          CFI (cfiCond700) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond700) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond700) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond700) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond700) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond700) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond700) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond700) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond700) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond700) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond700) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond700) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond700) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond700) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond700) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond700) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond700) CFA_SP SP+-2
          CFI (cfiCond700) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond701 Using cfiCommon0
          CFI (cfiCond701) Function ZDP_UserDescSet
          CFI (cfiCond701) Conditional ??CrossCallReturnLabel_298
          CFI (cfiCond701) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond701) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond701) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond701) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond701) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond701) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond701) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond701) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond701) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond701) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond701) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond701) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond701) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond701) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond701) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond701) CFA_SP SP+-2
          CFI (cfiCond701) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond702 Using cfiCommon0
          CFI (cfiCond702) Function ZDP_UserDescRsp
          CFI (cfiCond702) Conditional ??CrossCallReturnLabel_299
          CFI (cfiCond702) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond702) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond702) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond702) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond702) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond702) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond702) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond702) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond702) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond702) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond702) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond702) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond702) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond702) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond702) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond702) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond702) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond702) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond702) CFA_SP SP+-2
          CFI (cfiCond702) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker703 Using cfiCommon1
          CFI (cfiPicker703) NoFunction
          CFI (cfiPicker703) Picker
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        RET
          CFI EndBlock cfiCond697
          CFI EndBlock cfiCond698
          CFI EndBlock cfiCond699
          CFI EndBlock cfiCond700
          CFI EndBlock cfiCond701
          CFI EndBlock cfiCond702
          CFI EndBlock cfiPicker703
// 1881 
// 1882 /*********************************************************************
// 1883  * Incoming message processor
// 1884  */
// 1885 
// 1886 /*********************************************************************
// 1887  * @fn          ZDP_IncomingData
// 1888  *
// 1889  * @brief       This function indicates the transfer of a data PDU (ASDU)
// 1890  *              from the APS sub-layer to the ZDO.
// 1891  *
// 1892  * @param       pData - Incoming Message
// 1893  *
// 1894  * @return      none
// 1895  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1896 void ZDP_IncomingData( afIncomingMSGPacket_t *pData )
ZDP_IncomingData:
          CFI Block cfiBlock704 Using cfiCommon0
          CFI Function ZDP_IncomingData
        CODE
// 1897 {
        FUNCALL ZDP_IncomingData, ZDO_SendMsgCBs
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_IncomingData, ZDApp_InMsgCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 21
        MOV       A,#-0x15
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 31)
// 1898   uint8 x = 0;
        MOV       R6,#0x0
// 1899   uint8 handled;
// 1900   zdoIncomingMsg_t inMsg;
// 1901 
// 1902   inMsg.srcAddr.addrMode = Addr16Bit;
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x2
        LCALL     ?Subroutine29 & 0xFFFF
// 1903   inMsg.srcAddr.addr.shortAddr = pData->srcAddr.addr.shortAddr;
??CrossCallReturnLabel_32:
        INC       DPTR
        LCALL     ??Subroutine145_0 & 0xFFFF
??CrossCallReturnLabel_314:
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine131_0 & 0xFFFF
// 1904   inMsg.wasBroadcast = pData->wasBroadcast;
??CrossCallReturnLabel_224:
        MOV       A,R2
        ADD       A,#0x15
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine30 & 0xFFFF
// 1905   inMsg.clusterID = pData->clusterId;
??CrossCallReturnLabel_35:
        INC       DPTR
        LCALL     ??Subroutine145_0 & 0xFFFF
??CrossCallReturnLabel_315:
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine131_0 & 0xFFFF
// 1906   inMsg.SecurityUse = pData->SecurityUse;
??CrossCallReturnLabel_225:
        MOV       A,R2
        ADD       A,#0x19
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 1907 
// 1908   inMsg.asduLen = pData->cmd.DataLength-1;
        MOV       A,R2
        ADD       A,#0x20
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        MOVX      A,@DPTR
        DEC       A
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 1909   inMsg.asdu = pData->cmd.Data+1;
        MOV       A,R2
        ADD       A,#0x22
        MOV       R0,A
        CLR       A
        ADDC      A,R3
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        ADD       A,#0x1
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R5,A
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R4
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R5
        LCALL     ?Subroutine107 & 0xFFFF
// 1910   inMsg.TransSeq = pData->cmd.Data[0];
??CrossCallReturnLabel_286:
        LCALL     ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_186:
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0xf
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 1911   inMsg.macDestAddr = pData->macDestAddr;
        MOV       A,R2
        ADD       A,#0x12
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        LCALL     ??Subroutine145_0 & 0xFFFF
??CrossCallReturnLabel_316:
        MOV       A,#0x11
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine131_0 & 0xFFFF
// 1912 
// 1913   handled = ZDO_SendMsgCBs( &inMsg );
??CrossCallReturnLabel_226:
        ; Setup parameters for call to function ZDO_SendMsgCBs
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        LCALL     `??ZDO_SendMsgCBs::?relay`; Banked call to: ZDO_SendMsgCBs
        MOV       A,R1
        MOV       R2,A
        SJMP      ??ZDP_IncomingData_0
// 1914 
// 1915 #if (defined MT_ZDO_CB_FUNC)
// 1916 #if !defined MT_TASK
// 1917   if (zgZdoDirectCB)
// 1918 #endif
// 1919   {
// 1920     MT_ZdoDirectCB( pData, &inMsg );
// 1921   }
// 1922 #endif
// 1923 
// 1924   while ( zdpMsgProcs[x].clusterID != 0xFFFF )
// 1925   {
// 1926     if ( zdpMsgProcs[x].clusterID == inMsg.clusterID )
// 1927     {
// 1928       zdpMsgProcs[x].pFn( &inMsg );
// 1929       return;
// 1930     }
// 1931     x++;
??ZDP_IncomingData_1:
        INC       R6
??ZDP_IncomingData_0:
        MOV       A,R6
        MOV       ?V0,A
        MOV       ?V1,#0x0
        MOV       A,#0x2
        MOV       R0,#?V0
        LCALL     ?S_SHL
        MOV       A,#zdpMsgProcs & 0xff
        ADD       A,?V0
        MOV       DPL,A
        MOV       A,#(zdpMsgProcs >> 8) & 0xff
        ADDC      A,?V1
        MOV       DPH,A
        CLR       A
        MOVC      A,@A+DPTR
        MOV       R0,A
        MOV       A,#0x1
        MOVC      A,@A+DPTR
        MOV       R1,A
        MOV       A,#-0x1
        XRL       A,R0
        JNZ       ??ZDP_IncomingData_2
        MOV       A,#-0x1
        XRL       A,R1
??ZDP_IncomingData_2:
        JZ        ??ZDP_IncomingData_3
        CLR       A
        MOVC      A,@A+DPTR
        MOV       R0,A
        MOV       A,#0x1
        MOVC      A,@A+DPTR
        MOV       R1,A
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        XRL       A,R0
        JNZ       ??ZDP_IncomingData_4
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R1
??ZDP_IncomingData_4:
        JNZ       ??ZDP_IncomingData_1
        ; Setup parameters for indirect call
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        MOV       A,R6
        MOV       ?V0,A
        MOV       ?V1,#0x0
        MOV       A,#0x2
        MOV       R0,#?V0
        LCALL     ?S_SHL
        MOV       A,#(zdpMsgProcs + 2) & 0xff
        ADD       A,?V0
        MOV       DPL,A
        MOV       A,#((zdpMsgProcs + 2) >> 8) & 0xff
        ADDC      A,?V1
        MOV       DPH,A
        CLR       A
        MOVC      A,@A+DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x1
        MOVC      A,@A+DPTR
        MOV       DPH,A
        POP       DPL
          CFI CFA_SP SP+0
        LCALL     ?CALL_IND
        SJMP      ??ZDP_IncomingData_5
// 1932   }
// 1933 
// 1934   // Handle unhandled messages
// 1935   if ( !handled )
??ZDP_IncomingData_3:
        MOV       A,R2
        JNZ       ??ZDP_IncomingData_5
// 1936     ZDApp_InMsgCB( &inMsg );
        ; Setup parameters for call to function ZDApp_InMsgCB
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        LCALL     `??ZDApp_InMsgCB::?relay`; Banked call to: ZDApp_InMsgCB
// 1937 }
??ZDP_IncomingData_5:
        MOV       A,#0x15
        LJMP      ??Subroutine112_0 & 0xFFFF
          CFI EndBlock cfiBlock704

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine51:
          CFI Block cfiCond705 Using cfiCommon0
          CFI Function ZDP_IEEEAddrReq
          CFI Conditional ??CrossCallReturnLabel_304
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond706 Using cfiCommon0
          CFI (cfiCond706) Function ZDP_MatchDescReq
          CFI (cfiCond706) Conditional ??CrossCallReturnLabel_305
          CFI (cfiCond706) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond706) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond706) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond706) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond706) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond706) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond706) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond706) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond706) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond706) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond706) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond706) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond706) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond706) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond706) CFA_SP SP+-2
          CFI (cfiCond706) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond707 Using cfiCommon0
          CFI (cfiCond707) Function ZDP_ServerDiscReq
          CFI (cfiCond707) Conditional ??CrossCallReturnLabel_306
          CFI (cfiCond707) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond707) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond707) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond707) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond707) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond707) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond707) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond707) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond707) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond707) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond707) CFA_SP SP+-2
          CFI (cfiCond707) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond708 Using cfiCommon0
          CFI (cfiCond708) Function ZDP_SimpleDescMsg
          CFI (cfiCond708) Conditional ??CrossCallReturnLabel_307
          CFI (cfiCond708) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond708) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond708) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond708) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond708) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond708) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond708) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond708) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond708) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond708) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond708) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond708) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond708) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond708) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond708) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond708) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond708) CFA_SP SP+-2
          CFI (cfiCond708) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker709 Using cfiCommon1
          CFI (cfiPicker709) NoFunction
          CFI (cfiPicker709) Picker
        MOV       A,R1
        MOV       R6,A
        MOV       DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond705
          CFI EndBlock cfiCond706
          CFI EndBlock cfiCond707
          CFI EndBlock cfiCond708
          CFI EndBlock cfiPicker709
        REQUIRE ??Subroutine145_0
        ; // Fall through to label ??Subroutine145_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine145_0:
          CFI Block cfiCond710 Using cfiCommon0
          CFI Function ZDP_SendData
          CFI Conditional ??CrossCallReturnLabel_308
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond711 Using cfiCommon0
          CFI (cfiCond711) Function zdpProcessAddrReq
          CFI (cfiCond711) Conditional ??CrossCallReturnLabel_309
          CFI (cfiCond711) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond711) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond711) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond711) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond711) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond711) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond711) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond711) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond711) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond711) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond711) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond711) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond711) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond711) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond711) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond711) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond711) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond711) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond711) CFA_SP SP+-2
          CFI (cfiCond711) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond712 Using cfiCommon0
          CFI (cfiCond712) Function ZDP_GenericRsp
          CFI (cfiCond712) Conditional ??CrossCallReturnLabel_310
          CFI (cfiCond712) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond712) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond712) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond712) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond712) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond712) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond712) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond712) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond712) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond712) CFA_SP SP+-2
          CFI (cfiCond712) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond713 Using cfiCommon0
          CFI (cfiCond713) Function ZDP_EndDeviceBindReq
          CFI (cfiCond713) Conditional ??CrossCallReturnLabel_311
          CFI (cfiCond713) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond713) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond713) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond713) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond713) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond713) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond713) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond713) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond713) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond713) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond713) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond713) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond713) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond713) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond713) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond713) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond713) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond713) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond713) CFA_SP SP+-2
          CFI (cfiCond713) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond714 Using cfiCommon0
          CFI (cfiCond714) Function ZDP_EndDeviceBindReq
          CFI (cfiCond714) Conditional ??CrossCallReturnLabel_312
          CFI (cfiCond714) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond714) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond714) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond714) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond714) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond714) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond714) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond714) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond714) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond714) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond714) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond714) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond714) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond714) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond714) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond714) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond714) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond714) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond714) CFA_SP SP+-2
          CFI (cfiCond714) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond715 Using cfiCommon0
          CFI (cfiCond715) Function ZDO_SendMsgCBs
          CFI (cfiCond715) Conditional ??CrossCallReturnLabel_313
          CFI (cfiCond715) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond715) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond715) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond715) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond715) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond715) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond715) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond715) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond715) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond715) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond715) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond715) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond715) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond715) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond715) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond715) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond715) CFA_SP SP+-2
          CFI (cfiCond715) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond716 Using cfiCommon0
          CFI (cfiCond716) Function ZDP_IncomingData
          CFI (cfiCond716) Conditional ??CrossCallReturnLabel_314
          CFI (cfiCond716) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond716) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond716) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond716) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond716) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond716) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond716) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond716) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond716) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond716) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond716) CFA_SP SP+-2
          CFI (cfiCond716) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond717 Using cfiCommon0
          CFI (cfiCond717) Function ZDP_IncomingData
          CFI (cfiCond717) Conditional ??CrossCallReturnLabel_315
          CFI (cfiCond717) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond717) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond717) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond717) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond717) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond717) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond717) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond717) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond717) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond717) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond717) CFA_SP SP+-2
          CFI (cfiCond717) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond718 Using cfiCommon0
          CFI (cfiCond718) Function ZDP_IncomingData
          CFI (cfiCond718) Conditional ??CrossCallReturnLabel_316
          CFI (cfiCond718) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond718) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond718) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond718) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond718) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond718) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond718) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond718) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond718) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond718) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond718) CFA_SP SP+-2
          CFI (cfiCond718) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond719 Using cfiCommon0
          CFI (cfiCond719) Function ZDP_IEEEAddrReq
          CFI (cfiCond719) Conditional ??CrossCallReturnLabel_304
          CFI (cfiCond719) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond719) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond719) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond719) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond719) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond719) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond719) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond719) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond719) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond719) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond719) CFA_SP SP+-2
          CFI (cfiCond719) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond720 Using cfiCommon0
          CFI (cfiCond720) Function ZDP_MatchDescReq
          CFI (cfiCond720) Conditional ??CrossCallReturnLabel_305
          CFI (cfiCond720) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond720) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond720) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond720) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond720) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond720) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond720) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond720) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond720) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond720) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond720) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond720) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond720) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond720) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond720) CFA_SP SP+-2
          CFI (cfiCond720) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond721 Using cfiCommon0
          CFI (cfiCond721) Function ZDP_ServerDiscReq
          CFI (cfiCond721) Conditional ??CrossCallReturnLabel_306
          CFI (cfiCond721) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond721) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond721) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond721) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond721) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond721) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond721) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond721) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond721) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond721) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond721) CFA_SP SP+-2
          CFI (cfiCond721) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond722 Using cfiCommon0
          CFI (cfiCond722) Function ZDP_SimpleDescMsg
          CFI (cfiCond722) Conditional ??CrossCallReturnLabel_307
          CFI (cfiCond722) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond722) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond722) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond722) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond722) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond722) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond722) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond722) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond722) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond722) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond722) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond722) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond722) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond722) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond722) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond722) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond722) CFA_SP SP+-2
          CFI (cfiCond722) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker723 Using cfiCommon1
          CFI (cfiPicker723) NoFunction
          CFI (cfiPicker723) Picker
        LCALL     ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_321:
        RET
          CFI EndBlock cfiCond710
          CFI EndBlock cfiCond711
          CFI EndBlock cfiCond712
          CFI EndBlock cfiCond713
          CFI EndBlock cfiCond714
          CFI EndBlock cfiCond715
          CFI EndBlock cfiCond716
          CFI EndBlock cfiCond717
          CFI EndBlock cfiCond718
          CFI EndBlock cfiCond719
          CFI EndBlock cfiCond720
          CFI EndBlock cfiCond721
          CFI EndBlock cfiCond722
          CFI EndBlock cfiPicker723

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine83:
          CFI Block cfiCond724 Using cfiCommon0
          CFI Function fillAndSend
          CFI Conditional ??CrossCallReturnLabel_318, ??CrossCallReturnLabel_66
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond725 Using cfiCommon0
          CFI (cfiCond725) Function ZDP_NwkAddrReq
          CFI (cfiCond725) Conditional ??CrossCallReturnLabel_318, ??CrossCallReturnLabel_67
          CFI (cfiCond725) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond725) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond725) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond725) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond725) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond725) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond725) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond725) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond725) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond725) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond725) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond725) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond725) CFA_SP SP+-4
          CFI (cfiCond725) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond726 Using cfiCommon0
          CFI (cfiCond726) Function zdpProcessAddrReq
          CFI (cfiCond726) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_159
          CFI (cfiCond726) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond726) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond726) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond726) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond726) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond726) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond726) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond726) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond726) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond726) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond726) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond726) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond726) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond726) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond726) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond726) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond726) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond726) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond726) CFA_SP SP+-4
          CFI (cfiCond726) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond727 Using cfiCommon0
          CFI (cfiCond727) Function zdpProcessAddrReq
          CFI (cfiCond727) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_160
          CFI (cfiCond727) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond727) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond727) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond727) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond727) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond727) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond727) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond727) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond727) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond727) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond727) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond727) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond727) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond727) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond727) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond727) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond727) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond727) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond727) CFA_SP SP+-4
          CFI (cfiCond727) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond728 Using cfiCommon0
          CFI (cfiCond728) Function ZDO_RemoveRegisteredCB
          CFI (cfiCond728) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_158
          CFI (cfiCond728) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond728) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond728) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond728) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond728) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond728) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond728) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond728) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond728) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond728) CFA_SP SP+-4
          CFI (cfiCond728) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond729 Using cfiCommon0
          CFI (cfiCond729) Function ZDP_UserDescSet
          CFI (cfiCond729) Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_49
          CFI (cfiCond729) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond729) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond729) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond729) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond729) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond729) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond729) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond729) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond729) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond729) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond729) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond729) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond729) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond729) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond729) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond729) CFA_SP SP+-4
          CFI (cfiCond729) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond730 Using cfiCommon0
          CFI (cfiCond730) Function ZDP_NodeDescMsg
          CFI (cfiCond730) Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_50
          CFI (cfiCond730) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond730) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond730) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond730) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond730) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond730) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond730) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond730) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond730) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond730) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond730) CFA_SP SP+-4
          CFI (cfiCond730) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond731 Using cfiCommon0
          CFI (cfiCond731) Function ZDP_PowerDescMsg
          CFI (cfiCond731) Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_51
          CFI (cfiCond731) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond731) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond731) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond731) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond731) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond731) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond731) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond731) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond731) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond731) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond731) CFA_SP SP+-4
          CFI (cfiCond731) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond732 Using cfiCommon0
          CFI (cfiCond732) Function ZDP_PowerDescMsg
          CFI (cfiCond732) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_176
          CFI (cfiCond732) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond732) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond732) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond732) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond732) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond732) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond732) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond732) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond732) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond732) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond732) CFA_SP SP+-4
          CFI (cfiCond732) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond733 Using cfiCommon0
          CFI (cfiCond733) Function ZDP_EPRsp
          CFI (cfiCond733) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_177
          CFI (cfiCond733) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond733) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond733) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond733) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond733) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond733) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond733) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond733) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond733) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond733) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond733) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond733) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond733) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond733) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond733) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond733) CFA_SP SP+-4
          CFI (cfiCond733) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond734 Using cfiCommon0
          CFI (cfiCond734) Function ZDP_ServerDiscRsp
          CFI (cfiCond734) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_178
          CFI (cfiCond734) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond734) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond734) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond734) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond734) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond734) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond734) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond734) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond734) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond734) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond734) CFA_SP SP+-4
          CFI (cfiCond734) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond735 Using cfiCommon0
          CFI (cfiCond735) Function ZDP_ServerDiscRsp
          CFI (cfiCond735) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_174
          CFI (cfiCond735) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond735) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond735) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond735) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond735) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond735) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond735) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond735) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond735) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond735) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond735) CFA_SP SP+-4
          CFI (cfiCond735) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond736 Using cfiCommon0
          CFI (cfiCond736) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond736) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_175
          CFI (cfiCond736) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond736) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond736) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond736) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond736) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond736) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond736) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond736) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond736) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond736) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond736) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond736) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond736) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond736) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond736) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond736) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond736) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond736) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond736) CFA_SP SP+-4
          CFI (cfiCond736) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond737 Using cfiCommon0
          CFI (cfiCond737) Function ZDP_IEEEAddrReq
          CFI (cfiCond737) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_304
          CFI (cfiCond737) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond737) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond737) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond737) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond737) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond737) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond737) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond737) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond737) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond737) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond737) CFA_SP SP+-4
          CFI (cfiCond737) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond738 Using cfiCommon0
          CFI (cfiCond738) Function ZDP_MatchDescReq
          CFI (cfiCond738) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_305
          CFI (cfiCond738) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond738) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond738) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond738) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond738) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond738) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond738) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond738) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond738) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond738) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond738) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond738) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond738) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond738) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond738) CFA_SP SP+-4
          CFI (cfiCond738) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond739 Using cfiCommon0
          CFI (cfiCond739) Function ZDP_ServerDiscReq
          CFI (cfiCond739) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_306
          CFI (cfiCond739) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond739) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond739) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond739) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond739) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond739) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond739) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond739) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond739) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond739) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond739) CFA_SP SP+-4
          CFI (cfiCond739) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond740 Using cfiCommon0
          CFI (cfiCond740) Function ZDP_SimpleDescMsg
          CFI (cfiCond740) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_307
          CFI (cfiCond740) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond740) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond740) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond740) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond740) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond740) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond740) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond740) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond740) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond740) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond740) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond740) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond740) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond740) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond740) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond740) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond740) CFA_SP SP+-4
          CFI (cfiCond740) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond741 Using cfiCommon0
          CFI (cfiCond741) Function ZDP_SendData
          CFI (cfiCond741) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_308
          CFI (cfiCond741) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond741) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond741) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond741) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond741) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond741) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond741) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond741) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond741) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond741) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond741) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond741) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond741) CFA_SP SP+-4
          CFI (cfiCond741) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond742 Using cfiCommon0
          CFI (cfiCond742) Function zdpProcessAddrReq
          CFI (cfiCond742) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_309
          CFI (cfiCond742) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond742) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond742) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond742) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond742) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond742) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond742) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond742) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond742) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond742) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond742) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond742) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond742) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond742) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond742) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond742) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond742) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond742) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond742) CFA_SP SP+-4
          CFI (cfiCond742) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond743 Using cfiCommon0
          CFI (cfiCond743) Function ZDP_GenericRsp
          CFI (cfiCond743) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_310
          CFI (cfiCond743) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond743) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond743) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond743) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond743) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond743) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond743) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond743) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond743) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond743) CFA_SP SP+-4
          CFI (cfiCond743) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond744 Using cfiCommon0
          CFI (cfiCond744) Function ZDP_EndDeviceBindReq
          CFI (cfiCond744) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_311
          CFI (cfiCond744) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond744) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond744) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond744) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond744) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond744) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond744) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond744) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond744) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond744) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond744) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond744) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond744) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond744) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond744) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond744) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond744) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond744) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond744) CFA_SP SP+-4
          CFI (cfiCond744) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond745 Using cfiCommon0
          CFI (cfiCond745) Function ZDP_EndDeviceBindReq
          CFI (cfiCond745) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_312
          CFI (cfiCond745) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond745) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond745) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond745) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond745) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond745) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond745) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond745) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond745) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond745) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond745) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond745) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond745) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond745) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond745) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond745) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond745) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond745) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond745) CFA_SP SP+-4
          CFI (cfiCond745) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond746 Using cfiCommon0
          CFI (cfiCond746) Function ZDO_SendMsgCBs
          CFI (cfiCond746) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_313
          CFI (cfiCond746) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond746) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond746) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond746) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond746) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond746) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond746) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond746) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond746) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond746) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond746) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond746) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond746) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond746) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond746) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond746) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond746) CFA_SP SP+-4
          CFI (cfiCond746) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond747 Using cfiCommon0
          CFI (cfiCond747) Function ZDP_IncomingData
          CFI (cfiCond747) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_314
          CFI (cfiCond747) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond747) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond747) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond747) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond747) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond747) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond747) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond747) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond747) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond747) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond747) CFA_SP SP+-4
          CFI (cfiCond747) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond748 Using cfiCommon0
          CFI (cfiCond748) Function ZDP_IncomingData
          CFI (cfiCond748) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_315
          CFI (cfiCond748) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond748) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond748) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond748) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond748) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond748) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond748) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond748) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond748) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond748) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond748) CFA_SP SP+-4
          CFI (cfiCond748) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond749 Using cfiCommon0
          CFI (cfiCond749) Function ZDP_IncomingData
          CFI (cfiCond749) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_316
          CFI (cfiCond749) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond749) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond749) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond749) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond749) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond749) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond749) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond749) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond749) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond749) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond749) CFA_SP SP+-4
          CFI (cfiCond749) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiPicker750 Using cfiCommon1
          CFI (cfiPicker750) NoFunction
          CFI (cfiPicker750) Picker
        LCALL     ??Subroutine146_0 & 0xFFFF
??CrossCallReturnLabel_328:
        MOV       R1,A
        RET
          CFI EndBlock cfiCond724
          CFI EndBlock cfiCond725
          CFI EndBlock cfiCond726
          CFI EndBlock cfiCond727
          CFI EndBlock cfiCond728
          CFI EndBlock cfiCond729
          CFI EndBlock cfiCond730
          CFI EndBlock cfiCond731
          CFI EndBlock cfiCond732
          CFI EndBlock cfiCond733
          CFI EndBlock cfiCond734
          CFI EndBlock cfiCond735
          CFI EndBlock cfiCond736
          CFI EndBlock cfiCond737
          CFI EndBlock cfiCond738
          CFI EndBlock cfiCond739
          CFI EndBlock cfiCond740
          CFI EndBlock cfiCond741
          CFI EndBlock cfiCond742
          CFI EndBlock cfiCond743
          CFI EndBlock cfiCond744
          CFI EndBlock cfiCond745
          CFI EndBlock cfiCond746
          CFI EndBlock cfiCond747
          CFI EndBlock cfiCond748
          CFI EndBlock cfiCond749
          CFI EndBlock cfiPicker750

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine106:
          CFI Block cfiCond751 Using cfiCommon0
          CFI Function ZDP_DeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_325
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond752 Using cfiCommon0
          CFI (cfiCond752) Function ZDP_UserDescSet
          CFI (cfiCond752) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_87
          CFI (cfiCond752) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond752) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond752) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond752) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond752) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond752) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond752) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond752) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond752) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond752) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond752) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond752) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond752) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond752) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond752) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond752) CFA_SP SP+-4
          CFI (cfiCond752) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond753 Using cfiCommon0
          CFI (cfiCond753) Function ZDP_UserDescRsp
          CFI (cfiCond753) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_88
          CFI (cfiCond753) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond753) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond753) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond753) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond753) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond753) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond753) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond753) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond753) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond753) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond753) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond753) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond753) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond753) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond753) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond753) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond753) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond753) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond753) CFA_SP SP+-4
          CFI (cfiCond753) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond754 Using cfiCommon0
          CFI (cfiCond754) Function ZDP_MgmtDirectJoinReq
          CFI (cfiCond754) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_213
          CFI (cfiCond754) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond754) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond754) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond754) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond754) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond754) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond754) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond754) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond754) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond754) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond754) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond754) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond754) CFA_SP SP+-4
          CFI (cfiCond754) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond755 Using cfiCommon0
          CFI (cfiCond755) Function ZDP_MgmtLeaveReq
          CFI (cfiCond755) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_214
          CFI (cfiCond755) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond755) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond755) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond755) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond755) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond755) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond755) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond755) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond755) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond755) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond755) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond755) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond755) CFA_SP SP+-4
          CFI (cfiCond755) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond756 Using cfiCommon0
          CFI (cfiCond756) Function ZDP_MgmtLeaveReq
          CFI (cfiCond756) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_215
          CFI (cfiCond756) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond756) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond756) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond756) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond756) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond756) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond756) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond756) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond756) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond756) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond756) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond756) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond756) CFA_SP SP+-4
          CFI (cfiCond756) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond757 Using cfiCommon0
          CFI (cfiCond757) Function ZDP_MgmtLeaveReq
          CFI (cfiCond757) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_216
          CFI (cfiCond757) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond757) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond757) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond757) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond757) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond757) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond757) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond757) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond757) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond757) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond757) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond757) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond757) CFA_SP SP+-4
          CFI (cfiCond757) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker758 Using cfiCommon1
          CFI (cfiPicker758) NoFunction
          CFI (cfiPicker758) Picker
        MOV       DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond751
          CFI EndBlock cfiCond752
          CFI EndBlock cfiCond753
          CFI EndBlock cfiCond754
          CFI EndBlock cfiCond755
          CFI EndBlock cfiCond756
          CFI EndBlock cfiCond757
          CFI EndBlock cfiPicker758
        REQUIRE ??Subroutine146_0
        ; // Fall through to label ??Subroutine146_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine146_0:
          CFI Block cfiCond759 Using cfiCommon0
          CFI Function ZDP_UserDescRsp
          CFI Conditional ??CrossCallReturnLabel_322
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond760 Using cfiCommon0
          CFI (cfiCond760) Function ZDP_EPRsp
          CFI (cfiCond760) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_12
          CFI (cfiCond760) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond760) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond760) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond760) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond760) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond760) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond760) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond760) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond760) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond760) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond760) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond760) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond760) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond760) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond760) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond760) CFA_SP SP+-6
          CFI (cfiCond760) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond761 Using cfiCommon0
          CFI (cfiCond761) Function ZDP_EndDeviceBindReq
          CFI (cfiCond761) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_13
          CFI (cfiCond761) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond761) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond761) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond761) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond761) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond761) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond761) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond761) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond761) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond761) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond761) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond761) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond761) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond761) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond761) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond761) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond761) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond761) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond761) CFA_SP SP+-6
          CFI (cfiCond761) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond762 Using cfiCommon0
          CFI (cfiCond762) Function ZDP_BindUnbindReq
          CFI (cfiCond762) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_14
          CFI (cfiCond762) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond762) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond762) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond762) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond762) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond762) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond762) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond762) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond762) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond762) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond762) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond762) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond762) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond762) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond762) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond762) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond762) CFA_SP SP+-6
          CFI (cfiCond762) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond763 Using cfiCommon0
          CFI (cfiCond763) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond763) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_125, ??CrossCallReturnLabel_29
          CFI (cfiCond763) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond763) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond763) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond763) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond763) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond763) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond763) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond763) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond763) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond763) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond763) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond763) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond763) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond763) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond763) CFA_SP SP+-6
          CFI (cfiCond763) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond764 Using cfiCommon0
          CFI (cfiCond764) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond764) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_125, ??CrossCallReturnLabel_30
          CFI (cfiCond764) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond764) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond764) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond764) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond764) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond764) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond764) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond764) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond764) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond764) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond764) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond764) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond764) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond764) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond764) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond764) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond764) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond764) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond764) CFA_SP SP+-6
          CFI (cfiCond764) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond765 Using cfiCommon0
          CFI (cfiCond765) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond765) Conditional ??CrossCallReturnLabel_323
          CFI (cfiCond765) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond765) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond765) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond765) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond765) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond765) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond765) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond765) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond765) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond765) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond765) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond765) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond765) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond765) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond765) CFA_SP SP+-2
          CFI (cfiCond765) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond766 Using cfiCommon0
          CFI (cfiCond766) Function fillAndSend
          CFI (cfiCond766) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_318, ??CrossCallReturnLabel_66
          CFI (cfiCond766) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond766) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond766) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond766) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond766) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond766) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond766) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond766) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond766) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond766) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond766) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond766) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond766) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond766) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond766) CFA_SP SP+-6
          CFI (cfiCond766) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond767 Using cfiCommon0
          CFI (cfiCond767) Function ZDP_NwkAddrReq
          CFI (cfiCond767) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_318, ??CrossCallReturnLabel_67
          CFI (cfiCond767) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond767) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond767) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond767) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond767) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond767) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond767) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond767) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond767) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond767) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond767) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond767) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond767) CFA_SP SP+-6
          CFI (cfiCond767) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond768 Using cfiCommon0
          CFI (cfiCond768) Function zdpProcessAddrReq
          CFI (cfiCond768) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_159
          CFI (cfiCond768) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond768) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond768) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond768) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond768) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond768) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond768) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond768) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond768) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond768) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond768) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond768) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond768) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond768) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond768) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond768) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond768) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond768) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond768) CFA_SP SP+-6
          CFI (cfiCond768) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond769 Using cfiCommon0
          CFI (cfiCond769) Function zdpProcessAddrReq
          CFI (cfiCond769) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_160
          CFI (cfiCond769) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond769) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond769) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond769) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond769) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond769) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond769) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond769) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond769) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond769) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond769) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond769) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond769) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond769) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond769) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond769) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond769) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond769) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond769) CFA_SP SP+-6
          CFI (cfiCond769) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond770 Using cfiCommon0
          CFI (cfiCond770) Function ZDO_RemoveRegisteredCB
          CFI (cfiCond770) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_158
          CFI (cfiCond770) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond770) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond770) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond770) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond770) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond770) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond770) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond770) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond770) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond770) CFA_SP SP+-6
          CFI (cfiCond770) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond771 Using cfiCommon0
          CFI (cfiCond771) Function ZDP_UserDescSet
          CFI (cfiCond771) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_49
          CFI (cfiCond771) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond771) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond771) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond771) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond771) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond771) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond771) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond771) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond771) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond771) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond771) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond771) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond771) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond771) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond771) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond771) CFA_SP SP+-6
          CFI (cfiCond771) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond772 Using cfiCommon0
          CFI (cfiCond772) Function ZDP_NodeDescMsg
          CFI (cfiCond772) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_50
          CFI (cfiCond772) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond772) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond772) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond772) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond772) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond772) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond772) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond772) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond772) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond772) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond772) CFA_SP SP+-6
          CFI (cfiCond772) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond773 Using cfiCommon0
          CFI (cfiCond773) Function ZDP_PowerDescMsg
          CFI (cfiCond773) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_51
          CFI (cfiCond773) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond773) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond773) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond773) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond773) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond773) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond773) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond773) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond773) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond773) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond773) CFA_SP SP+-6
          CFI (cfiCond773) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond774 Using cfiCommon0
          CFI (cfiCond774) Function ZDP_PowerDescMsg
          CFI (cfiCond774) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_176
          CFI (cfiCond774) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond774) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond774) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond774) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond774) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond774) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond774) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond774) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond774) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond774) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond774) CFA_SP SP+-6
          CFI (cfiCond774) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond775 Using cfiCommon0
          CFI (cfiCond775) Function ZDP_EPRsp
          CFI (cfiCond775) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_177
          CFI (cfiCond775) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond775) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond775) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond775) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond775) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond775) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond775) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond775) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond775) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond775) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond775) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond775) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond775) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond775) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond775) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond775) CFA_SP SP+-6
          CFI (cfiCond775) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond776 Using cfiCommon0
          CFI (cfiCond776) Function ZDP_ServerDiscRsp
          CFI (cfiCond776) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_178
          CFI (cfiCond776) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond776) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond776) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond776) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond776) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond776) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond776) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond776) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond776) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond776) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond776) CFA_SP SP+-6
          CFI (cfiCond776) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond777 Using cfiCommon0
          CFI (cfiCond777) Function ZDP_ServerDiscRsp
          CFI (cfiCond777) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_174
          CFI (cfiCond777) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond777) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond777) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond777) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond777) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond777) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond777) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond777) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond777) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond777) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond777) CFA_SP SP+-6
          CFI (cfiCond777) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond778 Using cfiCommon0
          CFI (cfiCond778) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond778) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_175
          CFI (cfiCond778) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond778) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond778) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond778) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond778) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond778) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond778) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond778) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond778) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond778) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond778) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond778) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond778) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond778) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond778) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond778) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond778) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond778) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond778) CFA_SP SP+-6
          CFI (cfiCond778) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond779 Using cfiCommon0
          CFI (cfiCond779) Function ZDP_IEEEAddrReq
          CFI (cfiCond779) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_304
          CFI (cfiCond779) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond779) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond779) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond779) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond779) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond779) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond779) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond779) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond779) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond779) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond779) CFA_SP SP+-6
          CFI (cfiCond779) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond780 Using cfiCommon0
          CFI (cfiCond780) Function ZDP_MatchDescReq
          CFI (cfiCond780) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_305
          CFI (cfiCond780) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond780) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond780) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond780) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond780) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond780) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond780) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond780) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond780) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond780) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond780) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond780) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond780) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond780) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond780) CFA_SP SP+-6
          CFI (cfiCond780) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond781 Using cfiCommon0
          CFI (cfiCond781) Function ZDP_ServerDiscReq
          CFI (cfiCond781) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_306
          CFI (cfiCond781) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond781) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond781) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond781) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond781) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond781) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond781) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond781) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond781) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond781) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond781) CFA_SP SP+-6
          CFI (cfiCond781) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond782 Using cfiCommon0
          CFI (cfiCond782) Function ZDP_SimpleDescMsg
          CFI (cfiCond782) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_307
          CFI (cfiCond782) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond782) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond782) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond782) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond782) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond782) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond782) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond782) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond782) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond782) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond782) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond782) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond782) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond782) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond782) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond782) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond782) CFA_SP SP+-6
          CFI (cfiCond782) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond783 Using cfiCommon0
          CFI (cfiCond783) Function ZDP_SendData
          CFI (cfiCond783) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_308
          CFI (cfiCond783) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond783) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond783) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond783) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond783) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond783) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond783) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond783) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond783) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond783) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond783) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond783) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond783) CFA_SP SP+-6
          CFI (cfiCond783) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond784 Using cfiCommon0
          CFI (cfiCond784) Function zdpProcessAddrReq
          CFI (cfiCond784) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_309
          CFI (cfiCond784) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond784) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond784) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond784) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond784) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond784) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond784) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond784) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond784) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond784) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond784) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond784) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond784) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond784) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond784) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond784) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond784) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond784) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond784) CFA_SP SP+-6
          CFI (cfiCond784) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond785 Using cfiCommon0
          CFI (cfiCond785) Function ZDP_GenericRsp
          CFI (cfiCond785) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_310
          CFI (cfiCond785) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond785) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond785) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond785) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond785) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond785) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond785) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond785) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond785) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond785) CFA_SP SP+-6
          CFI (cfiCond785) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond786 Using cfiCommon0
          CFI (cfiCond786) Function ZDP_EndDeviceBindReq
          CFI (cfiCond786) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_311
          CFI (cfiCond786) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond786) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond786) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond786) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond786) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond786) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond786) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond786) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond786) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond786) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond786) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond786) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond786) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond786) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond786) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond786) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond786) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond786) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond786) CFA_SP SP+-6
          CFI (cfiCond786) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond787 Using cfiCommon0
          CFI (cfiCond787) Function ZDP_EndDeviceBindReq
          CFI (cfiCond787) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_312
          CFI (cfiCond787) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond787) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond787) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond787) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond787) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond787) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond787) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond787) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond787) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond787) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond787) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond787) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond787) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond787) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond787) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond787) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond787) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond787) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond787) CFA_SP SP+-6
          CFI (cfiCond787) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond788 Using cfiCommon0
          CFI (cfiCond788) Function ZDO_SendMsgCBs
          CFI (cfiCond788) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_313
          CFI (cfiCond788) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond788) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond788) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond788) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond788) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond788) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond788) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond788) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond788) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond788) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond788) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond788) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond788) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond788) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond788) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond788) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond788) CFA_SP SP+-6
          CFI (cfiCond788) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond789 Using cfiCommon0
          CFI (cfiCond789) Function ZDP_IncomingData
          CFI (cfiCond789) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_314
          CFI (cfiCond789) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond789) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond789) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond789) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond789) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond789) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond789) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond789) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond789) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond789) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond789) CFA_SP SP+-6
          CFI (cfiCond789) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond790 Using cfiCommon0
          CFI (cfiCond790) Function ZDP_IncomingData
          CFI (cfiCond790) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_315
          CFI (cfiCond790) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond790) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond790) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond790) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond790) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond790) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond790) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond790) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond790) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond790) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond790) CFA_SP SP+-6
          CFI (cfiCond790) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond791 Using cfiCommon0
          CFI (cfiCond791) Function ZDP_IncomingData
          CFI (cfiCond791) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_316
          CFI (cfiCond791) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond791) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond791) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond791) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond791) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond791) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond791) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond791) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond791) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond791) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond791) CFA_SP SP+-6
          CFI (cfiCond791) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond792 Using cfiCommon0
          CFI (cfiCond792) Function ZDP_DeviceAnnce
          CFI (cfiCond792) Conditional ??CrossCallReturnLabel_325
          CFI (cfiCond792) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond792) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond792) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond792) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond792) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond792) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond792) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond792) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond792) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond792) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond792) CFA_SP SP+-2
          CFI (cfiCond792) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond793 Using cfiCommon0
          CFI (cfiCond793) Function ZDP_UserDescSet
          CFI (cfiCond793) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_87
          CFI (cfiCond793) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond793) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond793) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond793) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond793) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond793) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond793) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond793) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond793) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond793) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond793) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond793) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond793) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond793) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond793) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond793) CFA_SP SP+-4
          CFI (cfiCond793) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond794 Using cfiCommon0
          CFI (cfiCond794) Function ZDP_UserDescRsp
          CFI (cfiCond794) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_88
          CFI (cfiCond794) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond794) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond794) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond794) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond794) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond794) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond794) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond794) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond794) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond794) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond794) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond794) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond794) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond794) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond794) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond794) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond794) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond794) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond794) CFA_SP SP+-4
          CFI (cfiCond794) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond795 Using cfiCommon0
          CFI (cfiCond795) Function ZDP_MgmtDirectJoinReq
          CFI (cfiCond795) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_213
          CFI (cfiCond795) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond795) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond795) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond795) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond795) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond795) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond795) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond795) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond795) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond795) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond795) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond795) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond795) CFA_SP SP+-4
          CFI (cfiCond795) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond796 Using cfiCommon0
          CFI (cfiCond796) Function ZDP_MgmtLeaveReq
          CFI (cfiCond796) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_214
          CFI (cfiCond796) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond796) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond796) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond796) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond796) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond796) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond796) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond796) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond796) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond796) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond796) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond796) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond796) CFA_SP SP+-4
          CFI (cfiCond796) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond797 Using cfiCommon0
          CFI (cfiCond797) Function ZDP_MgmtLeaveReq
          CFI (cfiCond797) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_215
          CFI (cfiCond797) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond797) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond797) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond797) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond797) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond797) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond797) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond797) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond797) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond797) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond797) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond797) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond797) CFA_SP SP+-4
          CFI (cfiCond797) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond798 Using cfiCommon0
          CFI (cfiCond798) Function ZDP_MgmtLeaveReq
          CFI (cfiCond798) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_216
          CFI (cfiCond798) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond798) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond798) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond798) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond798) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond798) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond798) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond798) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond798) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond798) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond798) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond798) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond798) CFA_SP SP+-4
          CFI (cfiCond798) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker799 Using cfiCommon1
          CFI (cfiPicker799) NoFunction
          CFI (cfiPicker799) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond759
          CFI EndBlock cfiCond760
          CFI EndBlock cfiCond761
          CFI EndBlock cfiCond762
          CFI EndBlock cfiCond763
          CFI EndBlock cfiCond764
          CFI EndBlock cfiCond765
          CFI EndBlock cfiCond766
          CFI EndBlock cfiCond767
          CFI EndBlock cfiCond768
          CFI EndBlock cfiCond769
          CFI EndBlock cfiCond770
          CFI EndBlock cfiCond771
          CFI EndBlock cfiCond772
          CFI EndBlock cfiCond773
          CFI EndBlock cfiCond774
          CFI EndBlock cfiCond775
          CFI EndBlock cfiCond776
          CFI EndBlock cfiCond777
          CFI EndBlock cfiCond778
          CFI EndBlock cfiCond779
          CFI EndBlock cfiCond780
          CFI EndBlock cfiCond781
          CFI EndBlock cfiCond782
          CFI EndBlock cfiCond783
          CFI EndBlock cfiCond784
          CFI EndBlock cfiCond785
          CFI EndBlock cfiCond786
          CFI EndBlock cfiCond787
          CFI EndBlock cfiCond788
          CFI EndBlock cfiCond789
          CFI EndBlock cfiCond790
          CFI EndBlock cfiCond791
          CFI EndBlock cfiCond792
          CFI EndBlock cfiCond793
          CFI EndBlock cfiCond794
          CFI EndBlock cfiCond795
          CFI EndBlock cfiCond796
          CFI EndBlock cfiCond797
          CFI EndBlock cfiCond798
          CFI EndBlock cfiPicker799

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine29:
          CFI Block cfiCond800 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_31
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond801 Using cfiCommon0
          CFI (cfiCond801) Function ZDP_IncomingData
          CFI (cfiCond801) Conditional ??CrossCallReturnLabel_32
          CFI (cfiCond801) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond801) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond801) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond801) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond801) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond801) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond801) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond801) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond801) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond801) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond801) CFA_SP SP+-2
          CFI (cfiCond801) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiPicker802 Using cfiCommon1
          CFI (cfiPicker802) NoFunction
          CFI (cfiPicker802) Picker
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_141:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond800
          CFI EndBlock cfiCond801
          CFI EndBlock cfiPicker802

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for ZDP_TmpBuf>`:
        DATA16
        DW ZDP_Buf + 1H

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??fillAndSend::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    fillAndSend

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_SendData::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_SendData

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_NWKAddrOfInterestReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_NWKAddrOfInterestReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_NwkAddrReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_NwkAddrReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_IEEEAddrReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_IEEEAddrReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MatchDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MatchDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_SimpleDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_SimpleDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_UserDescSet::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_UserDescSet

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_ServerDiscReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_ServerDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_DeviceAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_DeviceAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zdpProcessAddrReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zdpProcessAddrReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_NodeDescMsg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_NodeDescMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_PowerDescMsg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_PowerDescMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_SimpleDescMsg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_SimpleDescMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_EPRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_EPRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_UserDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_UserDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_ServerDiscRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_ServerDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_GenericRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_GenericRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_EndDeviceBindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_EndDeviceBindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_BindUnbindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_BindUnbindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtNwkDiscReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtNwkDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtDirectJoinReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtDirectJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtPermitJoinReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtPermitJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtLeaveReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtLeaveReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtNwkUpdateReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtNwkUpdateReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtNwkDiscRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtNwkDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtLqiRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtLqiRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtRtgRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtRtgRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtBindRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtBindRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtNwkUpdateNotify::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtNwkUpdateNotify

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_RegisterForZDOMsg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_RegisterForZDOMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_RemoveRegisteredCB::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_RemoveRegisteredCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_SendMsgCBs::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_SendMsgCBs

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_IncomingData::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_IncomingData

        END
// 1938 
// 1939 /*********************************************************************
// 1940 *********************************************************************/
// 1941 
// 
// 6 608 bytes in segment BANKED_CODE
//   204 bytes in segment BANK_RELAYS
//    37 bytes in segment CODE_C
//     2 bytes in segment XDATA_I
//     2 bytes in segment XDATA_ID
//    84 bytes in segment XDATA_Z
// 
//   243 bytes of CODE     memory
// 6 608 bytes of HUGECODE memory
//    86 bytes of XDATA    memory
//
//Errors: none
//Warnings: none
